{"version":3,"sources":["__generated__/PeopleQuery.graphql.ts","__generated__/ProfileQuery.graphql.ts","__generated__/RandomQuoteQuery.graphql.ts","__generated__/QuotePageQuery.graphql.ts","__generated__/EventsQuery.graphql.ts","__generated__/ActionBarSubmitMutation.graphql.ts","__generated__/RandomMemoryListQuery.graphql.ts","__generated__/MatchingMemoryPage_rem.graphql.ts","__generated__/MatchingMemoryPageQuery.graphql.ts","__generated__/MatchingMemoryListQuery.graphql.ts","__generated__/RemEntryQuery.graphql.ts","common/errors.ts","common/Transport.ts","common/Role.tsx","common/PendingDiff.tsx","SideNav.tsx","dashboard/Dashboard.tsx","people/Person.tsx","people/People.tsx","common/Chart.tsx","profile/Profile.tsx","quotes/queryMode.ts","quotes/Quote.tsx","quotes/RandomQuote.tsx","quotes/QuotePage.tsx","quotes/Quotes.tsx","events/FeedForm.tsx","events/Events.tsx","recent/queryTypes.ts","recent/selection.ts","recent/Line.tsx","recent/History.tsx","recent/ActionBar.tsx","recent/Recent.tsx","rem/RemForm.tsx","common/Notifications.tsx","common/Loading.tsx","rem/RandomMemoryList.tsx","rem/MatchingMemoryPage.tsx","rem/MatchingMemoryList.tsx","rem/Rem.tsx","common/urlSearch.ts","rem/RemEntry.tsx","common/coordinator.ts","common/CoordinatorContainer.tsx","admin/services/ServicePath.tsx","admin/services/ServiceDisplay.tsx","admin/services/Services.tsx","admin/services/serviceTypes.ts","common/ToggleableInput.tsx","admin/services/EnvVarEditor.tsx","admin/services/EnvVarListEditor.tsx","admin/services/SecretEditor.tsx","admin/services/SecretListEditor.tsx","admin/services/VolumeListEditor.tsx","admin/services/PortListEditor.tsx","admin/services/ServiceForm.tsx","admin/services/ServiceEditor.tsx","admin/sync/DeltaView.tsx","admin/sync/SyncReportView.tsx","admin/sync/SyncView.tsx","admin/sync/Sync.tsx","Authenticated.tsx","Banner.tsx","Login.tsx","App.tsx","serviceWorker.ts","index.tsx","__generated__/AppQuery.graphql.ts","__generated__/RecentChannelQuery.graphql.ts","__generated__/RecentHistoryQuery.graphql.ts"],"names":["__webpack_require__","r","__webpack_exports__","node","v0","kind","alias","name","args","storageKey","v1","v2","concreteType","plural","selections","v3","v4","value","v5","v6","v7","v8","fragment","type","metadata","argumentDefinitions","operation","params","operationKind","id","text","hash","defaultValue","variableName","v9","v10","v11","connection","count","cursor","direction","path","handle","key","filters","NETWORK_ERROR_MARKER","Symbol","GRAPHQL_ERROR_MARKER","isNetworkError","err","marker","createNetworkError","_x","_x2","_x3","_createNetworkError","apply","this","arguments","_callee","message","url","response","regenerator_default","a","wrap","_context","prev","next","Error","requestURL","responseStatus","status","responseText","sent","abrupt","stop","createGraphQLError","errors","Object","toConsumableArray","API_URL","concat","process","AUTH_URL","request","variables","payload","fetch","method","headers","content-type","credentials","body","JSON","stringify","query","ok","json","source","RecordSource","network","Network","create","getEnvironment","store","Store","Environment","UserContext","React","createContext","Role","props","user","useContext","roles","some","role","children","nullDelta","units_to_add","units_to_change","units_to_restart","units_to_remove","files_to_write","hasPendingDelta","delta","arr","length","PendingDiffContext","refresh","PendingDiffProvider","_useState","useState","_useState2","slicedToArray","setDelta","_useState3","_useState4","latch","setLatch","useEffect","ignore","asyncToGenerator","mark","coordinator","getDiff","catch","pendingDiff","current","react_default","createElement","Provider","Pill","className","react_router_dom","to","exact","activeClassName","SideNav","showBadge","Role_Role","Fragment","Dashboard","Person","_props$user","presence","avatar","avatarURL","image48","presenceIcon","src","alt","aria-hidden","title","People","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","environment","renderResult","_ref","error","collateUsers","map","_ref2","inherits","createClass","_graphql","react_relay","render","titles","titlesByUsername","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","all","edges","iterator","done","subject","return","userData","users","sort","b","localeCompare","Component","Chartist","plugins","ctHtmlLabels","chart","on","context","element","empty","_node","innerHTML","Chart","_getPrototypeOf2","_len","Array","_key","refElement","_this2","ref","c","options","Bar","data","detach","Profile","emoji","image192","renderReactionsReceivedChart","renderReactionsGivenChart","match","renderTitles","renderQuoteRank","EmojiConverter","img_sets","apple","sheet","use_sheet","include_title","Profile_graphql","username","titleCriteria","renderReactionChart","topReactionsGiven","topReactionsReceived","results","labels","each","replace_colons","series","Chart_Chart","low","axisY","onlyInteger","_this3","t","titleFrom","quotes","rank","test","CONTAINING","when","cases","containing","default","label","BY","by","ABOUT","about","modes","Quote","RandomQuote","lastQuote","quoteText","documents","random","onClick","another","setState","state","RandomQuote_graphql","QuotePage","lastTotal","lastResults","renderDocuments","pageInfo","QuotePage_graphql","criteria","mode","speakers","people","mentions","total","document","more","Quotes","didChangeMode","event","find","target","writeSearch","didChangeQuery","didChangePeople","URLSearchParams","window","location","search","has","get","changes","previous","readSearch","assign","set","nextSearch","toString","nextURL","protocol","host","pathname","history","replaceState","href","forceUpdate","showPeople","onChange","index","placeholder","split","person","replace","trim","filter","RandomQuote_RandomQuote","QuotePage_QuotePage","FeedForm","copied","btnClass","btnMessage","feedURL","readOnly","lib_default","onCopy","disabled","ready","Events","result","renderResultBody","Events_graphql","Boolean","calendarURL","FeedForm_FeedForm","rel","ALL","Selection","isSelecting","ids","subs","Set","cb","push","dispose","indexOf","splice","sub","line","wasSelected","add","didChange","delete","clear","from","size","Line","didMouseDown","button","preventDefault","selection","toggle","startSelecting","didMouseMove","select","onDidChange","_this$props","ts","moment","parseInt","timestamp","sameSpeaker","speaker","lineClasses","isSelected","speakerBanner","image32","join","onMouseDown","onMouseMove","format","History","bottom","didMouseUp","stopSelecting","didMouseOut","addEventListener","scrollIntoView","removeEventListener","lines","renderLoading","renderLines","onMouseOut","i","Line_Line","ActionBar","didSubmitQuote","didSubmitLim","didClear","submit","bind","assertThisInitialized","textClassNames","clearBtn","disable","isEmpty","describe","channel","mutation","ActionBar_graphql","getLineIDs","commitMutation","onCompleted","Recent","knownChannels","renderChannelResult","renderError","channelNames","cache","renderCurrent","renderHistoryResult","linesForChannel","didChangeChannel","currentChannel","renderChannelQuery","renderHistoryQuery","Recent_graphql","_graphql2","setTimeout","displayChannelNames","displayChannel","htmlFor","History_History","ActionBar_ActionBar","RemForm","evt","NotificationHub","nextID","notifications","subscribers","n","notify","addSuccess","addDanger","isGraphQLError","stack","callback","severity","subscriber","nullHub","NotificationContext","NotificationsProvider","hub","NotificationsView","setNotifications","makeCloser","deleteNotification","onNotification","cx","Loading","RandomMemoryList","env","RandomMemoryList_graphql","RandomMemoryResults","retry","addError","rem","edge","encodeURIComponent","MatchingMemoryPage","createPaginationContainer","pageSize","relay","hasMore","isLoading","getConnectionFromProps","getVariables","_props","fragmentVariables","pattern","MatchingMemoryList","MatchingMemoryList_graphql","MatchingMemoryResults","Rem","_useQueryParameter","parameterName","nextParams","useQueryParameter","_useQueryParameter2","setQuery","RemEntry","RemEntry_graphql","RemEntryWrapper","RemEntryResult","style","maxWidth","COORDINATOR_URL","Coordinator","token","_getDesiredState","requestJSON","_createDesiredUnit","_callee2","unit","_context2","_updateDesiredUnit","_callee3","_context3","_deleteDesiredUnit","_callee4","_context4","_x4","_getActualUnits","_callee5","_context5","_getSecrets","_callee6","_context6","_createSecrets","_callee7","secrets","_context7","_x5","_deleteSecrets","_callee8","secretNames","_context8","_x6","_getDiff","_callee9","_context9","_getSync","_callee10","_context10","_createSync","_callee11","_context11","_request","_callee12","subPath","_context12","Authorization","btoa","_x7","_x8","_x9","_requestJSON","_callee13","_context13","_x10","_x11","_x12","nullCoordinator","CoordinatorContext","CoordinatorContainer","getter","setLoading","nullValue","setValue","_useState5","_useState6","v","ServicePath","dirname","basename","noun","ServiceDisplay","keys","volumes","p","mappings","_i","_Object$keys","dest","ports","nullDesiredState","units","Services","getDesiredState","list","typeMap","Map","makeServiceType","typeName","config","accept","skip","serviceType","valid","isInvalid","hasAnyContainer","hasContainerName","hasContainerConfig","hasEnvAndSecrets","hasVolumes","hasPorts","hasSchedule","ifInvalid","ifAnyContainer","ifContainerConfig","ifContainerName","ifEnvAndSecrets","ifVolumes","ifPorts","ifSchedule","typeSimple","typeOneShot","typeTimer","typeSelf","serviceTypes","getServiceType","DesiredUnitPayload","original","currentType","containerName","containerImageName","containerImageTag","calendar","objectSpread","container","image_name","image_tag","s","hasEmptyKeyOrValue","obj","k","isInvalidPortNumber","isNaN","hostPorts","parsed","hp","cbs","update","arrayChanged","array","o","objectChanged","ks","commonValidation","withAction","isModified","fn","getCommonPayload","usePayloadState","ToggleableInput","multiLineMode","setMode","controlRef","useRef","cn","controlClassName","focus","controlID","envVarCounter","EnvVarEditor","uniqueID","renderName","onChangeValue","renderControls","ExistingEnvVarEditor","onDelete","NewEnvVarEditor","expanded","setExpanded","currentName","setName","currentValue","nameFieldRef","canAccept","onAccept","toLocaleUpperCase","EnvVarListEditor","varNames","envVars","existingVarEditors","varName","ExistingSecretEditor","NewSecretEditor","displayMode","setDisplayMode","canAdd","canCreate","required","availableSecrets","secretName","onAddExisting","onCreateNew","SecretListEditor","existingSecretEditors","onAdd","onCreate","VolumeListEditor","hostPath","setHostPath","containerPath","setContainerPath","hostPathRef","existingVolumes","volumeMap","newVolume","PortListEditor","hostPort","setHostPort","containerPort","setContainerPort","hostPortRef","portMap","existingPorts","newPort","ServiceForm","knownSecrets","nextRoute","setNextRoute","_usePayloadState","_usePayloadState2","currentPath","setPath","_usePayloadState3","_usePayloadState4","setType","_usePayloadState5","_usePayloadState6","currentContainerName","setContainerName","_usePayloadState7","_usePayloadState8","currentContainerImageName","setContainerImageName","_usePayloadState9","_usePayloadState10","currentContainerImageTag","setContainerImageTag","_usePayloadState11","_usePayloadState12","currentEnvVars","setEnvVars","_usePayloadState13","_usePayloadState14","currentSecrets","setSecrets","_usePayloadState15","_usePayloadState16","currentVolumes","setVolumes","_usePayloadState17","_usePayloadState18","currentPorts","setPorts","_usePayloadState19","_usePayloadState20","currentCalendar","setCalendar","createdSecrets","setCreatedSecrets","deleteSecret","addSecret","createSecret","defineProperty","deleteVolume","nextVolumes","createVolume","deletePort","nextPorts","createPort","useMemo","used","refreshDiff","react_router","_apply","createSecrets","createDesiredUnit","getCreatePayload","updateDesiredUnit","getUpdatePayload","t0","_deleteService","withID","deleteDesiredUnit","isUpdate","tp","selected","nextVars","isCreate","isValid","ServiceEditor","getSecrets","secretsLoading","stateIsLoading","u","futureTense","modify","restart","remove","write","pastTense","DeltaView","emptyText","createDesiredRow","action","textClass","iconClass","changeRows","tense","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","filePath","headerText","timeUnits","reportDuration","d","_timeUnits","timeUnit","FieldsView","fields","SyncReportView","reportRows","reports","report","duration","elapsed","PlaceholderSyncReportView","lastReport","diff","unix","SyncView","lastDelta","lastSync","inProgress","in_progress","_startSync","createSync","fa-spin","nullSync","Sync","getSync","coordinatorForUser","memo","coordinatorToken","oldArgs","newArgs","Authenticated","SideNav_SideNav","component","LOGOUT_URL","Banner","accountControl","accountElements","data-toggle","data-target","aria-expanded","Login","classList","authUrl","height","width","srcSet","App","backTo","Login_Login","me","mine","Banner_Banner","App_graphql","hostname","ReactDOM","App_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ad0eb39.chunk.js","sourcesContent":["/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Presence = \"ACTIVE\" | \"AWAY\" | \"UNKNOWN\" | \"%future added value\";\nexport type PeopleQueryVariables = {};\nexport type PeopleQueryResponse = {\n    readonly users: {\n        readonly all: ReadonlyArray<{\n            readonly name: string;\n            readonly presence: Presence;\n            readonly avatar: {\n                readonly image48: string | null;\n            };\n            readonly status: {\n                readonly message: string | null;\n                readonly emoji: string | null;\n            };\n        }>;\n    };\n    readonly titles: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly text: string;\n                    readonly subject: string | null;\n                };\n            }>;\n        };\n    } | null;\n};\nexport type PeopleQuery = {\n    readonly response: PeopleQueryResponse;\n    readonly variables: PeopleQueryVariables;\n};\n\n\n\n/*\nquery PeopleQuery {\n  users {\n    all {\n      name\n      presence\n      avatar {\n        image48\n      }\n      status {\n        message\n        emoji\n      }\n      id\n    }\n  }\n  titles: documents(set: \"title\") {\n    all(criteria: {}) {\n      edges {\n        node {\n          text\n          subject\n          id\n        }\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"name\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"presence\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"avatar\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"Avatar\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"image48\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n},\nv3 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"status\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"Status\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"message\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"emoji\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n},\nv4 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv5 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"criteria\",\n    \"value\": {}\n  }\n],\nv6 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv7 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"subject\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv8 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"PeopleQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": \"all(criteria:{})\",\n            \"args\": (v5/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v6/*: any*/),\n                      (v7/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"PeopleQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v8/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": \"all(criteria:{})\",\n            \"args\": (v5/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v6/*: any*/),\n                      (v7/*: any*/),\n                      (v8/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"PeopleQuery\",\n    \"id\": null,\n    \"text\": \"query PeopleQuery {\\n  users {\\n    all {\\n      name\\n      presence\\n      avatar {\\n        image48\\n      }\\n      status {\\n        message\\n        emoji\\n      }\\n      id\\n    }\\n  }\\n  titles: documents(set: \\\"title\\\") {\\n    all(criteria: {}) {\\n      edges {\\n        node {\\n          text\\n          subject\\n          id\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '28094ab31a64fbe177811308b6004e81';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Criteria = {\n    readonly query?: string | null;\n    readonly subject?: string | null;\n    readonly speakers?: ReadonlyArray<string> | null;\n    readonly mentions?: ReadonlyArray<string> | null;\n};\nexport type ProfileQueryVariables = {\n    readonly name: string;\n    readonly titleCriteria: Criteria;\n};\nexport type ProfileQueryResponse = {\n    readonly users: {\n        readonly current: {\n            readonly avatar: {\n                readonly image192: string | null;\n            };\n            readonly topReactionsReceived: ReadonlyArray<{\n                readonly count: number;\n                readonly emoji: {\n                    readonly name: string;\n                    readonly url: string | null;\n                };\n            }>;\n            readonly topReactionsGiven: ReadonlyArray<{\n                readonly count: number;\n                readonly emoji: {\n                    readonly name: string;\n                    readonly url: string | null;\n                };\n            }>;\n        } | null;\n    };\n    readonly titles: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly text: string;\n                };\n            }>;\n        };\n    } | null;\n    readonly quotes: {\n        readonly rank: number;\n    } | null;\n};\nexport type ProfileQuery = {\n    readonly response: ProfileQueryResponse;\n    readonly variables: ProfileQueryVariables;\n};\n\n\n\n/*\nquery ProfileQuery(\n  $name: String!\n  $titleCriteria: Criteria!\n) {\n  users {\n    current: withName(name: $name) {\n      avatar {\n        image192\n      }\n      topReactionsReceived(limit: 10) {\n        count\n        emoji {\n          name\n          url\n        }\n      }\n      topReactionsGiven(limit: 10) {\n        count\n        emoji {\n          name\n          url\n        }\n      }\n      id\n    }\n  }\n  titles: documents(set: \"title\") {\n    all(first: 100, criteria: $titleCriteria) {\n      edges {\n        node {\n          text\n          id\n        }\n      }\n    }\n  }\n  quotes: documents(set: \"quote\") {\n    rank(speaker: $name)\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"titleCriteria\",\n    \"type\": \"Criteria!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"name\"\n  }\n],\nv2 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"avatar\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"Avatar\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"image192\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 10\n  }\n],\nv4 = [\n  {\n    \"kind\": \"ScalarField\",\n    \"alias\": null,\n    \"name\": \"count\",\n    \"args\": null,\n    \"storageKey\": null\n  },\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"emoji\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Emoji\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"name\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"url\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n],\nv5 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"topReactionsReceived\",\n  \"storageKey\": \"topReactionsReceived(limit:10)\",\n  \"args\": (v3/*: any*/),\n  \"concreteType\": \"EmojiCount\",\n  \"plural\": true,\n  \"selections\": (v4/*: any*/)\n},\nv6 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"topReactionsGiven\",\n  \"storageKey\": \"topReactionsGiven(limit:10)\",\n  \"args\": (v3/*: any*/),\n  \"concreteType\": \"EmojiCount\",\n  \"plural\": true,\n  \"selections\": (v4/*: any*/)\n},\nv7 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv8 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"criteria\",\n    \"variableName\": \"titleCriteria\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 100\n  }\n],\nv9 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv10 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": \"quotes\",\n  \"name\": \"documents\",\n  \"storageKey\": \"documents(set:\\\"quote\\\")\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"set\",\n      \"value\": \"quote\"\n    }\n  ],\n  \"concreteType\": \"DocumentSet\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"rank\",\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"speaker\",\n          \"variableName\": \"name\"\n        }\n      ],\n      \"storageKey\": null\n    }\n  ]\n},\nv11 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"ProfileQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": \"current\",\n            \"name\": \"withName\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": (v8/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v9/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      (v10/*: any*/)\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"ProfileQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": \"current\",\n            \"name\": \"withName\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v11/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": (v8/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v9/*: any*/),\n                      (v11/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      (v10/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"ProfileQuery\",\n    \"id\": null,\n    \"text\": \"query ProfileQuery(\\n  $name: String!\\n  $titleCriteria: Criteria!\\n) {\\n  users {\\n    current: withName(name: $name) {\\n      avatar {\\n        image192\\n      }\\n      topReactionsReceived(limit: 10) {\\n        count\\n        emoji {\\n          name\\n          url\\n        }\\n      }\\n      topReactionsGiven(limit: 10) {\\n        count\\n        emoji {\\n          name\\n          url\\n        }\\n      }\\n      id\\n    }\\n  }\\n  titles: documents(set: \\\"title\\\") {\\n    all(first: 100, criteria: $titleCriteria) {\\n      edges {\\n        node {\\n          text\\n          id\\n        }\\n      }\\n    }\\n  }\\n  quotes: documents(set: \\\"quote\\\") {\\n    rank(speaker: $name)\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '6909612b595759bd5819ae0b5de00978';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RandomQuoteQueryVariables = {};\nexport type RandomQuoteQueryResponse = {\n    readonly documents: {\n        readonly random: {\n            readonly found: boolean;\n            readonly text: string;\n        };\n    } | null;\n};\nexport type RandomQuoteQuery = {\n    readonly response: RandomQuoteQueryResponse;\n    readonly variables: RandomQuoteQueryVariables;\n};\n\n\n\n/*\nquery RandomQuoteQuery {\n  documents(set: \"quote\") {\n    random(criteria: {}) {\n      found\n      text\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"quote\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"criteria\",\n    \"value\": {}\n  }\n],\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"found\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv3 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RandomQuoteQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"quote\\\")\",\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"random\",\n            \"storageKey\": \"random(criteria:{})\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RandomQuoteQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"quote\\\")\",\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"random\",\n            \"storageKey\": \"random(criteria:{})\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"id\",\n                \"args\": null,\n                \"storageKey\": null\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RandomQuoteQuery\",\n    \"id\": null,\n    \"text\": \"query RandomQuoteQuery {\\n  documents(set: \\\"quote\\\") {\\n    random(criteria: {}) {\\n      found\\n      text\\n      id\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = 'b00c2b7f51b5eafc60256f9ab7e571dd';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Criteria = {\n    readonly query?: string | null;\n    readonly subject?: string | null;\n    readonly speakers?: ReadonlyArray<string> | null;\n    readonly mentions?: ReadonlyArray<string> | null;\n};\nexport type QuotePageQueryVariables = {\n    readonly c: Criteria;\n};\nexport type QuotePageQueryResponse = {\n    readonly documents: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly id: string | null;\n                    readonly text: string;\n                };\n            }>;\n            readonly pageInfo: {\n                readonly count: number;\n                readonly hasNextPage: boolean;\n            };\n        };\n    } | null;\n};\nexport type QuotePageQuery = {\n    readonly response: QuotePageQueryResponse;\n    readonly variables: QuotePageQueryVariables;\n};\n\n\n\n/*\nquery QuotePageQuery(\n  $c: Criteria!\n) {\n  documents(set: \"quote\") {\n    all(criteria: $c, first: 20) {\n      edges {\n        node {\n          id\n          text\n        }\n      }\n      pageInfo {\n        count\n        hasNextPage\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"c\",\n    \"type\": \"Criteria!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"documents\",\n    \"storageKey\": \"documents(set:\\\"quote\\\")\",\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"set\",\n        \"value\": \"quote\"\n      }\n    ],\n    \"concreteType\": \"DocumentSet\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"all\",\n        \"storageKey\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"criteria\",\n            \"variableName\": \"c\"\n          },\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"first\",\n            \"value\": 20\n          }\n        ],\n        \"concreteType\": \"DocumentConnection\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"edges\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"DocumentEdge\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"node\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"Document\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"id\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"text\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"pageInfo\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"PageInfo\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"count\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"hasNextPage\",\n                \"args\": null,\n                \"storageKey\": null\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"QuotePageQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"QuotePageQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"QuotePageQuery\",\n    \"id\": null,\n    \"text\": \"query QuotePageQuery(\\n  $c: Criteria!\\n) {\\n  documents(set: \\\"quote\\\") {\\n    all(criteria: $c, first: 20) {\\n      edges {\\n        node {\\n          id\\n          text\\n        }\\n      }\\n      pageInfo {\\n        count\\n        hasNextPage\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '6e063f623999a0dc41b92fe0b238d3ed';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type EventsQueryVariables = {};\nexport type EventsQueryResponse = {\n    readonly calendarURL: string;\n};\nexport type EventsQuery = {\n    readonly response: EventsQueryResponse;\n    readonly variables: EventsQueryVariables;\n};\n\n\n\n/*\nquery EventsQuery {\n  calendarURL\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"ScalarField\",\n    \"alias\": null,\n    \"name\": \"calendarURL\",\n    \"args\": null,\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"EventsQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"EventsQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"EventsQuery\",\n    \"id\": null,\n    \"text\": \"query EventsQuery {\\n  calendarURL\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '388cd7e5bbbedc329dded72e8648dbf6';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type ActionBarSubmitMutationVariables = {\n    readonly set: string;\n    readonly channel: string;\n    readonly lines: ReadonlyArray<string>;\n};\nexport type ActionBarSubmitMutationResponse = {\n    readonly createDocument: {\n        readonly id: string | null;\n    };\n};\nexport type ActionBarSubmitMutation = {\n    readonly response: ActionBarSubmitMutationResponse;\n    readonly variables: ActionBarSubmitMutationVariables;\n};\n\n\n\n/*\nmutation ActionBarSubmitMutation(\n  $set: String!\n  $channel: String!\n  $lines: [ID!]!\n) {\n  createDocument(set: $set, channel: $channel, lines: $lines) {\n    id\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"set\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"channel\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"lines\",\n    \"type\": \"[ID!]!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"createDocument\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"channel\",\n        \"variableName\": \"channel\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"lines\",\n        \"variableName\": \"lines\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"set\",\n        \"variableName\": \"set\"\n      }\n    ],\n    \"concreteType\": \"Document\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"ActionBarSubmitMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"ActionBarSubmitMutation\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"mutation\",\n    \"name\": \"ActionBarSubmitMutation\",\n    \"id\": null,\n    \"text\": \"mutation ActionBarSubmitMutation(\\n  $set: String!\\n  $channel: String!\\n  $lines: [ID!]!\\n) {\\n  createDocument(set: $set, channel: $channel, lines: $lines) {\\n    id\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '6207ead903199684c65e05bfe37267af';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RandomMemoryListQueryVariables = {};\nexport type RandomMemoryListQueryResponse = {\n    readonly rem: {\n        readonly search: {\n            readonly edges: ReadonlyArray<{\n                readonly cursor: string;\n                readonly node: {\n                    readonly key: string;\n                };\n            }>;\n        };\n    };\n};\nexport type RandomMemoryListQuery = {\n    readonly response: RandomMemoryListQueryResponse;\n    readonly variables: RandomMemoryListQueryVariables;\n};\n\n\n\n/*\nquery RandomMemoryListQuery {\n  rem {\n    search(first: 10, orderField: RANDOM) {\n      edges {\n        cursor\n        node {\n          key\n        }\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"rem\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Rem\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"search\",\n        \"storageKey\": \"search(first:10,orderField:\\\"RANDOM\\\")\",\n        \"args\": [\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"first\",\n            \"value\": 10\n          },\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"orderField\",\n            \"value\": \"RANDOM\"\n          }\n        ],\n        \"concreteType\": \"MemoryConnection\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"edges\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"MemoryEdge\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"cursor\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"node\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"Memory\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"key\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RandomMemoryListQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RandomMemoryListQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RandomMemoryListQuery\",\n    \"id\": null,\n    \"text\": \"query RandomMemoryListQuery {\\n  rem {\\n    search(first: 10, orderField: RANDOM) {\\n      edges {\\n        cursor\\n        node {\\n          key\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = 'a26dba46981838ebae9dea0fa627b50c';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\ndeclare const _MatchingMemoryPage_rem$ref: unique symbol;\nexport type MatchingMemoryPage_rem$ref = typeof _MatchingMemoryPage_rem$ref;\nexport type MatchingMemoryPage_rem = {\n    readonly search: {\n        readonly pageInfo: {\n            readonly count: number;\n            readonly hasPreviousPage: boolean;\n            readonly hasNextPage: boolean;\n        };\n        readonly edges: ReadonlyArray<{\n            readonly cursor: string;\n            readonly node: {\n                readonly key: string;\n            };\n        }>;\n    };\n    readonly \" $refType\": MatchingMemoryPage_rem$ref;\n};\n\n\n\nconst node: ReaderFragment = {\n  \"kind\": \"Fragment\",\n  \"name\": \"MatchingMemoryPage_rem\",\n  \"type\": \"Rem\",\n  \"metadata\": {\n    \"connection\": [\n      {\n        \"count\": \"count\",\n        \"cursor\": \"cursor\",\n        \"direction\": \"forward\",\n        \"path\": [\n          \"search\"\n        ]\n      }\n    ]\n  },\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"pattern\",\n      \"type\": \"String!\",\n      \"defaultValue\": null\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"count\",\n      \"type\": \"Int!\",\n      \"defaultValue\": null\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"cursor\",\n      \"type\": \"String\",\n      \"defaultValue\": null\n    }\n  ],\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": \"search\",\n      \"name\": \"__MatchingMemoryPage_search_connection\",\n      \"storageKey\": null,\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"query\",\n          \"variableName\": \"pattern\"\n        }\n      ],\n      \"concreteType\": \"MemoryConnection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"pageInfo\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"PageInfo\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"count\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"hasPreviousPage\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"hasNextPage\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"endCursor\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        },\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"edges\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"MemoryEdge\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"cursor\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"node\",\n              \"storageKey\": null,\n              \"args\": null,\n              \"concreteType\": \"Memory\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"key\",\n                  \"args\": null,\n                  \"storageKey\": null\n                },\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"__typename\",\n                  \"args\": null,\n                  \"storageKey\": null\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n};\n(node as any).hash = '3d967b0051bc3ecfaa0ee5a7c22d8066';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nimport { MatchingMemoryPage_rem$ref } from \"./MatchingMemoryPage_rem.graphql\";\nexport type MatchingMemoryPageQueryVariables = {\n    readonly pattern: string;\n    readonly count: number;\n    readonly cursor?: string | null;\n};\nexport type MatchingMemoryPageQueryResponse = {\n    readonly rem: {\n        readonly \" $fragmentRefs\": MatchingMemoryPage_rem$ref;\n    };\n};\nexport type MatchingMemoryPageQuery = {\n    readonly response: MatchingMemoryPageQueryResponse;\n    readonly variables: MatchingMemoryPageQueryVariables;\n};\n\n\n\n/*\nquery MatchingMemoryPageQuery(\n  $pattern: String!\n  $count: Int!\n  $cursor: String\n) {\n  rem {\n    ...MatchingMemoryPage_rem_3tPC4q\n  }\n}\n\nfragment MatchingMemoryPage_rem_3tPC4q on Rem {\n  search(query: $pattern, first: $count, after: $cursor) {\n    pageInfo {\n      count\n      hasPreviousPage\n      hasNextPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        key\n        __typename\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"pattern\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"count\",\n    \"type\": \"Int!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"cursor\",\n    \"type\": \"String\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"after\",\n    \"variableName\": \"cursor\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"first\",\n    \"variableName\": \"count\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"query\",\n    \"variableName\": \"pattern\"\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"MatchingMemoryPageQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"rem\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"MatchingMemoryPage_rem\",\n            \"args\": [\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"count\",\n                \"variableName\": \"count\"\n              },\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"cursor\",\n                \"variableName\": \"cursor\"\n              },\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"pattern\",\n                \"variableName\": \"pattern\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"MatchingMemoryPageQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"rem\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"search\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"MemoryConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"pageInfo\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"PageInfo\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"count\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"hasPreviousPage\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"hasNextPage\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"endCursor\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              },\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"MemoryEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"cursor\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Memory\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"key\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"__typename\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"LinkedHandle\",\n            \"alias\": null,\n            \"name\": \"search\",\n            \"args\": (v1/*: any*/),\n            \"handle\": \"connection\",\n            \"key\": \"MatchingMemoryPage_search\",\n            \"filters\": [\n              \"query\"\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"MatchingMemoryPageQuery\",\n    \"id\": null,\n    \"text\": \"query MatchingMemoryPageQuery(\\n  $pattern: String!\\n  $count: Int!\\n  $cursor: String\\n) {\\n  rem {\\n    ...MatchingMemoryPage_rem_3tPC4q\\n  }\\n}\\n\\nfragment MatchingMemoryPage_rem_3tPC4q on Rem {\\n  search(query: $pattern, first: $count, after: $cursor) {\\n    pageInfo {\\n      count\\n      hasPreviousPage\\n      hasNextPage\\n      endCursor\\n    }\\n    edges {\\n      cursor\\n      node {\\n        key\\n        __typename\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = 'c72c7b136364a39649e5c22f5505f92c';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nimport { MatchingMemoryPage_rem$ref } from \"./MatchingMemoryPage_rem.graphql\";\nexport type MatchingMemoryListQueryVariables = {\n    readonly pattern: string;\n};\nexport type MatchingMemoryListQueryResponse = {\n    readonly rem: {\n        readonly \" $fragmentRefs\": MatchingMemoryPage_rem$ref;\n    };\n};\nexport type MatchingMemoryListQuery = {\n    readonly response: MatchingMemoryListQueryResponse;\n    readonly variables: MatchingMemoryListQueryVariables;\n};\n\n\n\n/*\nquery MatchingMemoryListQuery(\n  $pattern: String!\n) {\n  rem {\n    ...MatchingMemoryPage_rem_2QeWhh\n  }\n}\n\nfragment MatchingMemoryPage_rem_2QeWhh on Rem {\n  search(query: $pattern, first: 10) {\n    pageInfo {\n      count\n      hasPreviousPage\n      hasNextPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        key\n        __typename\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"pattern\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 10\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"query\",\n    \"variableName\": \"pattern\"\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"MatchingMemoryListQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"rem\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"MatchingMemoryPage_rem\",\n            \"args\": [\n              {\n                \"kind\": \"Literal\",\n                \"name\": \"count\",\n                \"value\": 10\n              },\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"pattern\",\n                \"variableName\": \"pattern\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"MatchingMemoryListQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"rem\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"search\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"MemoryConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"pageInfo\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"PageInfo\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"count\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"hasPreviousPage\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"hasNextPage\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"endCursor\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              },\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"MemoryEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"cursor\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Memory\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"key\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"__typename\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"LinkedHandle\",\n            \"alias\": null,\n            \"name\": \"search\",\n            \"args\": (v1/*: any*/),\n            \"handle\": \"connection\",\n            \"key\": \"MatchingMemoryPage_search\",\n            \"filters\": [\n              \"query\"\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"MatchingMemoryListQuery\",\n    \"id\": null,\n    \"text\": \"query MatchingMemoryListQuery(\\n  $pattern: String!\\n) {\\n  rem {\\n    ...MatchingMemoryPage_rem_2QeWhh\\n  }\\n}\\n\\nfragment MatchingMemoryPage_rem_2QeWhh on Rem {\\n  search(query: $pattern, first: 10) {\\n    pageInfo {\\n      count\\n      hasPreviousPage\\n      hasNextPage\\n      endCursor\\n    }\\n    edges {\\n      cursor\\n      node {\\n        key\\n        __typename\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '405496b6cc0f599796dd82aa790721ea';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RemEntryQueryVariables = {\n    readonly key: string;\n};\nexport type RemEntryQueryResponse = {\n    readonly rem: {\n        readonly get: {\n            readonly key: string;\n            readonly value: string;\n        } | null;\n    };\n};\nexport type RemEntryQuery = {\n    readonly response: RemEntryQueryResponse;\n    readonly variables: RemEntryQueryVariables;\n};\n\n\n\n/*\nquery RemEntryQuery(\n  $key: String!\n) {\n  rem {\n    get(key: $key) {\n      key\n      value\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"key\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"rem\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Rem\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"get\",\n        \"storageKey\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"key\",\n            \"variableName\": \"key\"\n          }\n        ],\n        \"concreteType\": \"Memory\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"key\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"value\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RemEntryQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RemEntryQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RemEntryQuery\",\n    \"id\": null,\n    \"text\": \"query RemEntryQuery(\\n  $key: String!\\n) {\\n  rem {\\n    get(key: $key) {\\n      key\\n      value\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '9c103e4e1e7fbb32ec3431e467783435';\nexport default node;\n","const NETWORK_ERROR_MARKER = Symbol(\"is-network-error\");\nconst GRAPHQL_ERROR_MARKER = Symbol(\"is-graphql-error\");\n\nexport interface NetworkError extends Error {\n  requestURL: string;\n  responseStatus: number;\n  responseText: string;\n  marker: typeof NETWORK_ERROR_MARKER;\n}\n\nexport interface GraphQLError extends Error {\n  requestURL: string;\n  errors: string[];\n  marker: typeof GRAPHQL_ERROR_MARKER;\n}\n\nexport function isNetworkError(err: Error | null): err is NetworkError {\n  return err ? (err as NetworkError).marker === NETWORK_ERROR_MARKER : false;\n}\n\nexport function isGraphQLError(err: Error | null): err is GraphQLError {\n  return err ? (err as GraphQLError).marker === GRAPHQL_ERROR_MARKER : false;\n}\n\nexport async function createNetworkError(\n  message: string,\n  url: string,\n  response: Response\n) {\n  const err = new Error(message) as NetworkError;\n  err.requestURL = url;\n  err.responseStatus = response.status;\n  err.responseText = await response.text();\n  err.marker = NETWORK_ERROR_MARKER;\n  return err as NetworkError;\n}\n\nexport function createGraphQLError(\n  message: string,\n  url: string,\n  errors: string[]\n) {\n  const err = new Error(message) as GraphQLError;\n  err.requestURL = url;\n  err.errors = [...errors];\n  return err;\n}\n","import {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  OperationType,\n  RequestParameters,\n  Variables,\n} from \"relay-runtime\";\n\nimport {createNetworkError, createGraphQLError} from \"./errors\";\n\nconst API_URL = `${process.env.REACT_APP_API_BASE_URL}/graphql`;\nexport const AUTH_URL = `${process.env.REACT_APP_API_BASE_URL}/auth/${process.env.REACT_APP_API_AUTH_TYPE}`;\n\nexport interface QueryResult<T extends OperationType> {\n  error: Error | null;\n  props: T[\"response\"] | null;\n  retry: (() => void) | null;\n}\n\nasync function fetchQuery(\n  request: RequestParameters,\n  variables: Variables\n): Promise<any> {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      query: request.text,\n      variables,\n    }),\n  });\n\n  if (response.ok) {\n    const payload = await response.json();\n    if (payload.errors) {\n      throw createGraphQLError(\n        `API server responded with GraphQL errors`,\n        API_URL,\n        payload.errors\n      );\n    }\n    return payload;\n  } else {\n    throw await createNetworkError(\n      `API server responded with ${response.status}`,\n      API_URL,\n      response\n    );\n  }\n}\n\nconst source = new RecordSource();\nconst network = Network.create(fetchQuery);\n\nexport function getEnvironment(): Environment {\n  const store = new Store(source);\n\n  return new Environment({\n    network,\n    store,\n  });\n}\n","import React, {useContext} from \"react\";\n\nimport {IUser} from \"./userTypes\";\n\nexport type IUser = IUser;\nexport const UserContext = React.createContext<IUser | null>(null);\n\ninterface RoleProps {\n  name: string;\n  children: JSX.Element;\n}\n\nexport const Role = (props: RoleProps) => {\n  const user = useContext(UserContext);\n  if (!user) return null;\n\n  const match = user.roles.some(role => role.name === props.name);\n  if (!match) return null;\n\n  return props.children;\n};\n","import React, {useState, useEffect} from \"react\";\n\nimport {Coordinator, IDelta} from \"./coordinator\";\n\nconst nullDelta: IDelta = {\n  units_to_add: [],\n  units_to_change: [],\n  units_to_restart: [],\n  units_to_remove: [],\n  files_to_write: [],\n};\n\nexport function hasPendingDelta(delta: IDelta) {\n  return [\n    delta.units_to_add,\n    delta.units_to_change,\n    delta.units_to_remove,\n    delta.units_to_restart,\n    delta.units_to_remove,\n    delta.files_to_write,\n  ].some(arr => arr.length > 0);\n}\n\nexport interface PendingDiff {\n  delta: IDelta;\n  refresh: () => void;\n}\n\nexport const PendingDiffContext = React.createContext<PendingDiff>({\n  delta: nullDelta,\n  refresh: () => {},\n});\n\ninterface PendingDiffProps {\n  coordinator: Coordinator;\n  children: JSX.Element;\n}\n\nexport function PendingDiffProvider(props: PendingDiffProps) {\n  const [delta, setDelta] = useState<IDelta>(nullDelta);\n  const [latch, setLatch] = useState(0);\n\n  useEffect(() => {\n    let ignore = false;\n\n    (async function() {\n      const delta = await props.coordinator.getDiff().catch(() => nullDelta);\n      if (!ignore) {\n        setDelta(delta);\n      }\n    })();\n\n    return () => {\n      ignore = true;\n    };\n  }, [props.coordinator, latch]);\n\n  const pendingDiff = {\n    delta,\n    refresh: () => setLatch(current => current + 1),\n  };\n\n  return (\n    <PendingDiffContext.Provider value={pendingDiff}>\n      {props.children}\n    </PendingDiffContext.Provider>\n  );\n}\n","import React, {useContext} from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport {Role} from \"./common/Role\";\nimport {PendingDiffContext, hasPendingDelta} from \"./common/PendingDiff\";\n\ninterface PillProps {\n  to: string;\n  exact?: boolean;\n  children: React.ReactNode;\n}\n\nfunction Pill(props: PillProps) {\n  return (\n    <li role=\"presentation\" className=\"nav-item\">\n      <NavLink\n        to={props.to}\n        exact={props.exact}\n        className=\"nav-link\"\n        activeClassName={\"active\"}\n      >\n        {props.children}\n      </NavLink>\n    </li>\n  );\n}\n\nexport const SideNav = () => {\n  const showBadge = hasPendingDelta(useContext(PendingDiffContext).delta);\n\n  return (\n    <ul className=\"nav nav-pills flex-column\">\n      <Pill to=\"/\" exact>\n        dashboard\n      </Pill>\n      <Pill to=\"/people\">dramatis personae</Pill>\n      <Pill to=\"/recent\">recent chatter</Pill>\n      <hr />\n      <Pill to=\"/quotes\">quotes</Pill>\n      <Pill to=\"/rem\">rem</Pill>\n      <Pill to=\"/events\">events</Pill>\n      <Role name=\"admin\">\n        <>\n          <hr />\n          <p className=\"bg-warning text-white font-weight-bold p-2 rounded text-center\">\n            <i className=\"fas fa-id-badge mr-2\" />\n            admin only\n          </p>\n          <Pill to=\"/admin/services\">services</Pill>\n          <Pill to=\"/admin/sync\">\n            sync{\" \"}\n            {showBadge && (\n              <span className=\"badge badge-info float-right\">pending</span>\n            )}\n          </Pill>\n        </>\n      </Role>\n    </ul>\n  );\n};\n","import React from \"react\";\n\nexport const Dashboard = () => (\n  <div className=\"card bg-light border border-info rounded\">\n    <div className=\"card-body\">\n      <h3 className=\"card-title\">Why hello there.</h3>\n      <p className=\"card-text\">\n        {\"Pretend there's something awesome written here.\"}\n      </p>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport interface User {\n  readonly name: string;\n  readonly presence: string;\n  readonly avatar: {image48: string | null};\n  readonly status: {readonly message: string | null};\n}\n\ninterface PersonProps {\n  user: User;\n  title: string;\n}\n\nexport function Person(props: PersonProps) {\n  const {name, presence, avatar, status} = props.user;\n  const avatarURL = avatar.image48;\n  const presenceIcon =\n    presence === \"ACTIVE\"\n      ? \"pushbot-status-active fa-dot-circle\"\n      : \"pushbot-status-inactive fa-circle\";\n  const {message} = status;\n\n  return (\n    <div className=\"pushbot-person row\">\n      <div className=\"col-xs-1 px-2\">\n        <img src={avatarURL!} className=\"rounded\" alt=\"\" />\n      </div>\n      <div className=\"col-xs-11 px-2\">\n        <p>\n          <i\n            className={`far pushbot-status mr-2 ${presenceIcon}`}\n            aria-hidden=\"true\"\n          />\n          <Link to={`/people/${name}`} className=\"pushbot-person-name mr-2\">\n            {name}\n          </Link>\n          <span className=\"pushbot-person-title font-weight-bold\">\n            {props.title}\n          </span>\n        </p>\n        <p className=\"pushbot-person-status-message font-italic font-weight-light\">\n          {message}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {User, Person} from \"./Person\";\n\nimport {PeopleQuery} from \"../__generated__/PeopleQuery.graphql\";\n\nimport \"./People.css\";\n\nexport class People extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query PeopleQuery {\n        users {\n          all {\n            name\n            presence\n\n            avatar {\n              image48\n            }\n\n            status {\n              message\n              emoji\n            }\n          }\n        }\n\n        titles: documents(set: \"title\") {\n          all(criteria: {}) {\n            edges {\n              node {\n                text\n                subject\n              }\n            }\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<PeopleQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QueryResult<PeopleQuery>) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    return (\n      <div>\n        <h3>Dramatis Personae</h3>\n        <blockquote className=\"blockquote text-right\">\n          Maybe the <em>real</em> lab was the friends we made along the way.\n        </blockquote>\n        <ul className=\"list-group\">\n          {this.collateUsers(props).map(({user, title}) => {\n            return (\n              <li key={user.name} className=\"list-group-item\">\n                <Person user={user} title={title} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  };\n\n  collateUsers(\n    props: QueryResult<PeopleQuery>[\"props\"]\n  ): {user: User; title: string}[] {\n    if (!props) {\n      return [];\n    }\n\n    const titles = props.titles;\n    if (!titles) {\n      return [];\n    }\n\n    const titlesByUsername: {[username: string]: string} = {};\n    for (const title of titles.all.edges) {\n      if (title.node.subject) {\n        titlesByUsername[title.node.subject] = title.node.text;\n      }\n    }\n\n    const userData = props.users.all.map(user => {\n      return {user, title: titlesByUsername[user.name] || \"\"};\n    });\n\n    userData.sort((a, b) => a.user.name.localeCompare(b.user.name));\n\n    return userData;\n  }\n}\n","import React, {Component} from \"react\";\nimport Chartist from \"chartist\";\n\nChartist.plugins = Chartist.plugins || {};\nChartist.plugins.ctHtmlLabels = function() {\n  return function(chart: any) {\n    chart.on(\"draw\", function(context: any) {\n      if (context.type === \"label\") {\n        context.element.empty()._node.innerHTML = context.text;\n      }\n    });\n  };\n};\n\ninterface ChartProps {\n  data: Chartist.IChartistData;\n  options: Chartist.IBarChartOptions;\n}\n\nexport class Chart extends Component<ChartProps> {\n  private refElement?: HTMLElement | null;\n  private chart?: Chartist.IChartistBarChart;\n\n  render() {\n    return (\n      <div\n        className=\"ct-chart ct-golden-section\"\n        ref={c => {\n          this.refElement = c;\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    const options = this.props.options || {};\n    options.plugins = [Chartist.plugins.ctHtmlLabels()];\n\n    this.chart = new Chartist.Bar(this.refElement, this.props.data, options);\n  }\n\n  componentWillUnmount() {\n    this.chart && this.chart.detach();\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport EmojiConverter from \"emoji-js\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {Chart} from \"../common/Chart\";\nimport {ProfileQuery} from \"../__generated__/ProfileQuery.graphql\";\n\nimport \"./Profile.css\";\n\ninterface ProfileProps {\n  match: {\n    params: {\n      name: string;\n    };\n  };\n}\n\ntype User = NonNullable<ProfileQuery[\"response\"][\"users\"][\"current\"]>;\n\ntype EmojiCount = User[\"topReactionsGiven\"] | User[\"topReactionsReceived\"];\n\nexport class Profile extends Component<ProfileProps> {\n  private environment: Environment;\n  private emoji: EmojiConverter;\n\n  constructor(props: ProfileProps) {\n    super(props);\n\n    this.environment = getEnvironment();\n    this.emoji = new EmojiConverter();\n\n    this.emoji.img_sets.apple.sheet = \"/sheet_apple_64.png\";\n    this.emoji.use_sheet = true;\n    this.emoji.include_title = true;\n  }\n\n  render() {\n    const query = graphql`\n      query ProfileQuery($name: String!, $titleCriteria: Criteria!) {\n        users {\n          current: withName(name: $name) {\n            avatar {\n              image192\n            }\n\n            topReactionsReceived(limit: 10) {\n              count\n              emoji {\n                name\n                url\n              }\n            }\n\n            topReactionsGiven(limit: 10) {\n              count\n              emoji {\n                name\n                url\n              }\n            }\n          }\n        }\n\n        titles: documents(set: \"title\") {\n          all(first: 100, criteria: $titleCriteria) {\n            edges {\n              node {\n                text\n              }\n            }\n          }\n        }\n\n        quotes: documents(set: \"quote\") {\n          rank(speaker: $name)\n        }\n      }\n    `;\n\n    const username = this.props.match.params.name;\n    const variables = {\n      name: username,\n      titleCriteria: {subject: username},\n    };\n\n    return (\n      <QueryRenderer<ProfileQuery>\n        environment={this.environment}\n        query={query}\n        variables={variables}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QueryResult<ProfileQuery>) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    if (!props) {\n      return (\n        <div className=\"pushbot-loading\">\n          <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n          sluuuuurp\n        </div>\n      );\n    }\n\n    const user = props.users.current;\n    if (!user) {\n      return null;\n    }\n\n    const avatar = user.avatar.image192 || \"\";\n\n    return (\n      <div className=\"pushbot-profile row\">\n        <div className=\"col-md-6\">\n          <img\n            className=\"pushbot-profile-avatar img-responsive img-rounded\"\n            src={avatar}\n            alt=\"\"\n          />\n          {this.renderReactionsReceivedChart(user)}\n          {this.renderReactionsGivenChart(user)}\n        </div>\n        <div className=\"col-md-6\">\n          <h1 className=\"pushbot-profile-username\">\n            @{this.props.match.params.name}\n          </h1>\n          {this.renderTitles(props)}\n          {this.renderQuoteRank(props)}\n        </div>\n      </div>\n    );\n  };\n\n  renderReactionsGivenChart(user: User) {\n    return this.renderReactionChart(\n      user.topReactionsGiven,\n      \"Emoji reactions given\"\n    );\n  }\n\n  renderReactionsReceivedChart(user: User) {\n    return this.renderReactionChart(\n      user.topReactionsReceived,\n      \"Emoji reactions received\"\n    );\n  }\n\n  renderReactionChart(results: EmojiCount, name: string) {\n    const data = {\n      labels: results.map(each => {\n        if (each.emoji.url) {\n          return `<img class=\"emoji\" alt=\"${each.emoji.name}\" src=\"${each.emoji.url}\" title=\"${each.emoji.name}\">`;\n        }\n\n        return this.emoji.replace_colons(`:${each.emoji.name}:`);\n      }),\n      series: [results.map(each => each.count)],\n    };\n\n    const options = {\n      low: 0,\n      axisY: {\n        onlyInteger: true,\n      },\n    };\n\n    return (\n      <p className=\"pushbot-profile-reaction-chart\">\n        <h4>{name}</h4>\n        <Chart data={data} options={options} />\n      </p>\n    );\n  }\n\n  renderTitles(props: NonNullable<QueryResult<ProfileQuery>[\"props\"]>) {\n    const edges = props.titles ? props.titles.all.edges : [];\n    if (edges.length === 0) {\n      return (\n        <p className=\"pushbot-profile-titles-empty\">\n          No titles yet. Set one with{\" \"}\n          <code>!settitle {this.props.match.params.name}: ...</code>.\n        </p>\n      );\n    }\n\n    return (\n      <p className=\"pushbot-profile-titles\">\n        {edges.map(t => this.titleFrom(t.node.text))}\n      </p>\n    );\n  }\n\n  renderQuoteRank(props: NonNullable<QueryResult<ProfileQuery>[\"props\"]>) {\n    if (!props.quotes) {\n      return (\n        <p className=\"pushbot-profile-quoterank\">\n          You have not yet been immortalized in the quotefile.\n        </p>\n      );\n    }\n\n    const rank = props.quotes.rank;\n    return (\n      <p className=\"pushbot-profile-quoterank\">\n        Rank #{rank} in the quotefile.\n      </p>\n    );\n  }\n\n  titleFrom(title: string) {\n    if (/^https?:/.test(title)) {\n      return (\n        <img\n          className=\"pushbot-profile-title img-responsive\"\n          alt=\"\"\n          src={title}\n        />\n      );\n    }\n\n    return <span className=\"pushbot-profile-title\">{title}</span>;\n  }\n}\n","export interface QueryModeCases<R> {\n  containing?(): R;\n  by?(): R;\n  about?(): R;\n  default?(): R;\n}\n\nexport interface QueryMode {\n  when<R>(cases: QueryModeCases<R>): R | null;\n  label: string;\n}\n\nexport const CONTAINING: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.containing || cases.default || (() => null))();\n  },\n\n  label: \"containing\",\n};\n\nexport const BY: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.by || cases.default || (() => null))();\n  },\n\n  label: \"by\",\n};\n\nexport const ABOUT: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.about || cases.default || (() => null))();\n  },\n\n  label: \"about\",\n};\n\nexport const modes: QueryMode[] = [CONTAINING, BY, ABOUT];\n","import React from \"react\";\n\ninterface QuoteProps {\n  text: string;\n}\n\nexport function Quote(props: QuoteProps) {\n  return (\n    <blockquote className=\"mx-md-2 pushbot-quote\">\n      <p>{props.text}</p>\n    </blockquote>\n  );\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {RandomQuoteQuery, RandomQuoteResult} from \"./queryTypes\";\nimport {Quote} from \"./Quote\";\n\ninterface RandomQuoteState {\n  environment: Environment;\n}\n\nexport class RandomQuote extends Component<{}, RandomQuoteState> {\n  private lastQuote: string | null;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.lastQuote = null;\n    this.state = {\n      environment: getEnvironment(),\n    };\n  }\n\n  render() {\n    const query = graphql`\n      query RandomQuoteQuery {\n        documents(set: \"quote\") {\n          random(criteria: {}) {\n            found\n            text\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<RandomQuoteQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: RandomQuoteResult) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    const quoteText = props ? props.documents!.random.text : this.lastQuote;\n\n    if (!quoteText) {\n      return null;\n    }\n\n    this.lastQuote = quoteText;\n\n    return (\n      <div className=\"pushbot-random-quote card border-0\">\n        <div className=\"card-body\">\n          <p className=\"card-text\">\n            Type a search term above to find specific quotes. In the meantime,\n            enjoy this random quote.\n          </p>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-sm\"\n            onClick={this.another}\n          >\n            <i className=\"fas fa-sync\" aria-hidden=\"true\" />\n            Another\n          </button>\n        </div>\n        <Quote text={quoteText} />\n      </div>\n    );\n  };\n\n  another = () => {\n    this.setState({\n      environment: getEnvironment(),\n    });\n  };\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {Quote} from \"./Quote\";\nimport {getEnvironment} from \"../common/Transport\";\nimport {QueryMode} from \"./queryMode\";\nimport {QuotePageQuery, QuotePageResult, IQuotes} from \"./queryTypes\";\n\ninterface QuotePageProps {\n  query: string;\n  people: string[];\n  mode: QueryMode;\n}\n\nexport class QuotePage extends Component<QuotePageProps> {\n  private environment: Environment;\n  private lastTotal: number | null;\n  private lastResults: IQuotes | null;\n\n  constructor(props: QuotePageProps) {\n    super(props);\n    this.environment = getEnvironment();\n    this.lastTotal = null;\n    this.lastResults = null;\n  }\n\n  render() {\n    const query = graphql`\n      query QuotePageQuery($c: Criteria!) {\n        documents(set: \"quote\") {\n          all(criteria: $c, first: 20) {\n            edges {\n              node {\n                id\n                text\n              }\n            }\n\n            pageInfo {\n              count\n              hasNextPage\n            }\n          }\n        }\n      }\n    `;\n\n    const criteria: any = {query: this.props.query};\n    this.props.mode.when({\n      by: () => {\n        criteria.speakers = this.props.people;\n      },\n      about: () => {\n        criteria.mentions = this.props.people;\n      },\n    });\n\n    const variables = {\n      c: criteria,\n    };\n\n    return (\n      <QueryRenderer<QuotePageQuery>\n        environment={this.environment}\n        query={query}\n        variables={variables}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QuotePageResult) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    if (!props && !this.lastResults) {\n      return (\n        <div className=\"pushbot-loading\">\n          <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n          performing query\n        </div>\n      );\n    } else if (!props && this.lastResults && this.lastTotal) {\n      return this.renderDocuments(this.lastTotal, this.lastResults);\n    } else if (props) {\n      this.lastTotal = props.documents!.all.pageInfo.count;\n      this.lastResults = props.documents!.all.edges;\n\n      return this.renderDocuments(this.lastTotal, this.lastResults);\n    }\n  };\n\n  renderDocuments(total: number, documents: IQuotes) {\n    const quotes = documents.map(document => {\n      return <Quote key={document.node.id!} text={document.node.text} />;\n    });\n\n    const more = documents.length < total ? \"the first of\" : \"\";\n    const plural = total === 1 ? `matching quote` : `matching quotes`;\n\n    return (\n      <div className=\"pushbot-results card border-0\">\n        <div className=\"card-body\">\n          <p>\n            Showing {more} <strong>{total}</strong> {plural}.\n          </p>\n        </div>\n        {quotes}\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\n\nimport {QueryMode, CONTAINING, BY, ABOUT, modes} from \"./queryMode\";\nimport {RandomQuote} from \"./RandomQuote\";\nimport {QuotePage} from \"./QuotePage\";\n\nimport \"./Quotes.css\";\n\ninterface Search {\n  query: string;\n  people: string;\n  mode: QueryMode;\n}\n\nexport class Quotes extends Component {\n  readSearch(): Search {\n    const params = new URLSearchParams(window.location.search);\n\n    let mode = CONTAINING;\n    let people = \"\";\n    if (params.has(\"by\")) {\n      mode = BY;\n      people = params.get(\"by\")!;\n    } else if (params.has(\"about\")) {\n      mode = ABOUT;\n      people = params.get(\"about\")!;\n    }\n\n    return {\n      query: params.get(\"q\") || \"\",\n      people,\n      mode,\n    };\n  }\n\n  writeSearch(changes: Partial<Search>) {\n    const previous = this.readSearch();\n    const current = Object.assign(previous, changes);\n\n    const params = new URLSearchParams();\n\n    current.mode.when({\n      by: () => params.set(\"by\", current.people),\n      about: () => params.set(\"about\", current.people),\n    });\n    if (current.query.length) {\n      params.set(\"q\", current.query);\n    }\n\n    const nextSearch = params.toString();\n    const nextURL =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname +\n      (nextSearch.length > 0 ? \"?\" + nextSearch : \"\") +\n      window.location.hash;\n\n    if (window.history.replaceState) {\n      window.history.replaceState({}, \"\", nextURL);\n    } else {\n      window.location.href = nextURL;\n    }\n    this.forceUpdate();\n  }\n\n  render() {\n    const search = this.readSearch();\n    const showPeople = search.mode.when({\n      containing: () => false,\n      by: () => true,\n      about: () => true,\n    });\n\n    return (\n      <div>\n        <form\n          className={`pushbot-quote-form form-inline pushbot-mode-${search.mode.label}`}\n        >\n          <select\n            className=\"pushbot-quote-mode form-control\"\n            value={search.mode.label}\n            onChange={this.didChangeMode}\n          >\n            {modes.map((mode, index) => {\n              return (\n                <option key={index} value={mode.label}>\n                  {mode.label}\n                </option>\n              );\n            })}\n          </select>\n          {showPeople && (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"pushbot-quote-people\"\n              placeholder=\"fenris, iguanaditty\"\n              value={search.people}\n              onChange={this.didChangePeople}\n            />\n          )}\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"pushbot-quote-query\"\n            placeholder='\"query\"'\n            value={search.query}\n            onChange={this.didChangeQuery}\n          />\n        </form>\n        {this.renderResult(search)}\n      </div>\n    );\n  }\n\n  renderResult(search: Search) {\n    const people = search.people\n      .split(/[,+;]|\\s/)\n      .map(person => person.replace(/^@/, \"\"))\n      .map(person => person.trim())\n      .filter(person => person.length > 0);\n\n    const noQuery = search.mode.when({\n      containing: () => search.query.length === 0,\n      by: () => people.length === 0,\n      about: () => people.length === 0,\n    });\n\n    if (noQuery) {\n      return <RandomQuote />;\n    } else {\n      return (\n        <QuotePage mode={search.mode} people={people} query={search.query} />\n      );\n    }\n  }\n\n  didChangeMode = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const mode = modes.find(mode => mode.label === event.target.value);\n    this.writeSearch({mode});\n  };\n\n  didChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.writeSearch({query: event.target.value});\n  };\n\n  didChangePeople = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.writeSearch({people: event.target.value});\n  };\n}\n","import React, {Component} from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\ninterface FeedFormProps {\n  ready: boolean;\n  feedURL: string;\n}\n\ninterface FeedFormState {\n  copied: boolean;\n}\n\nexport class FeedForm extends Component<FeedFormProps, FeedFormState> {\n  state = {\n    copied: false,\n  };\n\n  render() {\n    const btnClass = this.state.copied\n      ? \"btn btn-success\"\n      : \"btn btn-secondary\";\n    const btnMessage = this.state.copied ? \"Copied\" : \"Copy\";\n\n    return (\n      <p className=\"form-inline\">\n        <input\n          type=\"text\"\n          id=\"pushbot-events-feedurl\"\n          className=\"form-control\"\n          value={this.props.feedURL}\n          readOnly\n        />\n        <CopyToClipboard\n          text={this.props.feedURL}\n          onCopy={() => this.setState({copied: true})}\n        >\n          <button className={btnClass} disabled={!this.props.ready}>\n            {btnMessage}\n          </button>\n        </CopyToClipboard>\n      </p>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {FeedForm} from \"./FeedForm\";\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\n\nimport {EventsQuery} from \"../__generated__/EventsQuery.graphql\";\n\nimport \"./Events.css\";\n\nexport class Events extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query EventsQuery {\n        calendarURL\n      }\n    `;\n\n    return (\n      <QueryRenderer<EventsQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = (result: QueryResult<EventsQuery>) => {\n    return (\n      <div>\n        <h3>Goings On and Happenings</h3>\n        {this.renderResultBody(result)}\n      </div>\n    );\n  };\n\n  renderResultBody({error, props}: QueryResult<EventsQuery>) {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    const ready = Boolean(props);\n    const feedURL = props ? props.calendarURL : \"...\";\n\n    return (\n      <div>\n        <p>\n          Keep up with #~s events planned in the <code>#events</code> channel\n          with your own, personal iCal feed.\n        </p>\n        <FeedForm ready={ready} feedURL={feedURL} />\n        <p>\n          Subscribe to this URL with any compatible calendar software, including{\" \"}\n          <a\n            href=\"https://calendar.google.com/calendar/r/settings/addbyurl\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Google calendar\n          </a>\n          .\n        </p>\n      </div>\n    );\n  }\n}\n","import {QueryResult} from \"../common/Transport\";\n\nimport {\n  RecentChannelQuery,\n  RecentChannelQueryVariables,\n  RecentChannelQueryResponse,\n} from \"../__generated__/RecentChannelQuery.graphql\";\n\nimport {\n  RecentHistoryQuery,\n  RecentHistoryQueryVariables,\n  RecentHistoryQueryResponse,\n} from \"../__generated__/RecentHistoryQuery.graphql\";\n\nexport type RecentChannelQuery = RecentChannelQuery;\nexport type RecentChannelQueryVariables = RecentChannelQueryVariables;\nexport type RecentChannelQueryResponse = RecentChannelQueryResponse;\nexport type RecentChannelResult = QueryResult<RecentChannelQuery>;\n\nexport type RecentHistoryQuery = RecentHistoryQuery;\nexport type RecentHistoryQueryVariables = RecentHistoryQueryVariables;\nexport type RecentHistoryQueryResponse = RecentHistoryQueryResponse;\nexport type RecentHistoryResult = QueryResult<RecentHistoryQuery>;\n\nexport type ILine = NonNullable<\n  RecentHistoryQueryResponse[\"cache\"][\"linesForChannel\"]\n>[0];\n\nexport const ALL = Symbol(\"all\");\n\nexport type IChange = ILine | typeof ALL;\n\nexport interface IDisposable {\n  dispose(): void;\n}\n","import {IChange, ILine, IDisposable, ALL} from \"./queryTypes\";\n\nexport class Selection {\n  public isSelecting: boolean;\n  private ids: Set<string>;\n  private subs: ((arg: IChange) => any)[];\n\n  constructor() {\n    this.ids = new Set();\n    this.isSelecting = false;\n    this.subs = [];\n  }\n\n  onDidChange(cb: (arg: IChange) => any): IDisposable {\n    this.subs.push(cb);\n    return {\n      dispose: () => {\n        const index = this.subs.indexOf(cb);\n        this.subs.splice(index, 1);\n      },\n    };\n  }\n\n  didChange(payload: IChange) {\n    for (const sub of this.subs) {\n      sub(payload);\n    }\n  }\n\n  isSelected(line: ILine): boolean {\n    return this.ids.has(line.id!);\n  }\n\n  select(line: ILine): boolean {\n    const wasSelected = this.ids.has(line.id!);\n    this.ids.add(line.id!);\n    if (!wasSelected) this.didChange(line);\n    return !wasSelected;\n  }\n\n  startSelecting() {\n    this.isSelecting = true;\n  }\n\n  stopSelecting() {\n    this.isSelecting = false;\n  }\n\n  toggle(line: ILine) {\n    if (!this.ids.delete(line.id!)) {\n      this.ids.add(line.id!);\n    }\n    this.didChange(line);\n  }\n\n  clear() {\n    this.ids.clear();\n    this.didChange(ALL);\n  }\n\n  getLineIDs(): string[] {\n    return Array.from(this.ids);\n  }\n\n  isEmpty(): boolean {\n    return this.ids.size === 0;\n  }\n\n  describe(): string {\n    if (this.ids.size === 0) {\n      return \"nothing selected\";\n    } else if (this.ids.size === 1) {\n      return \"1 line selected\";\n    } else {\n      return `${this.ids.size} lines selected`;\n    }\n  }\n}\n","import React, {Component} from \"react\";\nimport moment from \"moment\";\n\nimport {ILine, IDisposable, ALL} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\n\ninterface LineProps {\n  previous?: ILine;\n  line: ILine;\n  selection: Selection;\n}\n\nexport class Line extends Component<LineProps> {\n  private sub?: IDisposable;\n\n  componentDidMount() {\n    this.sub = this.props.selection.onDidChange(kind => {\n      if (kind === ALL) this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.sub && this.sub.dispose();\n  }\n\n  render() {\n    const {line, previous} = this.props;\n    const ts = moment(parseInt(line.timestamp));\n    const sameSpeaker = previous && previous.speaker!.id === line.speaker!.id;\n\n    const lineClasses = [\"pushbot-line\"];\n    if (this.props.selection.isSelected(line))\n      lineClasses.push(\"pushbot-line-selected\");\n\n    let speakerBanner = null;\n    if (!sameSpeaker) {\n      speakerBanner = (\n        <div className=\"pushbot-speaker-banner\">\n          <span className=\"pushbot-line-avatar\">\n            <img src={line.speaker!.avatar!.image32!} alt=\"\" />\n          </span>\n          <span className=\"pushbot-line-name\">{line.speaker!.name}</span>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className={lineClasses.join(\" \")}\n        onMouseDown={this.didMouseDown}\n        onMouseMove={this.didMouseMove}\n      >\n        {speakerBanner}\n        <span className=\"pushbot-line-timestamp\">{ts.format(\"h:mm:ss\")}</span>\n        <span className=\"pushbot-line-text\">{line.text}</span>\n      </div>\n    );\n  }\n\n  didMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (event.button !== 0) return;\n\n    event.preventDefault();\n    this.props.selection.toggle(this.props.line);\n    this.props.selection.startSelecting();\n    this.forceUpdate();\n  };\n\n  didMouseMove = (event: React.MouseEvent) => {\n    if (!this.props.selection.isSelecting) return;\n\n    event.preventDefault();\n    if (this.props.selection.select(this.props.line)) {\n      this.forceUpdate();\n    }\n  };\n}\n","import React, {Component} from \"react\";\n\nimport {ILine} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {Line} from \"./Line\";\n\ninterface HistoryProps {\n  lines: ReadonlyArray<ILine> | null;\n  selection: Selection;\n}\n\nexport class History extends Component<HistoryProps> {\n  private bottom?: HTMLElement | null;\n\n  componentDidMount() {\n    window.addEventListener(\"mouseup\", this.didMouseUp);\n\n    this.bottom && this.bottom.scrollIntoView();\n  }\n\n  componentDidUpdate() {\n    this.bottom && this.bottom.scrollIntoView();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\", this.didMouseUp);\n  }\n\n  render() {\n    if (this.props.lines === null) {\n      return this.renderLoading();\n    } else {\n      return this.renderLines();\n    }\n  }\n\n  renderLoading() {\n    return (\n      <div className=\"pushbot-history border pushbot-loading\">\n        <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n        loading\n      </div>\n    );\n  }\n\n  renderLines() {\n    return (\n      <div\n        className=\"pushbot-history border pushbot-history-loaded\"\n        onMouseOut={this.didMouseOut}\n      >\n        {this.props.lines!.map((line, i) => {\n          return (\n            <Line\n              key={line.id!}\n              line={line}\n              previous={this.props.lines![i - 1]}\n              selection={this.props.selection}\n            />\n          );\n        })}\n        <div\n          ref={element => {\n            this.bottom = element;\n          }}\n        />\n      </div>\n    );\n  }\n\n  didMouseUp = () => {\n    this.props.selection.stopSelecting();\n  };\n\n  didMouseOut = () => {\n    this.props.selection.stopSelecting();\n  };\n}\n","import React, {Component} from \"react\";\nimport {Environment, commitMutation} from \"relay-runtime\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {IDisposable} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {Role} from \"../common/Role\";\n\ninterface ActionBarProps {\n  environment: Environment;\n  channel: string;\n  selection: Selection;\n}\n\nexport class ActionBar extends Component<ActionBarProps> {\n  private sub?: IDisposable;\n  private didSubmitQuote: () => void;\n  private didSubmitLim: () => void;\n\n  constructor(props: ActionBarProps) {\n    super(props);\n\n    this.didSubmitQuote = this.submit.bind(this, \"quote\");\n    this.didSubmitLim = this.submit.bind(this, \"lim\");\n  }\n\n  componentDidMount() {\n    this.sub = this.props.selection.onDidChange(() => this.forceUpdate());\n  }\n\n  componentWillUnmount() {\n    this.sub && this.sub.dispose();\n  }\n\n  render() {\n    const textClassNames = [\"text-muted\"];\n    let clearBtn = null;\n    let disable = true;\n    if (this.props.selection.isEmpty()) {\n      textClassNames.push(\"pushbot-empty\");\n    } else {\n      disable = false;\n      clearBtn = (\n        <button className=\"btn btn-link\" onClick={this.didClear}>\n          clear\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"pushbot-recent-actions\">\n        <p className={textClassNames.join(\" \")}>\n          {this.props.selection.describe()}\n          {clearBtn}\n        </p>\n        <div className=\"btn-group pushbot-recent-actions\">\n          <Role name=\"quote pontiff\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={disable}\n              onClick={this.didSubmitQuote}\n            >\n              Quote\n            </button>\n          </Role>\n          <Role name=\"poet laureate\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={disable}\n              onClick={this.didSubmitLim}\n            >\n              Limerick\n            </button>\n          </Role>\n        </div>\n      </div>\n    );\n  }\n\n  didClear = () => {\n    this.props.selection.clear();\n  };\n\n  submit(set: string) {\n    if (!this.props.channel) return;\n\n    const mutation = graphql`\n      mutation ActionBarSubmitMutation(\n        $set: String!\n        $channel: String!\n        $lines: [ID!]!\n      ) {\n        createDocument(set: $set, channel: $channel, lines: $lines) {\n          id\n        }\n      }\n    `;\n\n    const variables = {\n      set,\n      channel: this.props.channel,\n      lines: this.props.selection.getLineIDs(),\n    };\n\n    commitMutation(this.props.environment, {\n      mutation,\n      variables,\n      onCompleted: () => this.props.selection.clear(),\n    });\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {Environment} from \"relay-runtime\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {\n  ILine,\n  RecentChannelQuery,\n  RecentChannelResult,\n  RecentHistoryQuery,\n  RecentHistoryResult,\n} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {History} from \"./History\";\nimport {ActionBar} from \"./ActionBar\";\n\nimport \"./Recent.css\";\n\ninterface RecentState {\n  environment: Environment;\n  currentChannel: string | null;\n  selection: Selection;\n}\n\nexport class Recent extends Component<{}, RecentState> {\n  private knownChannels: ReadonlyArray<string> | null;\n  private history: ReadonlyArray<ILine> | null;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.knownChannels = null;\n    this.history = null;\n\n    this.state = {\n      environment: getEnvironment(),\n      currentChannel: null,\n      selection: new Selection(),\n    };\n    this.didChangeChannel = this.didChangeChannel.bind(this);\n  }\n\n  render() {\n    if (this.knownChannels === null) {\n      return this.renderChannelQuery();\n    }\n\n    return this.renderHistoryQuery();\n  }\n\n  renderError(error: Error) {\n    return (\n      <div className=\"pushbot-recent pushbot-recent-error\">\n        <h3>Recent Chatter</h3>\n        <form className=\"pushbot-recent-form form-inline\">\n          <select\n            className=\"pushbot-recent-channel form-control\"\n            value=\"...\"\n            disabled\n          >\n            <option value=\"...\">...</option>\n          </select>\n        </form>\n        <div className=\"pushbot-error-message\">{error.message}</div>\n      </div>\n    );\n  }\n\n  renderChannelQuery() {\n    const query = graphql`\n      query RecentChannelQuery {\n        cache {\n          knownChannels\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<RecentChannelQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={{}}\n        render={this.renderChannelResult}\n      />\n    );\n  }\n\n  renderChannelResult = ({error, props}: RecentChannelResult) => {\n    if (error) {\n      return this.renderError(error);\n    }\n\n    const channelNames = props ? props.cache.knownChannels : this.knownChannels;\n    return this.renderCurrent(channelNames || [], null);\n  };\n\n  renderHistoryQuery() {\n    const query = graphql`\n      query RecentHistoryQuery($channel: String!) {\n        cache {\n          knownChannels\n          linesForChannel(channel: $channel) {\n            id\n            speaker {\n              id\n              name\n              avatar {\n                image32\n              }\n            }\n            timestamp\n            text\n          }\n        }\n      }\n    `;\n\n    const variables = {\n      channel: this.state.currentChannel || \"\",\n    };\n\n    return (\n      <QueryRenderer<RecentHistoryQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={variables}\n        render={this.renderHistoryResult}\n      />\n    );\n  }\n\n  renderHistoryResult = ({error, props}: RecentHistoryResult) => {\n    if (error) {\n      return this.renderError(error);\n    }\n\n    const channelNames = props ? props.cache.knownChannels : this.knownChannels;\n    const history = props ? props.cache.linesForChannel : this.history;\n\n    return this.renderCurrent(channelNames, history);\n  };\n\n  renderCurrent(\n    channelNames: ReadonlyArray<string> | null,\n    history: ReadonlyArray<ILine> | null\n  ) {\n    if (channelNames) {\n      if (!this.state.currentChannel && channelNames.length > 0) {\n        setTimeout(() => this.setState({currentChannel: channelNames[0]}), 0);\n      }\n      this.knownChannels = channelNames;\n    }\n\n    if (history) {\n      this.history = history;\n    }\n\n    const displayChannelNames = channelNames || [\"...\"];\n    const displayChannel = this.state.currentChannel || \"...\";\n\n    return (\n      <div className=\"pushbot-recent\">\n        <h3>Recent Chatter</h3>\n        <form className=\"pushbot-recent-form form-inline\">\n          <label className=\"mr-md-3\" htmlFor=\"pushbot-recent-channel\">\n            Channel\n          </label>\n          <div className=\"input-group\">\n            <select\n              className=\"pushbot-recent-channel form-control input-group-prepend\"\n              id=\"pushbot-recent-channel\"\n              value={displayChannel}\n              disabled={!channelNames}\n              onChange={this.didChangeChannel}\n            >\n              {displayChannelNames.map(name => {\n                return (\n                  <option key={name} value={name}>\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n            <button\n              className=\"btn btn-secondary pushbot-recent-refresh\"\n              onClick={this.refresh}\n            >\n              <i className=\"fas fa-sync\" aria-hidden /> Refresh\n            </button>\n          </div>\n        </form>\n        <History lines={history} selection={this.state.selection} />\n        <ActionBar\n          environment={this.state.environment}\n          channel={this.state.currentChannel || \"\"}\n          selection={this.state.selection}\n        />\n      </div>\n    );\n  }\n\n  didChangeChannel = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.history = null;\n    this.state.selection.clear();\n    this.setState({currentChannel: event.target.value});\n  };\n\n  refresh = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    this.setState({environment: getEnvironment()});\n  };\n}\n","import React from \"react\";\n\ninterface Props {\n  query: string;\n  onChange: (q: string) => void;\n}\n\nexport function RemForm(props: Props) {\n  function queryChange(evt: React.ChangeEvent<HTMLInputElement>) {\n    props.onChange(evt.target.value);\n  }\n\n  return (\n    <form className=\"form-inline mt-2 mb-3\">\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">containing</div>\n        </div>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          value={props.query}\n          onChange={queryChange}\n        />\n      </div>\n    </form>\n  );\n}\n","import React, {useState, useContext, useEffect} from \"react\";\nimport cx from \"classnames\";\n\nimport {isNetworkError, isGraphQLError} from \"./errors\";\n\nexport type Severity = \"info\" | \"success\" | \"danger\";\n\ninterface Notification {\n  id: number;\n  severity: Severity;\n  body: React.ReactNode;\n}\n\nclass NotificationHub {\n  private nextID: number;\n  private notifications: Notification[];\n  private subscribers: ((ns: Notification[]) => any)[];\n\n  constructor() {\n    this.nextID = 0;\n    this.notifications = [];\n    this.subscribers = [];\n  }\n\n  deleteNotification(n: Notification) {\n    this.notifications = this.notifications.filter(each => each !== n);\n    this.notify();\n  }\n\n  addInfo(body: React.ReactNode) {\n    this.add(\"info\", body);\n  }\n\n  addSuccess(body: React.ReactNode) {\n    this.add(\"success\", body);\n  }\n\n  addSuccessMessage(message: string) {\n    this.addSuccess(<p>{message}</p>);\n  }\n\n  addDanger(body: React.ReactNode) {\n    this.add(\"danger\", body);\n  }\n\n  addError(err: Error) {\n    if (isNetworkError(err)) {\n      this.addDanger(\n        <>\n          <h5>Error: {err.message}</h5>\n          <p>\n            {err.requestURL} {err.responseStatus}\n          </p>\n          <pre>{err.responseText}</pre>\n        </>\n      );\n      return;\n    }\n\n    if (isGraphQLError(err)) {\n      this.addDanger(\n        <>\n          <h5>Error: {err.message}</h5>\n          {err.errors.map((each, i) => (\n            <p key={i}>{each}</p>\n          ))}\n        </>\n      );\n      return;\n    }\n\n    this.addDanger(\n      <>\n        <h5>Error: {err.message}</h5>\n        <pre className=\"bg-light px-2 py-1 mt-4\">{err.stack}</pre>\n      </>\n    );\n  }\n\n  onNotification(callback: (ns: Notification[]) => any) {\n    this.subscribers.push(callback);\n    return () => {\n      this.subscribers = this.subscribers.filter(sub => sub === callback);\n    };\n  }\n\n  protected add(severity: Severity, body: React.ReactNode) {\n    const id = this.nextID;\n    this.nextID++;\n    this.notifications.push({id, severity, body});\n    this.notify();\n  }\n\n  protected notify() {\n    const current = [...this.notifications];\n    for (const subscriber of this.subscribers) {\n      subscriber(current);\n    }\n  }\n}\n\nclass DevNull extends NotificationHub {\n  protected add() {}\n\n  onNotification() {\n    return () => {};\n  }\n}\n\nconst nullHub = new DevNull();\n\nexport const NotificationContext = React.createContext<NotificationHub>(\n  nullHub\n);\n\nexport function NotificationsProvider(props: {children: React.ReactNode}) {\n  const [hub] = useState(() => new NotificationHub());\n\n  return (\n    <NotificationContext.Provider value={hub}>\n      {props.children}\n    </NotificationContext.Provider>\n  );\n}\n\nexport function NotificationsView() {\n  const hub = useContext(NotificationContext);\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n\n  useEffect(() => hub.onNotification(setNotifications), [hub]);\n\n  function makeCloser(n: Notification) {\n    return function(evt: React.MouseEvent<HTMLButtonElement>) {\n      evt.preventDefault();\n      hub.deleteNotification(n);\n    };\n  }\n\n  if (notifications.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"px-2 mt-2 mb-3\">\n      {notifications.map(n => (\n        <div key={n.id} className={cx(\"alert\", `alert-${n.severity}`, \"my-2\")}>\n          <button className=\"close\" onClick={makeCloser(n)}>\n            <i className=\"fa far fa-window-close\" />\n          </button>\n          {n.body}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Loading() {\n  return (\n    <div className=\"row mt-md-5 pushbot-loading\">\n      <p className=\"mx-auto\">\n        <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n        loading\n      </p>\n    </div>\n  );\n}\n","import React, {useContext} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {Link} from \"react-router-dom\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {NotificationContext} from \"../common/Notifications\";\nimport {Loading} from \"../common/Loading\";\nimport {RandomMemoryListQuery, RandomMemoryListResult} from \"./memoryTypes\";\n\nexport function RandomMemoryList() {\n  const env = getEnvironment();\n\n  const query = graphql`\n    query RandomMemoryListQuery {\n      rem {\n        search(first: 10, orderField: RANDOM) {\n          edges {\n            cursor\n            node {\n              key\n            }\n          }\n        }\n      }\n    }\n  `;\n\n  return (\n    <QueryRenderer<RandomMemoryListQuery>\n      environment={env}\n      query={query}\n      variables={{}}\n      render={result => <RandomMemoryResults {...result} />}\n    />\n  );\n}\n\nfunction RandomMemoryResults({error, props, retry}: RandomMemoryListResult) {\n  const hub = useContext(NotificationContext);\n\n  if (error !== null) {\n    hub.addError(error);\n    return <div className=\"alert alert-danger\">Unable to perform query.</div>;\n  }\n\n  if (props === null) {\n    return <Loading />;\n  }\n\n  function another() {\n    return retry && retry();\n  }\n\n  const results = props.rem.search.edges.map(edge => (\n    <li key={edge.cursor} className=\"list-group-item\">\n      <Link to={`/rem/${encodeURIComponent(edge.node.key)}`}>\n        {edge.node.key}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div className=\"card card-light\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">\n          Type above to search known memory keys. Here's a random sample of\n          what's available:\n        </p>\n        <p className=\"card-text mt-1 mb-3\">\n          <button className=\"btn btn-secondary\" onClick={another}>\n            <i className=\"fas fa-sync mr-2\" aria-hidden=\"true\" />\n            Another\n          </button>\n        </p>\n        <ul className=\"card-text list-group\">{results}</ul>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {createPaginationContainer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {Link} from \"react-router-dom\";\n\nimport {MatchingMemoryPageRem} from \"./memoryTypes\";\n\ninterface Props {\n  relay: {\n    hasMore(): boolean;\n    isLoading(): boolean;\n    loadMore(): any;\n  };\n  rem: MatchingMemoryPageRem;\n}\n\nfunction MemoryPageView(props: Props) {\n  function loadNextPage() {\n    if (props.relay.hasMore() && !props.relay.isLoading()) {\n      return;\n    }\n  }\n\n  const pageSize = props.rem.search.edges.length;\n  const count = props.rem.search.pageInfo.count;\n\n  return (\n    <>\n      <p className=\"my-2\">\n        Showing {pageSize} result{pageSize === 1 ? \"\" : \"s\"}\n        {count > pageSize ? `out of ${count}` : \"\"}.\n      </p>\n      <ul className=\"list-group\">\n        {props.rem.search.edges.map(edge => (\n          <li key={edge.cursor} className=\"list-group-item\">\n            <Link to={`/rem/${encodeURIComponent(edge.node.key)}`}>\n              {edge.node.key}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <div className=\"my-2\">\n        {props.relay.hasMore() && (\n          <button className=\"btn btn-info\" onClick={loadNextPage}>\n            Next page\n          </button>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport const MatchingMemoryPage = createPaginationContainer(\n  MemoryPageView,\n  {\n    rem: graphql`\n      fragment MatchingMemoryPage_rem on Rem\n        @argumentDefinitions(\n          pattern: {type: \"String!\"}\n          count: {type: \"Int!\"}\n          cursor: {type: \"String\"}\n        ) {\n        search(query: $pattern, first: $count, after: $cursor)\n          @connection(key: \"MatchingMemoryPage_search\") {\n          pageInfo {\n            count\n            hasPreviousPage\n            hasNextPage\n          }\n\n          edges {\n            cursor\n            node {\n              key\n            }\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.rem && props.rem.search;\n    },\n    getVariables(_props, {count, cursor}, fragmentVariables) {\n      return {\n        pattern: fragmentVariables.pattern,\n        count,\n        cursor,\n      };\n    },\n    query: graphql`\n      query MatchingMemoryPageQuery(\n        $pattern: String!\n        $count: Int!\n        $cursor: String\n      ) {\n        rem {\n          ...MatchingMemoryPage_rem\n            @arguments(pattern: $pattern, count: $count, cursor: $cursor)\n        }\n      }\n    `,\n  }\n);\n","import React, {useContext} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {NotificationContext} from \"../common/Notifications\";\nimport {Loading} from \"../common/Loading\";\nimport {MatchingMemoryListQuery} from \"../__generated__/MatchingMemoryListQuery.graphql\";\nimport {MatchingMemoryPage} from \"./MatchingMemoryPage\";\n\ntype Result = QueryResult<MatchingMemoryListQuery>;\n\ninterface Props {\n  query: string;\n}\n\nexport function MatchingMemoryList(props: Props) {\n  const env = getEnvironment();\n\n  const query = graphql`\n    query MatchingMemoryListQuery($pattern: String!) {\n      rem {\n        ...MatchingMemoryPage_rem @arguments(pattern: $pattern, count: 10)\n      }\n    }\n  `;\n\n  const variables = {\n    pattern: props.query,\n  };\n\n  return (\n    <QueryRenderer<MatchingMemoryListQuery>\n      environment={env}\n      query={query}\n      variables={variables}\n      render={results => <MatchingMemoryResults {...results} />}\n    />\n  );\n}\n\nfunction MatchingMemoryResults(results: Result) {\n  const hub = useContext(NotificationContext);\n\n  if (results.error) {\n    hub.addError(results.error);\n    return <div className=\"alert alert-danger\">Unable to perform query.</div>;\n  }\n\n  if (!results.props) {\n    return <Loading />;\n  }\n\n  return <MatchingMemoryPage rem={results.props.rem} />;\n}\n","import React from \"react\";\n\nimport {useQueryParameter} from \"../common/urlSearch\";\nimport {RemForm} from \"./RemForm\";\nimport {RandomMemoryList} from \"./RandomMemoryList\";\nimport {MatchingMemoryList} from \"./MatchingMemoryList\";\n\nexport function Rem() {\n  const [query, setQuery] = useQueryParameter(\"q\");\n\n  return (\n    <>\n      <h3>rem</h3>\n      <RemForm query={query} onChange={setQuery} />\n      {query === \"\" ? (\n        <RandomMemoryList />\n      ) : (\n        <MatchingMemoryList query={query} />\n      )}\n    </>\n  );\n}\n","import {useState} from \"react\";\n\nexport function useQueryParameter(\n  parameterName: string\n): [string, (v: string) => void] {\n  const [, setLatch] = useState(0);\n\n  const params = new URLSearchParams(window.location.search);\n  const current = params.get(parameterName) || \"\";\n\n  function setNext(next: string) {\n    const nextParams = new URLSearchParams();\n    if (next.length > 0) {\n      nextParams.set(parameterName, next);\n    }\n\n    const nextSearch = nextParams.toString();\n    const nextURL =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname +\n      (nextSearch.length > 0 ? \"?\" + nextSearch : \"\") +\n      window.location.hash;\n\n    if (window.history.replaceState) {\n      window.history.replaceState({}, \"\", nextURL);\n    } else {\n      window.location.href = nextURL;\n    }\n    setLatch(latch => latch + 1);\n  }\n\n  return [current, setNext];\n}\n","import React, {useContext} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {Link} from \"react-router-dom\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {NotificationContext} from \"../common/Notifications\";\nimport {Loading} from \"../common/Loading\";\nimport {RemEntryQuery} from \"../__generated__/RemEntryQuery.graphql\";\n\ntype RemEntryQueryResult = QueryResult<RemEntryQuery>;\n\ninterface Props {\n  match: {\n    params: {\n      key: string;\n    };\n  };\n}\n\nexport function RemEntry(props: Props) {\n  const env = getEnvironment();\n\n  const query = graphql`\n    query RemEntryQuery($key: String!) {\n      rem {\n        get(key: $key) {\n          key\n          value\n        }\n      }\n    }\n  `;\n\n  const variables = {key: props.match.params.key};\n\n  return (\n    <QueryRenderer<RemEntryQuery>\n      environment={env}\n      query={query}\n      variables={variables}\n      render={results => <RemEntryWrapper {...results} />}\n    />\n  );\n}\n\nfunction RemEntryWrapper(results: RemEntryQueryResult) {\n  return (\n    <>\n      <h3>rem</h3>\n      <p className=\"my-2\">\n        <Link to=\"/rem\">\n          <i className=\"fas fa-angle-double-left mr-2\" />\n          rem search\n        </Link>\n      </p>\n      <RemEntryResult {...results} />\n    </>\n  );\n}\n\nfunction RemEntryResult(results: RemEntryQueryResult) {\n  const hub = useContext(NotificationContext);\n\n  if (results.error) {\n    hub.addError(results.error);\n    return <div className=\"alert alert-danger\">Unable to perform query.</div>;\n  }\n\n  if (!results.props) {\n    return <Loading />;\n  }\n\n  const {get} = results.props.rem;\n  if (!get) {\n    return <div className=\"alert alert-danger\">Key not found.</div>;\n  }\n\n  const {key, value} = get;\n\n  if (/^http(?:s)?:\\/\\//.test(value)) {\n    return (\n      <div className=\"container-fluid\">\n        <h2 className=\"my-5 text-center\">{key}</h2>\n        <img\n          className=\"d-block mx-auto\"\n          style={{maxWidth: \"100%\"}}\n          src={value}\n          alt=\"\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"row my-5\">\n      <h2 className=\"col-3 text-muted text-right\">{key}</h2>\n      <h2 className=\"col-9 font-weight-bolder text-monospace\">{value}</h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {createNetworkError} from \"./errors\";\n\nconst COORDINATOR_URL = `${process.env.REACT_APP_AZ_COORDINATOR_URL}`;\n\nexport type ServiceType = \"simple\" | \"oneshot\" | \"timer\" | \"self\";\n\nexport interface IContainer {\n  name?: string;\n  image_name: string;\n  image_tag: string;\n}\n\nexport interface IEnvMap {\n  [varName: string]: string;\n}\n\nexport interface IPortMap {\n  [hostPort: string]: number;\n}\n\nexport interface IVolumeMap {\n  [hostPath: string]: string;\n}\n\ninterface IDesiredUnitCommon {\n  type: ServiceType;\n  secrets: string[];\n  env: IEnvMap;\n  ports: IPortMap;\n  volumes: IVolumeMap;\n  container?: IContainer;\n  calendar?: string;\n}\n\nexport interface IDesiredUnit extends IDesiredUnitCommon {\n  id: number;\n  path: string;\n}\n\nexport interface IDesiredUnitCreate extends IDesiredUnitCommon {\n  path: string;\n}\n\nexport interface IDesiredUnitUpdate extends IDesiredUnitCommon {}\n\nexport interface IDesiredState {\n  units: IDesiredUnit[];\n}\n\nexport interface IActualUnit {\n  path: string;\n}\n\nexport interface IActualState {\n  units: IActualUnit[];\n}\n\nexport interface ISecretsCreate {\n  [secretName: string]: string;\n}\n\nexport type ISecretsDelete = string[];\n\nexport type ISecrets = string[];\n\nexport interface IDelta {\n  units_to_add: IDesiredUnit[];\n  units_to_change: IDesiredUnit[];\n  units_to_restart: IDesiredUnit[];\n  units_to_remove: IActualUnit[];\n  files_to_write: string[];\n}\n\nexport interface ISyncReport {\n  timestamp: number;\n  elapsed: number;\n  message: string;\n  fields: {[fieldName: string]: any};\n}\n\nexport interface ISync {\n  in_progress: boolean;\n  reports: ISyncReport[];\n  errors: string[];\n  delta?: IDelta;\n}\n\nexport class Coordinator {\n  constructor(private readonly token: string) {}\n\n  async getDesiredState(): Promise<IDesiredState> {\n    return this.requestJSON<IDesiredState>(\"GET\", \"/desired\");\n  }\n\n  async createDesiredUnit(unit: IDesiredUnitCreate): Promise<IDesiredUnit> {\n    return this.requestJSON<IDesiredUnit>(\"POST\", \"/desired\", unit);\n  }\n\n  async updateDesiredUnit(\n    id: number,\n    unit: IDesiredUnitUpdate\n  ): Promise<IDesiredUnit> {\n    return this.requestJSON<IDesiredUnit>(\n      \"PUT\",\n      `/desired/${encodeURIComponent(id.toString())}`,\n      unit\n    );\n  }\n\n  async deleteDesiredUnit(id: number): Promise<void> {\n    await this.request(\n      \"DELETE\",\n      `/desired/${encodeURIComponent(id.toString())}`\n    );\n  }\n\n  async getActualUnits(): Promise<IActualState> {\n    return this.requestJSON<IActualState>(\"GET\", \"/actual\");\n  }\n\n  async getSecrets(): Promise<ISecrets> {\n    return this.requestJSON<ISecrets>(\"GET\", \"/secrets\");\n  }\n\n  async createSecrets(secrets: ISecretsCreate): Promise<void> {\n    await this.request(\"POST\", \"/secrets\", secrets);\n  }\n\n  async deleteSecrets(secretNames: ISecretsDelete): Promise<void> {\n    await this.request(\"DELETE\", \"/secrets\", secretNames);\n  }\n\n  async getDiff(): Promise<IDelta> {\n    return this.requestJSON<IDelta>(\"GET\", \"/diff\");\n  }\n\n  async getSync(): Promise<ISync> {\n    return this.requestJSON<ISync>(\"GET\", \"/sync\");\n  }\n\n  async createSync(): Promise<void> {\n    await this.request(\"POST\", \"/sync\");\n  }\n\n  isPresent(): boolean {\n    return true;\n  }\n\n  protected async request(\n    method: string,\n    subPath: string,\n    payload?: any\n  ): Promise<Response> {\n    const url = `${COORDINATOR_URL}${subPath}`;\n    const headers: HeadersInit = {\n      Authorization: `Basic ${btoa(\"token:\" + this.token)}`,\n    };\n\n    const options: RequestInit = {\n      method,\n      headers,\n      credentials: \"include\",\n    };\n\n    if (payload) {\n      headers[\"Content-Type\"] = \"application/json\";\n      options.body = JSON.stringify(payload);\n    }\n\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw await createNetworkError(\n        \"Unable to contact coordinator\",\n        url,\n        response\n      );\n    }\n    return response;\n  }\n\n  protected async requestJSON<R>(\n    method: string,\n    subPath: string,\n    payload?: any\n  ): Promise<R> {\n    const response = await this.request(method, subPath, payload);\n    return response.json() as any;\n  }\n}\n\nclass NullCoordinator extends Coordinator {\n  protected async request(): Promise<any> {\n    throw new Error(\"Coordinator is not available\");\n  }\n\n  isPresent(): boolean {\n    return false;\n  }\n}\n\nexport const nullCoordinator = new NullCoordinator(\"\");\n\nexport const CoordinatorContext = React.createContext<Coordinator>(\n  nullCoordinator\n);\n","import {useContext, useEffect, useState} from \"react\";\n\nimport {Coordinator, CoordinatorContext} from \"./coordinator\";\n\ninterface CoordinatorContainerProps<R> {\n  getter: (c: Coordinator) => Promise<R>;\n  nullValue: R;\n  children: (value: R, isLoading: boolean, refresh: () => void) => JSX.Element;\n}\n\nexport function CoordinatorContainer<R>(props: CoordinatorContainerProps<R>) {\n  const coordinator = useContext(CoordinatorContext);\n  const {getter} = props;\n  const [isLoading, setLoading] = useState(true);\n  const [value, setValue] = useState(props.nullValue);\n  const [latch, setLatch] = useState(0);\n\n  useEffect(() => {\n    let ignore = false;\n\n    (async function() {\n      setLoading(true);\n      const v = await getter(coordinator);\n\n      if (!ignore) {\n        setLoading(false);\n        setValue(v);\n      }\n    })();\n\n    return () => {\n      ignore = true;\n    };\n  }, [coordinator, getter, latch]);\n\n  function refresh() {\n    setLatch(current => current + 1);\n  }\n\n  return props.children(value, isLoading, refresh);\n}\n","import React from \"react\";\nimport * as path from \"path\";\n\ninterface Props {\n  path: string;\n}\n\nexport function ServicePath(props: Props) {\n  const dirname = path.dirname(props.path);\n  const basename = path.basename(props.path);\n\n  return (\n    <span className=\"text-monospace\">\n      <span className=\"text-muted\">\n        {dirname}\n        {path.sep}\n      </span>\n      <span className=\"font-weight-bold\">{basename}</span>\n    </span>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {IDesiredUnit, IPortMap} from \"../../common/coordinator\";\nimport {ServicePath} from \"./ServicePath\";\n\ninterface ServiceDisplayProps {\n  unit: IDesiredUnit;\n}\n\nfunction plural(count: number, noun: string) {\n  if (count === 1) {\n    return `${count} ${noun}`;\n  } else {\n    return `${count} ${noun}s`;\n  }\n}\n\nfunction ports(p: IPortMap) {\n  const keys = Object.keys(p);\n  if (keys.length === 0) {\n    return null;\n  }\n\n  const mappings: string[] = [];\n  for (const source of Object.keys(p)) {\n    const dest = p[source];\n    mappings.push(`${source} => ${dest}`);\n  }\n  return mappings.join(\", \");\n}\n\nexport function ServiceDisplay(props: ServiceDisplayProps) {\n  const {unit} = props;\n\n  return (\n    <li className=\"list-group-item px-4 rounded pushbot-serviceDisplay\">\n      <div className=\"float-right pushbot-serviceDisplay--controls\">\n        <Link\n          to={`/admin/services/${unit.id}`}\n          className=\"btn btn-secondary d-flex align-items-baseline\"\n        >\n          <i className=\"fas fa-cog mr-2\" />\n          edit\n        </Link>\n      </div>\n      <ServicePath path={unit.path} />\n      <p>\n        type <span className=\"font-weight-bold\">{unit.type}</span>\n        {\" | \"}\n        {plural(Object.keys(unit.env).length, \" environment variable\")}\n        {\" | \"}\n        {plural(unit.secrets.length, \" secret\")}\n        {\" | \"}\n        {plural(Object.keys(unit.volumes).length, \"volume\")} {ports(unit.ports)}\n      </p>\n    </li>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {IDesiredState} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {ServiceDisplay} from \"./ServiceDisplay\";\n\nimport \"./Services.css\";\n\nconst nullDesiredState: IDesiredState = {units: []};\n\nexport function Services() {\n  return (\n    <>\n      <h3>services</h3>\n      <CoordinatorContainer<IDesiredState>\n        getter={c => c.getDesiredState()}\n        nullValue={nullDesiredState}\n      >\n        {(state, isLoading, refresh) => {\n          const list = isLoading ? (\n            <Loading />\n          ) : (\n            state.units.map(unit => (\n              <ServiceDisplay unit={unit} key={unit.id} />\n            ))\n          );\n\n          return (\n            <>\n              <div className=\"my-3 d-flex justify-content-end\">\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={refresh}\n                  disabled={isLoading}\n                >\n                  <i className=\"fas fa-sync-alt mr-2\" />\n                  Refresh\n                </button>\n              </div>\n              {list}\n              <div className=\"my-3 d-flex justify-content-end\">\n                <Link className=\"btn btn-primary\" to=\"/admin/services/create\">\n                  <i className=\"fas fa-plus mr-2\" />\n                  Create\n                </Link>\n              </div>\n            </>\n          );\n        }}\n      </CoordinatorContainer>\n    </>\n  );\n}\n","import {useState} from \"react\";\n\nimport {\n  ServiceType as ValidServiceType,\n  IDesiredUnit,\n  IDesiredUnitUpdate,\n  IDesiredUnitCreate,\n  IEnvMap,\n  IPortMap,\n  IVolumeMap,\n  IContainer,\n} from \"../../common/coordinator\";\n\nexport interface ServiceType {\n  name: string;\n\n  valid: boolean;\n  hasAnyContainer: boolean;\n  hasContainerConfig: boolean;\n  hasContainerName: boolean;\n  hasEnvAndSecrets: boolean;\n  hasVolumes: boolean;\n  hasPorts: boolean;\n  hasSchedule: boolean;\n\n  ifInvalid<R>(cb: () => R): R | null;\n  ifAnyContainer<R>(cb: () => R): R | null;\n  ifContainerConfig<R>(cb: () => R): R | null;\n  ifContainerName<R>(cb: () => R): R | null;\n  ifEnvAndSecrets<R>(cb: () => R): R | null;\n  ifVolumes<R>(cb: () => R): R | null;\n  ifPorts<R>(cb: () => R): R | null;\n  ifSchedule<R>(cb: () => R): R | null;\n}\n\ninterface Spec {\n  isInvalid?: boolean;\n  hasContainerConfig?: boolean;\n  hasContainerName?: boolean;\n  hasEnvAndSecrets?: boolean;\n  hasVolumes?: boolean;\n  hasPorts?: boolean;\n  hasSchedule?: boolean;\n}\n\nconst typeMap: Map<string, ServiceType> = new Map();\n\nfunction makeServiceType(typeName: string, config: Spec): ServiceType {\n  function accept<R>(cb: () => R): R {\n    return cb();\n  }\n\n  function skip() {\n    return null;\n  }\n\n  const serviceType = {\n    name: typeName,\n\n    valid: !config.isInvalid,\n    hasAnyContainer: Boolean(\n      config.hasContainerName || config.hasContainerConfig\n    ),\n    hasContainerConfig: Boolean(config.hasContainerConfig),\n    hasContainerName: Boolean(config.hasContainerName),\n    hasEnvAndSecrets: Boolean(config.hasEnvAndSecrets),\n    hasVolumes: Boolean(config.hasVolumes),\n    hasPorts: Boolean(config.hasPorts),\n    hasSchedule: Boolean(config.hasSchedule),\n\n    ifInvalid: config.isInvalid ? accept : skip,\n    ifAnyContainer:\n      config.hasContainerName || config.hasContainerConfig ? accept : skip,\n    ifContainerConfig: config.hasContainerConfig ? accept : skip,\n    ifContainerName: config.hasContainerName ? accept : skip,\n    ifEnvAndSecrets: config.hasEnvAndSecrets ? accept : skip,\n    ifVolumes: config.hasVolumes ? accept : skip,\n    ifPorts: config.hasPorts ? accept : skip,\n    ifSchedule: config.hasSchedule ? accept : skip,\n  };\n\n  if (!config.isInvalid) {\n    typeMap.set(typeName, serviceType);\n  }\n  return serviceType;\n}\n\nexport const typeSimple = makeServiceType(\"simple\", {\n  hasContainerConfig: true,\n  hasContainerName: true,\n  hasEnvAndSecrets: true,\n  hasVolumes: true,\n  hasPorts: true,\n});\n\nexport const typeOneShot = makeServiceType(\"oneshot\", {\n  hasContainerConfig: true,\n  hasEnvAndSecrets: true,\n  hasVolumes: true,\n  hasPorts: true,\n});\n\nexport const typeTimer = makeServiceType(\"timer\", {\n  hasSchedule: true,\n});\n\nexport const typeSelf = makeServiceType(\"self\", {\n  hasEnvAndSecrets: true,\n});\n\nexport const serviceTypes = [typeSimple, typeOneShot, typeTimer, typeSelf];\n\nexport function getServiceType(typeName: string): ServiceType {\n  return typeMap.get(typeName) || makeServiceType(typeName, {isInvalid: true});\n}\n\nexport type UnitAction = \"create\" | \"update\";\n\nexport class DesiredUnitPayload {\n  private original?: IDesiredUnit;\n  path: string;\n  currentType: ServiceType;\n  secrets: string[];\n  env: IEnvMap;\n  ports: IPortMap;\n  volumes: IVolumeMap;\n  containerName: string;\n  containerImageName: string;\n  containerImageTag: string;\n  calendar: string;\n\n  constructor(original?: IDesiredUnit) {\n    this.original = original;\n    this.path = original ? original.path : \"/etc/systemd/system/az-\";\n    this.currentType = original ? getServiceType(original.type) : typeSimple;\n    this.secrets = original ? [...original.secrets] : [];\n    this.env = original ? {...original.env} : {};\n    this.ports = original ? {...original.ports} : {};\n    this.volumes = original ? {...original.volumes} : {};\n    this.containerName =\n      (original && original.container && original.container.name) || \"\";\n    this.containerImageName =\n      (original && original.container && original.container.image_name) ||\n      \"quay.io/smashwilson/az-\";\n    this.containerImageTag =\n      (original && original.container && original.container.image_tag) ||\n      \"latest\";\n\n    this.calendar =\n      original && original.calendar ? original.calendar : \"*-*-* 00:00:00\";\n  }\n\n  private get type(): ValidServiceType {\n    return this.currentType.name as ValidServiceType;\n  }\n\n  private commonValidation(): boolean {\n    function isEmpty(s: string): boolean {\n      return s.length === 0;\n    }\n\n    function hasEmptyKeyOrValue(obj: {[k: string]: string}): boolean {\n      const ks = Object.keys(obj);\n      return ks.some(k => isEmpty(k) || isEmpty(obj[k]));\n    }\n\n    if (!this.currentType.valid) {\n      return false;\n    }\n\n    if (this.currentType.hasContainerName && isEmpty(this.containerName)) {\n      return false;\n    }\n\n    if (this.currentType.hasContainerConfig) {\n      if (isEmpty(this.containerImageName)) {\n        return false;\n      }\n\n      if (isEmpty(this.containerImageTag)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      if (hasEmptyKeyOrValue(this.env)) {\n        return false;\n      }\n\n      if (this.secrets.some(isEmpty)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasPorts) {\n      function isInvalidPortNumber(p: number): boolean {\n        return isNaN(p) || p < 0 || p > 65536;\n      }\n\n      function isInvalidPort(s: string): boolean {\n        const parsed = parseInt(s, 10);\n        return isInvalidPortNumber(parsed);\n      }\n\n      const hostPorts = Object.keys(this.ports);\n      if (hostPorts.some(isInvalidPort)) {\n        return false;\n      }\n\n      if (hostPorts.some(hp => isInvalidPortNumber(this.ports[hp]))) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasVolumes) {\n      if (hasEmptyKeyOrValue(this.volumes)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasSchedule) {\n      if (isEmpty(this.calendar)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isCreate() {\n    return this.original === undefined;\n  }\n\n  isUpdate() {\n    return this.original !== undefined;\n  }\n\n  withAction<R>(cbs: {create: () => R; update: (id: number) => R}): R {\n    if (this.original) {\n      return cbs.update(this.original.id);\n    } else {\n      return cbs.create();\n    }\n  }\n\n  isModified(): boolean {\n    if (!this.original) {\n      return true;\n    }\n\n    if (this.currentType.name !== this.original.type) {\n      return true;\n    }\n\n    if (this.currentType.hasAnyContainer) {\n      if (!this.original.container) {\n        return true;\n      }\n\n      const container = this.original.container;\n\n      if (\n        this.currentType.hasContainerName &&\n        container.name !== this.containerName\n      ) {\n        return true;\n      }\n\n      if (container.image_name !== this.containerImageName) {\n        return true;\n      }\n\n      if (container.image_tag !== this.containerImageTag) {\n        return true;\n      }\n    }\n\n    function arrayChanged<K>(array: K[], original: K[]): boolean {\n      if (array.length !== original.length) {\n        return true;\n      }\n\n      const s = new Set(array);\n      return original.some(o => !s.has(o));\n    }\n\n    function objectChanged<K>(\n      obj: {[k: string]: K},\n      original: {[k: string]: K}\n    ): boolean {\n      const ks = Object.keys(obj);\n      return (\n        arrayChanged(ks, Object.keys(original)) &&\n        ks.some(k => obj[k] !== original[k])\n      );\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      if (arrayChanged(this.secrets, this.original.secrets)) {\n        return true;\n      }\n\n      if (objectChanged(this.env, this.original.env)) {\n        return true;\n      }\n    }\n\n    if (\n      this.currentType.hasPorts &&\n      objectChanged(this.ports, this.original.ports)\n    ) {\n      return true;\n    }\n\n    if (\n      this.currentType.hasVolumes &&\n      objectChanged(this.volumes, this.original.volumes)\n    ) {\n      return true;\n    }\n\n    if (\n      this.currentType.hasSchedule &&\n      this.calendar !== this.original.calendar\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isValid(): boolean {\n    if (!this.commonValidation()) {\n      return false;\n    }\n\n    return this.withAction({\n      create: () => this.path.length !== 0,\n      update: () => this.isModified(),\n    });\n  }\n\n  private getCommonPayload(): IDesiredUnitCreate | IDesiredUnitUpdate {\n    const payload: IDesiredUnitCreate | IDesiredUnitUpdate = {\n      type: this.type,\n      secrets: [],\n      env: {},\n      ports: {},\n      volumes: {},\n    };\n\n    if (this.currentType.hasContainerConfig) {\n      const container: IContainer = {\n        image_name: this.containerImageName,\n        image_tag: this.containerImageTag,\n      };\n      if (this.currentType.hasContainerName) {\n        container.name = this.containerName;\n      }\n      payload.container = container;\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      payload.env = this.env;\n      payload.secrets = this.secrets;\n    }\n\n    if (this.currentType.hasPorts) {\n      payload.ports = this.ports;\n    }\n\n    if (this.currentType.hasVolumes) {\n      payload.volumes = this.volumes;\n    }\n\n    if (this.currentType.hasSchedule) {\n      payload.calendar = this.calendar;\n    }\n\n    return payload;\n  }\n\n  withID<R>(fn: (id: number) => R): R | null {\n    if (this.original) {\n      return fn(this.original.id);\n    }\n\n    return null;\n  }\n\n  getCreatePayload(): IDesiredUnitCreate {\n    return {\n      ...this.getCommonPayload(),\n      path: this.path,\n    };\n  }\n\n  getUpdatePayload(): IDesiredUnitUpdate {\n    return this.getCommonPayload();\n  }\n}\n\nexport function usePayloadState<K extends keyof DesiredUnitPayload>(\n  payload: DesiredUnitPayload,\n  key: K\n): [DesiredUnitPayload[K], (v: DesiredUnitPayload[K]) => void] {\n  const [value, setValue] = useState<DesiredUnitPayload[K]>(payload[key]);\n\n  function setInPayload(v: DesiredUnitPayload[K]): void {\n    payload[key] = v;\n    setValue(v);\n  }\n\n  return [value, setInPayload];\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport cx from \"classnames\";\n\ninterface ToggleableInputProps {\n  value: string;\n  onChange: (newValue: string) => any;\n  controlID?: string;\n  controlClassName?: string;\n}\n\nexport function ToggleableInput(props: ToggleableInputProps) {\n  const [multiLineMode, setMode] = useState<boolean>(\n    props.value.indexOf(\"\\n\") !== -1\n  );\n  const controlRef = useRef<HTMLTextAreaElement & HTMLInputElement>(null);\n\n  const cn = cx(\"form-control\", props.controlClassName);\n\n  useEffect(() => {\n    if (controlRef.current) {\n      controlRef.current.focus();\n    }\n  }, [multiLineMode]);\n\n  if (multiLineMode) {\n    return (\n      <div className=\"input-group\">\n        <textarea\n          ref={controlRef}\n          id={props.controlID}\n          className={cn}\n          onChange={evt => {\n            evt.preventDefault();\n            props.onChange(evt.target.value);\n          }}\n        >\n          {props.value}\n        </textarea>\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-light\"\n            onClick={evt => {\n              evt.preventDefault();\n              setMode(false);\n            }}\n          >\n            <i className=\"fas fa-compress\" />\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"input-group\">\n        <input\n          ref={controlRef}\n          id={props.controlID}\n          type=\"text\"\n          className={cn}\n          onChange={evt => {\n            evt.preventDefault();\n            props.onChange(evt.target.value);\n          }}\n          value={props.value}\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-light\"\n            onClick={evt => {\n              evt.preventDefault();\n              setMode(true);\n            }}\n          >\n            <i className=\"fas fa-expand\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {ToggleableInput} from \"../../common/ToggleableInput\";\n\nlet envVarCounter = 0;\n\ninterface EnvVarEditorProps {\n  value: string;\n  onChangeValue: (newValue: string) => any;\n\n  renderName: (uniqueID: string) => React.ReactNode;\n  renderControls: () => React.ReactNode;\n}\n\nfunction EnvVarEditor(props: EnvVarEditorProps) {\n  const uniqueID = `envVarEditor--${envVarCounter}`;\n  envVarCounter++;\n\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-3\">{props.renderName(uniqueID)}</div>\n      <div className=\"col-sm-8\">\n        <ToggleableInput\n          controlID={uniqueID}\n          controlClassName=\"text-monospace\"\n          value={props.value}\n          onChange={props.onChangeValue}\n        />\n      </div>\n      <div className=\"col-sm-1 d-flex justify-content-end\">\n        {props.renderControls()}\n      </div>\n    </div>\n  );\n}\n\ninterface ExistingEnvVarProps {\n  name: string;\n  value: string;\n  onChange: (newValue: string) => any;\n  onDelete: () => any;\n}\n\nexport function ExistingEnvVarEditor(props: ExistingEnvVarProps) {\n  return (\n    <EnvVarEditor\n      value={props.value}\n      onChangeValue={props.onChange}\n      renderName={uniqueID => (\n        <label htmlFor={uniqueID} className=\"text-monospace\">\n          {props.name}\n        </label>\n      )}\n      renderControls={() => (\n        <button className=\"btn btn-outline-danger\" onClick={props.onDelete}>\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      )}\n    />\n  );\n}\n\ninterface NewEnvVarProps {\n  onAccept: (name: string, value: string) => any;\n}\n\nexport function NewEnvVarEditor(props: NewEnvVarProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [currentName, setName] = useState(\"\");\n  const [currentValue, setValue] = useState(\"\");\n  const nameFieldRef = useRef<HTMLInputElement>(null);\n\n  const canAccept = currentName.length > 0;\n\n  useEffect(() => {\n    if (expanded && nameFieldRef.current) {\n      nameFieldRef.current.focus();\n    }\n  }, [expanded]);\n\n  if (!expanded) {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-3\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(true);\n            }}\n          >\n            <i className=\"far fa-plus-square\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <EnvVarEditor\n      value={currentValue}\n      onChangeValue={v => setValue(v)}\n      renderName={() => (\n        <input\n          ref={nameFieldRef}\n          type=\"text\"\n          className=\"form-control text-monospace\"\n          value={currentName}\n          onChange={evt => setName(evt.target.value)}\n        />\n      )}\n      renderControls={() => (\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canAccept}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onAccept(currentName.toLocaleUpperCase(), currentValue);\n              setName(\"\");\n              setValue(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      )}\n    />\n  );\n}\n","import React from \"react\";\n\nimport {IEnvMap} from \"../../common/coordinator\";\nimport {ExistingEnvVarEditor, NewEnvVarEditor} from \"./EnvVarEditor\";\n\ninterface EnvVarListEditorProps {\n  envVars: IEnvMap;\n  onChange: (name: string, value: string) => any;\n  onDelete: (name: string) => any;\n}\n\nexport function EnvVarListEditor(props: EnvVarListEditorProps) {\n  const varNames = Object.keys(props.envVars);\n  varNames.sort();\n\n  const existingVarEditors = varNames.map(varName => (\n    <ExistingEnvVarEditor\n      key={`envVarEditor-${varName}`}\n      name={varName}\n      value={props.envVars[varName]}\n      onChange={value => props.onChange(varName, value)}\n      onDelete={() => props.onDelete(varName)}\n    />\n  ));\n\n  return (\n    <>\n      {existingVarEditors}\n      <NewEnvVarEditor onAccept={props.onChange} />\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {ToggleableInput} from \"../../common/ToggleableInput\";\n\ninterface ExistingSecretProps {\n  name: string;\n  onDelete: () => any;\n}\n\nexport function ExistingSecretEditor(props: ExistingSecretProps) {\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-3\">\n        <label className=\"text-monospace text-success\">\n          <i className=\"fas fa-lock d-inline mr-2\" />\n          {props.name}\n        </label>\n      </div>\n      <div className=\"col-sm-8\" />\n      <div\n        className=\"col-sm-1 d-flex justify-content-end\"\n        onClick={props.onDelete}\n      >\n        <button className=\"btn btn-outline-danger\">\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\ninterface AddSecretProps {\n  availableSecrets: string[];\n  onAddExisting: (name: string) => any;\n  onCreateNew: (name: string, value: string) => any;\n}\n\ntype DisplayMode = \"collapsed\" | \"existing\" | \"create\";\n\nexport function NewSecretEditor(props: AddSecretProps) {\n  const [displayMode, setDisplayMode] = useState<DisplayMode>(\"collapsed\");\n  const [currentName, setName] = useState(\"\");\n  const [currentValue, setValue] = useState(\"\");\n\n  const canAdd = currentName.length > 0;\n  const canCreate = currentName.length > 0 && currentValue.length > 0;\n  const nameFieldRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (displayMode === \"create\" && nameFieldRef.current) {\n      nameFieldRef.current.focus();\n    }\n  }, [displayMode]);\n\n  if (displayMode === \"collapsed\") {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-3\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setDisplayMode(\"existing\");\n            }}\n          >\n            <i className=\"far fa-plus-square\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (displayMode === \"existing\") {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-10 input-group\">\n          <div className=\"input-group-prepend d-flex align-items-center\">\n            <i className=\"fas fa-lock-open text-success d-inline mr-2\" />\n          </div>\n          <select\n            className=\"form-control text-success\"\n            value={currentName}\n            onChange={evt => setName(evt.target.value)}\n            required={true}\n          >\n            <option value=\"\">Choose an existing secret</option>\n            {props.availableSecrets.map(secretName => (\n              <option key={`secret-${secretName}`} value={secretName}>\n                {secretName}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"col-sm-2 d-flex justify-content-end\">\n          <div className=\"btn-group\">\n            <button\n              className=\"btn btn-outline-success\"\n              disabled={!canAdd}\n              onClick={evt => {\n                evt.preventDefault();\n                props.onAddExisting(currentName.toLocaleUpperCase());\n                setName(\"\");\n                setValue(\"\");\n                setDisplayMode(\"collapsed\");\n              }}\n            >\n              <i className=\"fas fa-plus\" />\n            </button>\n            <button\n              className=\"btn btn-outline-info\"\n              onClick={evt => {\n                evt.preventDefault();\n                setName(\"\");\n                setValue(\"\");\n                setDisplayMode(\"create\");\n              }}\n            >\n              <i className=\"fas fa-pencil-alt\" />\n            </button>\n            <button\n              className=\"btn btn-outline-info\"\n              onClick={evt => {\n                evt.preventDefault();\n                setDisplayMode(\"collapsed\");\n              }}\n            >\n              <i className=\"far fa-minus-square\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend d-flex align-items-center\">\n            <i className=\"fas fa-lock-open text-success d-inline mr-2\" />\n          </div>\n          <input\n            ref={nameFieldRef}\n            type=\"text\"\n            className=\"form-control text-monospace border-success d-inline\"\n            value={currentName}\n            onChange={evt => setName(evt.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-sm-8\">\n        <ToggleableInput\n          controlClassName=\"text-monospace border-success\"\n          value={currentValue}\n          onChange={setValue}\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreateNew(currentName.toLocaleUpperCase(), currentValue);\n              setName(\"\");\n              setValue(\"\");\n              setDisplayMode(\"collapsed\");\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setName(\"\");\n              setValue(\"\");\n              setDisplayMode(\"existing\");\n            }}\n          >\n            <i className=\"fas fa-list\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setDisplayMode(\"collapsed\");\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport {ExistingSecretEditor, NewSecretEditor} from \"./SecretEditor\";\n\ninterface SecretListProps {\n  secrets: string[];\n  availableSecrets: string[];\n  onDelete: (name: string) => any;\n  onAdd: (name: string) => any;\n  onCreate: (name: string, value: string) => any;\n}\n\nexport function SecretListEditor(props: SecretListProps) {\n  const existingSecretEditors = props.secrets.map(name => (\n    <ExistingSecretEditor\n      key={`existingSecret-${name}`}\n      name={name}\n      onDelete={() => props.onDelete(name)}\n    />\n  ));\n\n  return (\n    <>\n      {existingSecretEditors}\n      <NewSecretEditor\n        availableSecrets={props.availableSecrets}\n        onAddExisting={props.onAdd}\n        onCreateNew={props.onCreate}\n      />\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {IVolumeMap} from \"../../common/coordinator\";\n\ninterface VolumeListProps {\n  volumeMap: IVolumeMap;\n  onDelete: (hostPath: string) => any;\n  onCreate: (hostPath: string, containerPath: string) => any;\n}\n\nexport function VolumeListEditor(props: VolumeListProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [hostPath, setHostPath] = useState(\"/etc/ssl/az/\");\n  const [containerPath, setContainerPath] = useState(\"\");\n\n  const hostPathRef = useRef<HTMLInputElement>(null);\n\n  const canCreate = hostPath.length > 0 && containerPath.length > 0;\n\n  useEffect(() => {\n    if (expanded && hostPathRef.current) {\n      hostPathRef.current.focus();\n    }\n  }, [expanded]);\n\n  const hostPaths = Object.keys(props.volumeMap);\n  const existingVolumes = hostPaths.map((hostPath, i) => (\n    <div className=\"form-row\" key={i}>\n      <div className=\"col-sm-5\">\n        host: <span className=\"text-monospace\">{hostPath}</span>\n      </div>\n      <div className=\"col-sm-5\">\n        container:{\" \"}\n        <span className=\"text-monospace\">{props.volumeMap[hostPath]}</span>\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <button\n          className=\"btn btn-outline-danger\"\n          onClick={evt => {\n            evt.preventDefault();\n            props.onDelete(hostPath);\n          }}\n        >\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      </div>\n    </div>\n  ));\n\n  const newVolume = expanded ? (\n    <div className=\"form-row\">\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">host</span>\n        </div>\n        <input\n          ref={hostPathRef}\n          type=\"text\"\n          value={hostPath}\n          onChange={evt => setHostPath(evt.target.value)}\n          className=\"form-control text-monospace\"\n        />\n      </div>\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">container</span>\n        </div>\n        <input\n          type=\"text\"\n          value={containerPath}\n          onChange={evt => setContainerPath(evt.target.value)}\n          className=\"form-control text-monospace\"\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreate(hostPath, containerPath);\n              setHostPath(\"/etc/ssl/az/\");\n              setContainerPath(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <button\n          className=\"btn btn-outline-info\"\n          onClick={evt => {\n            evt.preventDefault();\n            setExpanded(true);\n          }}\n        >\n          <i className=\"far fa-plus-square\" />\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {existingVolumes}\n      {newVolume}\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {IPortMap} from \"../../common/coordinator\";\n\ninterface PortListProps {\n  portMap: IPortMap;\n  onCreate: (hostPort: string, containerPort: number) => any;\n  onDelete: (hostPort: string) => any;\n}\n\nexport function PortListEditor(props: PortListProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [hostPort, setHostPort] = useState(\"\");\n  const [containerPort, setContainerPort] = useState(\"\");\n\n  const hostPortRef = useRef<HTMLInputElement>(null);\n\n  const canCreate = hostPort.length > 0 && containerPort.length > 0;\n\n  useEffect(() => {\n    if (expanded && hostPortRef.current) {\n      hostPortRef.current.focus();\n    }\n  }, [expanded]);\n\n  const hostPorts = Object.keys(props.portMap);\n  const existingPorts =\n    hostPorts.length > 0 ? (\n      <div className=\"form-row mb-2\">\n        <ul className=\"list-group list-group-horizontal\">\n          {hostPorts.map((hostPort, i) => (\n            <li\n              key={`hostPort-${i}`}\n              className=\"list-group-item pushbot-portMapping\"\n            >\n              {hostPort} <i className=\"fas fa-arrow-right mx-2\" />{\" \"}\n              {props.portMap[hostPort]}{\" \"}\n              <button\n                className=\"btn btn-outline-danger ml-3 pushbot-portMapping--deleteButton\"\n                onClick={evt => {\n                  evt.preventDefault();\n                  props.onDelete(hostPort);\n                }}\n              >\n                <i className=\"far fa-trash-alt\" />\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    ) : null;\n\n  const newPort = expanded ? (\n    <div className=\"form-row\">\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">host</span>\n        </div>\n        <input\n          ref={hostPortRef}\n          type=\"number\"\n          value={hostPort}\n          onChange={evt => setHostPort(evt.target.value)}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">container</span>\n        </div>\n        <input\n          type=\"number\"\n          value={containerPort}\n          onChange={evt => setContainerPort(evt.target.value)}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreate(hostPort, parseInt(containerPort, 10));\n              setHostPort(\"\");\n              setContainerPort(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <button\n          className=\"btn btn-outline-info\"\n          onClick={evt => {\n            evt.preventDefault();\n            setExpanded(true);\n          }}\n        >\n          <i className=\"far fa-plus-square\" />\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {existingPorts}\n      {newPort}\n    </>\n  );\n}\n","import React, {useState, useMemo, useContext} from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport cx from \"classnames\";\n\nimport {ISecretsCreate, CoordinatorContext} from \"../../common/coordinator\";\nimport {NotificationContext} from \"../../common/Notifications\";\nimport {PendingDiffContext} from \"../../common/PendingDiff\";\nimport {\n  DesiredUnitPayload,\n  usePayloadState,\n  serviceTypes,\n  getServiceType,\n} from \"./serviceTypes\";\nimport {EnvVarListEditor} from \"./EnvVarListEditor\";\nimport {SecretListEditor} from \"./SecretListEditor\";\nimport {VolumeListEditor} from \"./VolumeListEditor\";\nimport {PortListEditor} from \"./PortListEditor\";\n\ninterface ServiceFormProps {\n  payload: DesiredUnitPayload;\n  knownSecrets: string[];\n}\n\nexport function ServiceForm({payload, knownSecrets}: ServiceFormProps) {\n  const [nextRoute, setNextRoute] = useState<string | null>(null);\n\n  const [currentPath, setPath] = usePayloadState(payload, \"path\");\n  const [currentType, setType] = usePayloadState(payload, \"currentType\");\n  const [currentContainerName, setContainerName] = usePayloadState(\n    payload,\n    \"containerName\"\n  );\n  const [currentContainerImageName, setContainerImageName] = usePayloadState(\n    payload,\n    \"containerImageName\"\n  );\n  const [currentContainerImageTag, setContainerImageTag] = usePayloadState(\n    payload,\n    \"containerImageTag\"\n  );\n  const [currentEnvVars, setEnvVars] = usePayloadState(payload, \"env\");\n  const [currentSecrets, setSecrets] = usePayloadState(payload, \"secrets\");\n  const [currentVolumes, setVolumes] = usePayloadState(payload, \"volumes\");\n  const [currentPorts, setPorts] = usePayloadState(payload, \"ports\");\n  const [currentCalendar, setCalendar] = usePayloadState(payload, \"calendar\");\n\n  const [createdSecrets, setCreatedSecrets] = useState<ISecretsCreate>({});\n\n  function deleteSecret(name: string) {\n    setSecrets(currentSecrets.filter(each => each !== name));\n  }\n\n  function addSecret(name: string) {\n    setSecrets([...currentSecrets, name]);\n  }\n\n  function createSecret(name: string, value: string) {\n    setSecrets([...currentSecrets, name]);\n    setCreatedSecrets({...createdSecrets, [name]: value});\n  }\n\n  function deleteVolume(hostPath: string) {\n    const nextVolumes = {...currentVolumes};\n    delete nextVolumes[hostPath];\n    setVolumes(nextVolumes);\n  }\n\n  function createVolume(hostPath: string, containerPath: string) {\n    setVolumes({\n      ...currentVolumes,\n      [hostPath]: containerPath,\n    });\n  }\n\n  function deletePort(hostPort: string) {\n    const nextPorts = {...currentPorts};\n    delete nextPorts[hostPort];\n    setPorts(nextPorts);\n  }\n\n  function createPort(hostPort: string, containerPort: number) {\n    setPorts({\n      ...currentPorts,\n      [hostPort]: containerPort,\n    });\n  }\n\n  const availableSecrets = useMemo(() => {\n    const used = new Set(currentSecrets);\n    return knownSecrets.filter(each => !used.has(each));\n  }, [knownSecrets, currentSecrets]);\n\n  const {refresh: refreshDiff} = useContext(PendingDiffContext);\n  const coordinator = useContext(CoordinatorContext);\n  const hub = useContext(NotificationContext);\n\n  if (nextRoute) {\n    return <Redirect to={nextRoute} />;\n  }\n\n  async function apply(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n\n      if (Object.keys(createdSecrets).length > 0) {\n        await coordinator.createSecrets(createdSecrets);\n      }\n\n      await payload.withAction({\n        create: () => coordinator.createDesiredUnit(payload.getCreatePayload()),\n        update: (id: number) =>\n          coordinator.updateDesiredUnit(id, payload.getUpdatePayload()),\n      });\n      refreshDiff();\n      setNextRoute(\"/admin/services\");\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  async function deleteService(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n\n      await payload.withID(id => coordinator.deleteDesiredUnit(id));\n\n      refreshDiff();\n      setNextRoute(\"/admin/services\");\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  return (\n    <form className=\"border rounded p-3\">\n      {/* path */}\n      <div className=\"form-row\">\n        <label htmlFor=\"serviceEditor--path\" className=\"col-sm-3\">\n          Path:\n        </label>\n        <div className={cx(\"col-sm-9\", {disabled: payload.isUpdate()})}>\n          <input\n            id=\"serviceEditor--path\"\n            className=\"form-control text-monospace\"\n            type=\"text\"\n            value={currentPath}\n            onChange={evt => setPath(evt.target.value)}\n            readOnly={payload.isUpdate()}\n          />\n        </div>\n      </div>\n\n      {/* type */}\n      <div className=\"form-row\">\n        <label htmlFor=\"serviceEditor--type\" className=\"col-sm-3\">\n          Type:\n        </label>\n        <div className=\"col-sm-2\">\n          <select\n            className=\"form-control\"\n            id=\"serviceEditor--type\"\n            onChange={evt => setType(getServiceType(evt.target.value))}\n          >\n            {serviceTypes.map(tp => (\n              <option selected={tp === currentType} value={tp.name}>\n                {tp.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* invalid type detection */}\n      {currentType.ifInvalid(() => (\n        <div className=\"form-row my-2\">\n          <div className=\"alert alert-danger px-3 col\">\n            <p>\n              Invalid service type:{\" \"}\n              <span className=\"font-weight-bold\">{currentType.name}</span>.\n            </p>\n            <p>Please choose another.</p>\n          </div>\n        </div>\n      ))}\n\n      <hr />\n\n      {currentType.ifAnyContainer(() => (\n        <div className=\"form-row mt-4 mb-2\">\n          <div className=\"col\">\n            <h6 className=\"text-secondary\">Container details</h6>\n          </div>\n        </div>\n      ))}\n\n      {/* container name */}\n      {currentType.ifContainerName(() => (\n        <div className=\"form-row\">\n          <label htmlFor=\"serviceEditor--containerName\" className=\"col-sm-3\">\n            Name:\n          </label>\n          <div className=\"col-sm-9\">\n            <input\n              id=\"serviceEditor--containerName\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerName}\n              onChange={evt => setContainerName(evt.target.value)}\n            />\n          </div>\n        </div>\n      ))}\n\n      {/* container image name and tag */}\n      {currentType.ifContainerConfig(() => (\n        <div className=\"form-row\">\n          <label\n            htmlFor=\"serviceEditor--containerImageName\"\n            className=\"col-sm-3\"\n          >\n            Image:\n          </label>\n          <div className=\"col-sm-5\">\n            <input\n              id=\"serviceEditor--containerImageName\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerImageName}\n              onChange={evt => setContainerImageName(evt.target.value)}\n              placeholder=\"quay.io/smashwilson/az-\"\n            />\n          </div>\n          <div className=\"col-sm-3\">\n            <input\n              id=\"serviceEditor--containerImageTag\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerImageTag}\n              onChange={evt => setContainerImageTag(evt.target.value)}\n              placeholder=\"latest\"\n            />\n          </div>\n        </div>\n      ))}\n\n      {/* environment variables and secrets */}\n      {currentType.ifEnvAndSecrets(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Environment variables</h6>\n            </div>\n          </div>\n          <EnvVarListEditor\n            envVars={currentEnvVars}\n            onChange={(name, value) => {\n              const nextVars = {\n                ...currentEnvVars,\n                [name]: value,\n              };\n              setEnvVars(nextVars);\n            }}\n            onDelete={name => {\n              const nextVars = {...currentEnvVars};\n              delete nextVars[name];\n              setEnvVars(nextVars);\n            }}\n          />\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Secrets</h6>\n            </div>\n          </div>\n          <SecretListEditor\n            availableSecrets={availableSecrets}\n            secrets={currentSecrets}\n            onDelete={deleteSecret}\n            onAdd={addSecret}\n            onCreate={createSecret}\n          />\n        </>\n      ))}\n\n      {/* volumes */}\n      {currentType.ifVolumes(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Volumes</h6>\n            </div>\n          </div>\n          <VolumeListEditor\n            volumeMap={currentVolumes}\n            onCreate={createVolume}\n            onDelete={deleteVolume}\n          />\n        </>\n      ))}\n\n      {/* port mappings */}\n      {currentType.ifPorts(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Port mappings</h6>\n            </div>\n          </div>\n          <PortListEditor\n            portMap={currentPorts}\n            onCreate={createPort}\n            onDelete={deletePort}\n          />\n        </>\n      ))}\n\n      {/* schedule */}\n      {currentType.ifSchedule(() => (\n        <div className=\"form-row\">\n          <label htmlFor=\"serviceEditor--schedule\" className=\"col-sm-3\">\n            Schedule:\n          </label>\n          <div className=\"col-sm-7\">\n            <input\n              id=\"serviceEditor--schedule\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentCalendar}\n              onChange={evt => setCalendar(evt.target.value)}\n            />\n          </div>\n          <div className=\"col-sm-2\">\n            <a\n              target=\"_new\"\n              href=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html#\"\n            >\n              <i className=\"fas fa-book mr-2\" />\n              reference\n            </a>\n          </div>\n        </div>\n      ))}\n\n      <hr />\n\n      {/* controls */}\n      <div className=\"form-row m-3\">\n        {payload.isUpdate() && (\n          <div className=\"col d-flex align-items-baseline\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger\"\n              onClick={deleteService}\n              disabled={payload.isCreate()}\n            >\n              Delete\n            </button>\n          </div>\n        )}\n        <div className=\"col d-flex align-items-baseline justify-content-end\">\n          <div className=\"btn-group\">\n            <Link to=\"/admin/services\" className=\"btn btn-secondary\">\n              Cancel\n            </Link>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={apply}\n              disabled={!payload.isValid()}\n            >\n              {payload.withAction({\n                create: () => \"Create\",\n                update: () => \"Update\",\n              })}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\n\nimport {IDesiredState} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {ServiceForm} from \"./ServiceForm\";\nimport {DesiredUnitPayload} from \"./serviceTypes\";\n\nconst nullDesiredState: IDesiredState = {units: []};\n\ninterface ServiceEditorProps {\n  match: {\n    params: {\n      id: string;\n    };\n  };\n}\n\nexport function ServiceEditor(props: ServiceEditorProps) {\n  return (\n    <CoordinatorContainer<string[]> getter={c => c.getSecrets()} nullValue={[]}>\n      {(knownSecrets, secretsLoading) => {\n        if (props.match.params.id === \"create\") {\n          return (\n            <ServiceForm\n              payload={new DesiredUnitPayload()}\n              knownSecrets={knownSecrets}\n            />\n          );\n        }\n\n        return (\n          <CoordinatorContainer<IDesiredState>\n            getter={c => c.getDesiredState()}\n            nullValue={nullDesiredState}\n          >\n            {(state, stateIsLoading) => {\n              if (stateIsLoading || secretsLoading) {\n                return <Loading />;\n              }\n\n              const original = state.units.find(\n                u => u.id.toString() === props.match.params.id\n              );\n              if (original) {\n                return (\n                  <ServiceForm\n                    payload={new DesiredUnitPayload(original)}\n                    knownSecrets={knownSecrets}\n                  />\n                );\n              }\n\n              return (\n                <div className=\"card bg-danger text-white\">\n                  <div className=\"card-header\">Unknown service ID</div>\n                  <div className=\"card-body\">\n                    <p className=\"card-text\">No service exists with that ID.</p>\n                  </div>\n                </div>\n              );\n            }}\n          </CoordinatorContainer>\n        );\n      }}\n    </CoordinatorContainer>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport cx from \"classnames\";\n\nimport {IDelta, IDesiredUnit} from \"../../common/coordinator\";\nimport {hasPendingDelta} from \"../../common/PendingDiff\";\n\ninterface Tense {\n  create: string;\n  modify: string;\n  restart: string;\n  remove: string;\n  write: string;\n}\n\nexport const futureTense: Tense = {\n  create: \"will create\",\n  modify: \"will modify\",\n  restart: \"will restart\",\n  remove: \"will remove\",\n  write: \"will write\",\n};\n\nexport const pastTense: Tense = {\n  create: \"created\",\n  modify: \"modified\",\n  restart: \"restarted\",\n  remove: \"removed\",\n  write: \"wrote\",\n};\n\ninterface DeltaViewProps {\n  delta: IDelta;\n  headerText: string;\n  emptyText: string;\n  tense: Tense;\n}\n\nexport function DeltaView(props: DeltaViewProps) {\n  if (!hasPendingDelta(props.delta)) {\n    return (\n      <div className=\"card border-success my-3 mx-0\">\n        <div className=\"card-body\">\n          <p className=\"card-text text-success\">\n            <i className=\"fas fa-check-circle mr-3\" />\n            {props.emptyText}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  function createDesiredRow(\n    unit: IDesiredUnit,\n    action: string,\n    textClass: string,\n    iconClass: string\n  ): React.ReactNode {\n    return (\n      <p\n        key={`key-${action}-${unit.id}`}\n        className={cx(\"card-text\", textClass)}\n      >\n        <i className={cx(\"mr-3\", iconClass)} />\n        {action}{\" \"}\n        <Link\n          to={`/admin/services/${encodeURIComponent(unit.id.toString())}`}\n          className={cx(\"font-weight-bold\", textClass)}\n        >\n          {unit.path}\n        </Link>\n      </p>\n    );\n  }\n\n  const changeRows: React.ReactNodeArray = [];\n  for (const unit of props.delta.units_to_add) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.create} unit`,\n        \"text-success\",\n        \"far fa-plus-square\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_change) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.modify} unit`,\n        \"text-info\",\n        \"fas fa-tools\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_restart) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.restart} unit`,\n        \"text-info\",\n        \"fas fa-recycle\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_remove) {\n    changeRows.push(\n      <p key={`remove-${unit.path}`} className=\"card-text text-danger\">\n        <i className=\"mr-3 fas fa-fire\" />\n        {props.tense.remove} unit{\" \"}\n        <span className=\"font-weight-bold\">{unit.path}</span>\n      </p>\n    );\n  }\n  for (const filePath of props.delta.files_to_write) {\n    changeRows.push(\n      <p className=\"card-text text-info\">\n        <i className=\"mr-3 far fa-file-alt\" />\n        {props.tense.write} file{\" \"}\n        <span className=\"font-weight-bold\">{filePath}</span>\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"card bg-light my-3 mx-0\">\n      <h5 className=\"card-header\">{props.headerText}</h5>\n      <div className=\"card-body\">{changeRows}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport {ISyncReport} from \"../../common/coordinator\";\n\nconst timeUnits: (\"h\" | \"m\" | \"s\" | \"ms\")[] = [\"h\", \"m\", \"s\", \"ms\"];\n\nfunction reportDuration(d: moment.Duration): string {\n  for (const timeUnit of timeUnits) {\n    const count = d.get(timeUnit);\n    if (count > 0) {\n      return `${count}${timeUnit}`;\n    }\n  }\n  return \"<1ms\";\n}\n\ninterface FieldsViewProps {\n  fields: {[fieldName: string]: any};\n}\n\nfunction FieldsView(props: FieldsViewProps) {\n  const keys = Object.keys(props.fields);\n  if (keys.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"row mt-1\">\n      <div className=\"col-1 px-2\" />\n      <div className=\"col-11\">\n        <ul className=\"list-group-horizontal p-0\">\n          {keys.map(key => (\n            <li key={key} className=\"list-group-item px-2 py-0\">\n              <small className=\"text-muted mr-1\">{key}:</small>\n              <small className=\"text-monospaced\">\n                {props.fields[key].toString()}\n              </small>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\ninterface SyncReportViewProps {\n  reports: ISyncReport[];\n}\n\nexport function SyncReportView(props: SyncReportViewProps) {\n  const reportRows = props.reports.map((report, index) => {\n    const duration = moment.duration(report.elapsed);\n\n    return (\n      <li className=\"list-group-item row\" key={index}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-1 px-2 border-right d-flex justify-content-end pushbot-syncReport--duration\">\n              {reportDuration(duration)}\n            </div>\n            <div className=\"col-11 text-dark\">{report.message}</div>\n          </div>\n          <FieldsView fields={report.fields} />\n        </div>\n      </li>\n    );\n  });\n\n  return <ul className=\"list-group pushbot-syncReport\">{reportRows}</ul>;\n}\n\ninterface PlaceholderSyncReportView {\n  lastReport?: ISyncReport;\n}\n\nexport function PlaceholderSyncReportView(props: PlaceholderSyncReportView) {\n  const elapsed = props.lastReport\n    ? reportDuration(\n        moment.duration(moment().diff(moment.unix(props.lastReport.timestamp)))\n      )\n    : \"...\";\n\n  return (\n    <li className=\"list-group-item row\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-1 border-right\">{elapsed}</div>\n          <div className=\"col-11\">\n            <i className=\"fas fa-circle-notch fa-spin text-dark\" />\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import React, {useContext} from \"react\";\nimport cx from \"classnames\";\n\nimport {CoordinatorContext, ISync} from \"../../common/coordinator\";\nimport {PendingDiffContext} from \"../../common/PendingDiff\";\nimport {NotificationContext} from \"../../common/Notifications\";\nimport {DeltaView, pastTense, futureTense} from \"./DeltaView\";\nimport {SyncReportView, PlaceholderSyncReportView} from \"./SyncReportView\";\n\ninterface SyncViewProps {\n  lastSync: ISync;\n  refresh: () => void;\n}\n\nexport function SyncView(props: SyncViewProps) {\n  const coordinator = useContext(CoordinatorContext);\n  const pendingDiff = useContext(PendingDiffContext);\n  const hub = useContext(NotificationContext);\n\n  const lastDelta = props.lastSync.delta;\n  const lastReport = props.lastSync.reports[props.lastSync.reports.length - 1];\n  const inProgress = props.lastSync.in_progress;\n\n  async function startSync(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n      await coordinator.createSync();\n      props.refresh();\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  if (inProgress) {\n    setTimeout(() => {\n      props.refresh();\n      pendingDiff.refresh();\n    }, 1000);\n  }\n\n  return (\n    <>\n      <DeltaView\n        delta={pendingDiff.delta}\n        emptyText=\"No changes waiting to be applied.\"\n        headerText=\"changes to apply\"\n        tense={futureTense}\n      />\n      <p className=\"mt-2 mb-4\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={inProgress}\n          onClick={startSync}\n        >\n          <i\n            className={cx(\"fas fa-sync-alt mr-2\", {\n              \"fa-spin\": inProgress,\n            })}\n          />\n          Sync\n        </button>\n      </p>\n      <div className=\"my-3\">\n        <h6>{inProgress ? \"current \" : \"most recent \"} sync</h6>\n        <SyncReportView reports={props.lastSync.reports} />\n        {props.lastSync.in_progress && (\n          <PlaceholderSyncReportView lastReport={lastReport} />\n        )}\n      </div>\n      {lastDelta && (\n        <DeltaView\n          delta={lastDelta}\n          emptyText=\"No changes applied.\"\n          headerText=\"applied changes\"\n          tense={pastTense}\n        />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nimport {ISync} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {SyncView} from \"./SyncView\";\n\nimport \"./Sync.css\";\n\nconst nullSync: ISync = {\n  in_progress: false,\n  reports: [],\n  errors: [],\n};\n\nexport function Sync() {\n  return (\n    <>\n      <h3>sync</h3>\n      <CoordinatorContainer<ISync>\n        getter={c => c.getSync()}\n        nullValue={nullSync}\n      >\n        {(lastSync, isLoading, refresh) => {\n          if (isLoading && lastSync.reports.length === 0) {\n            return <Loading />;\n          } else {\n            return <SyncView lastSync={lastSync} refresh={refresh} />;\n          }\n        }}\n      </CoordinatorContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport memo from \"memoize-one\";\n\nimport {SideNav} from \"./SideNav\";\nimport {Dashboard} from \"./dashboard/Dashboard\";\nimport {People} from \"./people/People\";\nimport {Profile} from \"./profile/Profile\";\nimport {Quotes} from \"./quotes/Quotes\";\nimport {Events} from \"./events/Events\";\nimport {Recent} from \"./recent/Recent\";\nimport {Rem} from \"./rem/Rem\";\nimport {RemEntry} from \"./rem/RemEntry\";\nimport {Services} from \"./admin/services/Services\";\nimport {ServiceEditor} from \"./admin/services/ServiceEditor\";\nimport {Sync} from \"./admin/sync/Sync\";\nimport {UserContext, IUser} from \"./common/Role\";\nimport {\n  CoordinatorContext,\n  Coordinator,\n  nullCoordinator,\n} from \"./common/coordinator\";\nimport {PendingDiffProvider} from \"./common/PendingDiff\";\nimport {NotificationsProvider, NotificationsView} from \"./common/Notifications\";\n\ninterface AuthenticatedProps {\n  user: IUser;\n}\n\nconst coordinatorForUser = memo(\n  (user: IUser): Coordinator => {\n    if (user.coordinatorToken) {\n      return new Coordinator(user.coordinatorToken);\n    } else {\n      return nullCoordinator;\n    }\n  },\n  (oldArgs: [IUser], newArgs: [IUser]) => oldArgs[0].id === newArgs[0].id\n);\n\nexport function Authenticated(props: AuthenticatedProps) {\n  const coordinator = coordinatorForUser(props.user);\n\n  return (\n    <UserContext.Provider value={props.user}>\n      <CoordinatorContext.Provider value={coordinator}>\n        <PendingDiffProvider coordinator={coordinator}>\n          <NotificationsProvider>\n            <div className=\"row mt-md-5\">\n              <div className=\"col-md-2\">\n                <SideNav />\n              </div>\n              <div className=\"col-md-8\">\n                <NotificationsView />\n                <Route path=\"/\" component={Dashboard} exact />\n                <Route path=\"/people\" component={People} exact />\n                <Route path=\"/people/:name\" component={Profile} />\n                <Route path=\"/quotes\" component={Quotes} />\n                <Route path=\"/rem\" component={Rem} exact />\n                <Route path=\"/rem/:key\" component={RemEntry} />\n                <Route path=\"/events\" component={Events} />\n                <Route path=\"/recent\" component={Recent} />\n                <Route path=\"/admin/services\" component={Services} exact />\n                <Route path=\"/admin/services/:id\" component={ServiceEditor} />\n                <Route path=\"/admin/sync\" component={Sync} />\n              </div>\n            </div>\n          </NotificationsProvider>\n        </PendingDiffProvider>\n      </CoordinatorContext.Provider>\n    </UserContext.Provider>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport \"./Banner.css\";\n\nconst LOGOUT_URL = `${process.env.REACT_APP_API_BASE_URL}/logout?backTo=true`;\n\ninterface BannerProps {\n  username: string;\n  title: string;\n  avatar: string;\n}\n\nexport const Banner = (props: BannerProps) => {\n  let accountControl = null;\n\n  if (props.username) {\n    let accountElements = [];\n    if (props.title) {\n      accountElements.push(\n        <span key=\"0\" className=\"navbar-text pushbot-navbar-title\">\n          {props.title}\n\n          <i\n            key=\"1\"\n            className=\"far fa-circle pushbot-navbar-separator\"\n            aria-hidden=\"true\"\n          />\n        </span>\n      );\n    }\n    accountElements.push(\n      <Link\n        to={`/people/${props.username}`}\n        key=\"2\"\n        className=\"navbar-text pushbot-navbar-username font-weight-bolder\"\n      >\n        @{props.username}\n      </Link>\n    );\n\n    accountControl = (\n      <>\n        {accountElements}\n        <img className=\"navbar-item pushbot-navbar-avatar\" src={props.avatar} alt=\"\" />\n        <a href={LOGOUT_URL} className=\"navbar-item pushbot-navbar-logout\">\n          <i className=\"fas fa-sign-out-alt\" aria-hidden=\"true\" />\n          Log out\n        </a>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"container-fluid mx-0 px-0\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mx-0\">\n        <button\n          type=\"button\"\n          className=\"navbar-toggler collapsed\"\n          data-toggle=\"collapse\"\n          data-target=\"#bs-example-navbar-collapse-1\"\n          aria-expanded=\"false\"\n        >\n          <span className=\"navbar-toggler-icon\">Toggle navigation</span>\n        </button>\n        <div className=\"navbar-brand flex-grow-1\">pushbot party</div>\n\n        <div\n          className=\"collapse navbar-collapse flex-grow-0\"\n          id=\"bs-example-navbar-collapse-1\"\n        >\n          {accountControl}\n        </div>\n      </nav>\n    </div>\n  );\n};\n","import React, {Component} from \"react\";\n\nimport \"./Login.css\";\n\ninterface LoginProps {\n  authUrl: string;\n}\n\nexport class Login extends Component<LoginProps> {\n  componentDidMount() {\n    document.children[0].classList.add(\"pushbot-login-bg\");\n  }\n\n  render() {\n    return (\n      <div className=\"jumbotron pushbot-login mt-md-5\">\n        <h1>Are there stairs in your house?</h1>\n        <p>\n          <a href={this.props.authUrl} className=\"pushbot-signin-slack\">\n            <img\n              alt=\"Sign in with Slack\"\n              height=\"40\"\n              width=\"172\"\n              src=\"https://platform.slack-edge.com/img/sign_in_with_slack.png\"\n              srcSet=\"https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x\"\n            />\n          </a>\n          so that I may protect you from the\n          <a href=\"https://www.youtube.com/watch?v=7E0ot9iJm_k\">\n            terrible secret of space\n          </a>\n        </p>\n        <p className=\"text-muted\">\n          <em>\n            <small>\n              (Make sure that you choose <strong>#~s</strong> as your Slack\n              team)\n            </small>\n          </em>\n        </p>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    document.children[0].classList.remove(\"pushbot-login-bg\");\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport {getEnvironment, AUTH_URL, QueryResult} from \"./common/Transport\";\nimport {isNetworkError} from \"./common/errors\";\nimport {Authenticated} from \"./Authenticated\";\nimport {Banner} from \"./Banner\";\nimport {Login} from \"./Login\";\n\nimport {AppQuery} from \"./__generated__/AppQuery.graphql\";\n\nimport \"./App.css\";\n\nexport class App extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query AppQuery {\n        users {\n          me {\n            id\n            name\n            avatar {\n              image48\n            }\n            roles {\n              name\n            }\n            coordinatorToken\n          }\n        }\n\n        title: documents(set: \"title\") {\n          mine {\n            text\n            found\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<AppQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = (result: QueryResult<AppQuery>) => {\n    let body = null;\n    let username = \"\";\n    let title = \"\";\n    let avatar = \"\";\n\n    if (isNetworkError(result.error)) {\n      if (result.error.responseStatus === 401) {\n        const backTo = encodeURIComponent(document.location!.pathname);\n        body = <Login authUrl={`${AUTH_URL}?backTo=${backTo}`} />;\n      } else {\n        body = <div>{result.error.message}</div>;\n      }\n    } else if (result.props) {\n      const user = result.props.users.me;\n      username = user.name;\n      if (result.props.title) {\n        title = result.props.title.mine.text;\n      }\n      if (user.avatar && user.avatar.image48) {\n        avatar = user.avatar.image48;\n      }\n\n      body = <Authenticated user={user} />;\n    } else {\n      body = (\n        <div className=\"row mt-md-5 pushbot-loading\">\n          <p className=\"mx-auto\">\n            <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n            loading\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <Router>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <Banner username={username} title={title} avatar={avatar} />\n          </div>\n          {body}\n        </div>\n      </Router>\n    );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootswatch/dist/spacelab/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport \"jquery\";\nimport \"popper.js\";\nimport \"bootstrap\";\nimport \"@fortawesome/fontawesome-free\";\nimport \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type AppQueryVariables = {};\nexport type AppQueryResponse = {\n    readonly users: {\n        readonly me: {\n            readonly id: string;\n            readonly name: string;\n            readonly avatar: {\n                readonly image48: string | null;\n            };\n            readonly roles: ReadonlyArray<{\n                readonly name: string;\n            }>;\n            readonly coordinatorToken: string | null;\n        };\n    };\n    readonly title: {\n        readonly mine: {\n            readonly text: string;\n            readonly found: boolean;\n        };\n    } | null;\n};\nexport type AppQuery = {\n    readonly response: AppQueryResponse;\n    readonly variables: AppQueryVariables;\n};\n\n\n\n/*\nquery AppQuery {\n  users {\n    me {\n      id\n      name\n      avatar {\n        image48\n      }\n      roles {\n        name\n      }\n      coordinatorToken\n    }\n  }\n  title: documents(set: \"title\") {\n    mine {\n      text\n      found\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"name\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"users\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"UserSet\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"me\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"User\",\n      \"plural\": false,\n      \"selections\": [\n        (v0/*: any*/),\n        (v1/*: any*/),\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"avatar\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"Avatar\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"image48\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        },\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"roles\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"Role\",\n          \"plural\": true,\n          \"selections\": [\n            (v1/*: any*/)\n          ]\n        },\n        {\n          \"kind\": \"ScalarField\",\n          \"alias\": null,\n          \"name\": \"coordinatorToken\",\n          \"args\": null,\n          \"storageKey\": null\n        }\n      ]\n    }\n  ]\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv4 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv5 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"found\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"AppQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      (v2/*: any*/),\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"title\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"mine\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v4/*: any*/),\n              (v5/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"AppQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      (v2/*: any*/),\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"title\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"mine\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v4/*: any*/),\n              (v5/*: any*/),\n              (v0/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"AppQuery\",\n    \"id\": null,\n    \"text\": \"query AppQuery {\\n  users {\\n    me {\\n      id\\n      name\\n      avatar {\\n        image48\\n      }\\n      roles {\\n        name\\n      }\\n      coordinatorToken\\n    }\\n  }\\n  title: documents(set: \\\"title\\\") {\\n    mine {\\n      text\\n      found\\n      id\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '836730f8aa29cc2eba77f30e5f879f96';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RecentChannelQueryVariables = {};\nexport type RecentChannelQueryResponse = {\n    readonly cache: {\n        readonly knownChannels: ReadonlyArray<string>;\n    };\n};\nexport type RecentChannelQuery = {\n    readonly response: RecentChannelQueryResponse;\n    readonly variables: RecentChannelQueryVariables;\n};\n\n\n\n/*\nquery RecentChannelQuery {\n  cache {\n    knownChannels\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"cache\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Cache\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"knownChannels\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RecentChannelQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RecentChannelQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RecentChannelQuery\",\n    \"id\": null,\n    \"text\": \"query RecentChannelQuery {\\n  cache {\\n    knownChannels\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = 'b33c5ca20b56c7400e6a375a0e5965ed';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RecentHistoryQueryVariables = {\n    readonly channel: string;\n};\nexport type RecentHistoryQueryResponse = {\n    readonly cache: {\n        readonly knownChannels: ReadonlyArray<string>;\n        readonly linesForChannel: ReadonlyArray<{\n            readonly id: string | null;\n            readonly speaker: {\n                readonly id: string;\n                readonly name: string;\n                readonly avatar: {\n                    readonly image32: string | null;\n                };\n            } | null;\n            readonly timestamp: string;\n            readonly text: string;\n        }> | null;\n    };\n};\nexport type RecentHistoryQuery = {\n    readonly response: RecentHistoryQueryResponse;\n    readonly variables: RecentHistoryQueryVariables;\n};\n\n\n\n/*\nquery RecentHistoryQuery(\n  $channel: String!\n) {\n  cache {\n    knownChannels\n    linesForChannel(channel: $channel) {\n      id\n      speaker {\n        id\n        name\n        avatar {\n          image32\n        }\n      }\n      timestamp\n      text\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"channel\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  }\n],\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"cache\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Cache\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"knownChannels\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"linesForChannel\",\n        \"storageKey\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"channel\",\n            \"variableName\": \"channel\"\n          }\n        ],\n        \"concreteType\": \"Line\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"speaker\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              (v1/*: any*/),\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"name\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"avatar\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"Avatar\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"image32\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"timestamp\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"text\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RecentHistoryQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v2/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RecentHistoryQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RecentHistoryQuery\",\n    \"id\": null,\n    \"text\": \"query RecentHistoryQuery(\\n  $channel: String!\\n) {\\n  cache {\\n    knownChannels\\n    linesForChannel(channel: $channel) {\\n      id\\n      speaker {\\n        id\\n        name\\n        avatar {\\n          image32\\n        }\\n      }\\n      timestamp\\n      text\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '4638d70a91379c9d2ce46aefaca2f3d9';\nexport default node;\n"],"sourceRoot":""}