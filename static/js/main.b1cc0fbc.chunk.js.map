{"version":3,"sources":["__generated__/PeopleQuery.graphql.ts","__generated__/ProfileQuery.graphql.ts","__generated__/RandomQuoteQuery.graphql.ts","__generated__/QuotePageQuery.graphql.ts","__generated__/EventsQuery.graphql.ts","__generated__/ActionBarSubmitMutation.graphql.ts","__generated__/RecentChannelQuery.graphql.ts","__generated__/RecentHistoryQuery.graphql.ts","__generated__/RandomMemoryListQuery.graphql.ts","__generated__/MatchingMemoryPage_rem.graphql.ts","__generated__/MatchingMemoryPageQuery.graphql.ts","__generated__/MatchingMemoryListQuery.graphql.ts","__generated__/RemEntryQuery.graphql.ts","__generated__/AppQuery.graphql.ts","common/errors.ts","common/Transport.ts","common/Role.tsx","common/PendingDiff.tsx","SideNav.tsx","dashboard/Dashboard.tsx","people/Person.tsx","people/People.tsx","common/Chart.tsx","profile/Profile.tsx","quotes/queryMode.ts","quotes/Quote.tsx","quotes/RandomQuote.tsx","quotes/QuotePage.tsx","quotes/Quotes.tsx","events/FeedForm.tsx","events/Events.tsx","recent/queryTypes.ts","recent/selection.ts","recent/Line.tsx","recent/History.tsx","recent/ActionBar.tsx","recent/Recent.tsx","rem/RemForm.tsx","common/Notifications.tsx","common/Loading.tsx","rem/RandomMemoryList.tsx","rem/MatchingMemoryPage.tsx","rem/MatchingMemoryList.tsx","rem/Rem.tsx","common/urlSearch.ts","rem/RemEntry.tsx","common/coordinator.ts","common/CoordinatorContainer.tsx","admin/services/ServicePath.tsx","admin/services/ServiceDisplay.tsx","admin/services/Services.tsx","admin/services/serviceTypes.ts","common/ToggleableInput.tsx","admin/services/EnvVarEditor.tsx","admin/services/EnvVarListEditor.tsx","admin/services/SecretEditor.tsx","admin/services/SecretListEditor.tsx","admin/services/VolumeListEditor.tsx","admin/services/PortListEditor.tsx","admin/services/ServiceForm.tsx","admin/services/ServiceEditor.tsx","admin/sync/DeltaView.tsx","admin/sync/SyncReportView.tsx","admin/sync/SyncView.tsx","admin/sync/Sync.tsx","Authenticated.tsx","Banner.tsx","Login.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["node","v0","v1","v2","v3","v4","v5","v6","v7","v8","hash","v9","v10","v11","NETWORK_ERROR_MARKER","Symbol","GRAPHQL_ERROR_MARKER","isNetworkError","err","marker","createNetworkError","message","url","response","a","Error","requestURL","responseStatus","status","text","responseText","createGraphQLError","errors","API_URL","process","AUTH_URL","request","variables","fetch","method","headers","credentials","body","JSON","stringify","query","ok","json","payload","source","RecordSource","network","Network","create","getEnvironment","store","Store","Environment","UserContext","React","createContext","Role","props","user","useContext","roles","some","role","name","children","nullDelta","units_to_add","units_to_change","units_to_restart","units_to_remove","files_to_write","hasPendingDelta","delta","arr","length","PendingDiffContext","refresh","PendingDiffProvider","useState","setDelta","latch","setLatch","useEffect","ignore","coordinator","getDiff","catch","pendingDiff","current","Provider","value","Pill","className","to","exact","activeClassName","SideNav","showBadge","Dashboard","Person","presence","avatar","avatarURL","image48","presenceIcon","src","alt","aria-hidden","title","People","environment","renderResult","error","collateUsers","map","this","render","titles","titlesByUsername","all","edges","subject","userData","users","sort","b","localeCompare","Component","Chartist","plugins","ctHtmlLabels","chart","on","context","type","element","empty","_node","innerHTML","Chart","refElement","ref","c","options","Bar","data","detach","Profile","emoji","image192","renderReactionsReceivedChart","renderReactionsGivenChart","match","params","renderTitles","renderQuoteRank","EmojiConverter","img_sets","apple","sheet","use_sheet","include_title","username","decodeURIComponent","titleCriteria","renderReactionChart","topReactionsGiven","topReactionsReceived","results","labels","each","replace_colons","series","count","low","axisY","onlyInteger","t","titleFrom","quotes","rank","test","CONTAINING","when","cases","containing","default","label","BY","by","ABOUT","about","modes","Quote","RandomQuote","lastQuote","quoteText","documents","random","onClick","another","setState","state","QuotePage","lastTotal","lastResults","renderDocuments","pageInfo","criteria","mode","speakers","people","mentions","total","document","id","more","plural","Quotes","didChangeMode","event","find","target","writeSearch","didChangeQuery","didChangePeople","URLSearchParams","window","location","search","has","get","changes","previous","readSearch","Object","assign","set","nextSearch","toString","nextURL","protocol","host","pathname","history","replaceState","href","forceUpdate","showPeople","onChange","index","placeholder","split","person","replace","trim","filter","FeedForm","copied","btnClass","btnMessage","feedURL","readOnly","onCopy","disabled","ready","Events","result","renderResultBody","Boolean","calendarURL","rel","ALL","Selection","isSelecting","ids","subs","Set","cb","push","dispose","indexOf","splice","sub","line","wasSelected","add","didChange","delete","clear","Array","from","size","Line","didMouseDown","button","preventDefault","selection","toggle","startSelecting","didMouseMove","select","onDidChange","kind","ts","moment","parseInt","timestamp","sameSpeaker","speaker","lineClasses","isSelected","speakerBanner","image32","join","onMouseDown","onMouseMove","format","History","bottom","didMouseUp","stopSelecting","didMouseOut","addEventListener","scrollIntoView","removeEventListener","lines","renderLoading","renderLines","onMouseOut","i","ActionBar","didSubmitQuote","didSubmitLim","didClear","submit","bind","textClassNames","clearBtn","disable","isEmpty","describe","channel","mutation","getLineIDs","commitMutation","onCompleted","Recent","knownChannels","renderChannelResult","renderError","channelNames","cache","renderCurrent","renderHistoryResult","slice","linesForChannel","didChangeChannel","currentChannel","renderChannelQuery","renderHistoryQuery","includes","setTimeout","displayChannelNames","displayChannel","htmlFor","RemForm","evt","NotificationHub","nextID","notifications","subscribers","n","notify","addSuccess","addDanger","isGraphQLError","stack","callback","severity","subscriber","nullHub","NotificationContext","NotificationsProvider","hub","NotificationsView","setNotifications","makeCloser","deleteNotification","onNotification","cx","Loading","RandomMemoryList","env","RandomMemoryResults","retry","addError","rem","edge","encodeURIComponent","key","cursor","MatchingMemoryPage","createPaginationContainer","pageSize","relay","hasMore","isLoading","direction","getConnectionFromProps","getVariables","_props","fragmentVariables","pattern","MatchingMemoryList","MatchingMemoryResults","Rem","parameterName","next","nextParams","useQueryParameter","setQuery","RemEntry","RemEntryWrapper","RemEntryResult","tweet","exec","tweetId","style","maxWidth","COORDINATOR_URL","Coordinator","token","requestJSON","unit","secrets","secretNames","subPath","Authorization","btoa","nullCoordinator","CoordinatorContext","CoordinatorContainer","getter","setLoading","nullValue","setValue","v","ServicePath","dirname","path","basename","noun","ports","p","keys","mappings","dest","ServiceDisplay","volumes","nullDesiredState","units","Services","getDesiredState","list","typeMap","Map","makeServiceType","typeName","config","accept","skip","serviceType","valid","isInvalid","hasAnyContainer","hasContainerName","hasContainerConfig","hasEnvAndSecrets","hasVolumes","hasPorts","hasSchedule","ifInvalid","ifAnyContainer","ifContainerConfig","ifContainerName","ifEnvAndSecrets","ifVolumes","ifPorts","ifSchedule","typeSimple","typeOneShot","typeTimer","typeSelf","serviceTypes","getServiceType","DesiredUnitPayload","original","currentType","containerName","containerImageName","containerImageTag","calendar","container","image_name","image_tag","s","hasEmptyKeyOrValue","obj","k","isInvalidPortNumber","isNaN","hostPorts","hp","undefined","cbs","update","arrayChanged","array","o","objectChanged","ks","commonValidation","withAction","isModified","fn","getCommonPayload","usePayloadState","ToggleableInput","multiLineMode","setMode","controlRef","useRef","cn","controlClassName","focus","controlID","envVarCounter","EnvVarEditor","uniqueID","renderName","onChangeValue","renderControls","ExistingEnvVarEditor","onDelete","NewEnvVarEditor","expanded","setExpanded","currentName","setName","currentValue","nameFieldRef","canAccept","onAccept","toLocaleUpperCase","EnvVarListEditor","varNames","envVars","existingVarEditors","varName","ExistingSecretEditor","NewSecretEditor","displayMode","setDisplayMode","canAdd","canCreate","required","availableSecrets","secretName","onAddExisting","onCreateNew","SecretListEditor","existingSecretEditors","onAdd","onCreate","VolumeListEditor","hostPath","setHostPath","containerPath","setContainerPath","hostPathRef","existingVolumes","volumeMap","newVolume","PortListEditor","hostPort","setHostPort","containerPort","setContainerPort","hostPortRef","portMap","existingPorts","newPort","ServiceForm","knownSecrets","nextRoute","setNextRoute","currentPath","setPath","setType","currentContainerName","setContainerName","currentContainerImageName","setContainerImageName","currentContainerImageTag","setContainerImageTag","currentEnvVars","setEnvVars","currentSecrets","setSecrets","currentVolumes","setVolumes","currentPorts","setPorts","currentCalendar","setCalendar","createdSecrets","setCreatedSecrets","deleteSecret","addSecret","createSecret","deleteVolume","nextVolumes","createVolume","deletePort","nextPorts","createPort","useMemo","used","refreshDiff","createSecrets","createDesiredUnit","getCreatePayload","updateDesiredUnit","getUpdatePayload","withID","deleteDesiredUnit","isUpdate","tp","selected","nextVars","isCreate","isValid","ServiceEditor","getSecrets","secretsLoading","stateIsLoading","reqID","u","futureTense","modify","restart","remove","write","pastTense","DeltaView","emptyText","createDesiredRow","action","textClass","iconClass","changeRows","tense","filePath","headerText","timeUnits","reportDuration","d","timeUnit","FieldsView","fields","SyncReportView","reportRows","reports","report","duration","elapsed","PlaceholderSyncReportView","lastReport","diff","unix","SyncView","lastDelta","lastSync","inProgress","in_progress","createSync","nullSync","Sync","getSync","coordinatorForUser","memo","coordinatorToken","newArgs","lastArgs","Authenticated","component","LOGOUT_URL","Banner","accountControl","accountElements","data-toggle","data-target","aria-expanded","Login","classList","authUrl","height","width","srcSet","App","backTo","me","mine","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1cc0fbc.chunk.js","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Presence = \"ACTIVE\" | \"AWAY\" | \"UNKNOWN\" | \"%future added value\";\nexport type PeopleQueryVariables = {};\nexport type PeopleQueryResponse = {\n    readonly users: {\n        readonly all: ReadonlyArray<{\n            readonly name: string;\n            readonly presence: Presence;\n            readonly avatar: {\n                readonly image48: string | null;\n            };\n            readonly status: {\n                readonly message: string | null;\n                readonly emoji: string | null;\n            };\n        }>;\n    };\n    readonly titles: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly text: string;\n                    readonly subject: string | null;\n                };\n            }>;\n        };\n    } | null;\n};\nexport type PeopleQuery = {\n    readonly response: PeopleQueryResponse;\n    readonly variables: PeopleQueryVariables;\n};\n\n\n\n/*\nquery PeopleQuery {\n  users {\n    all {\n      name\n      presence\n      avatar {\n        image48\n      }\n      status {\n        message\n        emoji\n      }\n      id\n    }\n  }\n  titles: documents(set: \"title\") {\n    all(criteria: {}) {\n      edges {\n        node {\n          text\n          subject\n          id\n        }\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"presence\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"Avatar\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"avatar\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"image48\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"Status\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"status\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"message\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"emoji\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv4 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv5 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"criteria\",\n    \"value\": {}\n  }\n],\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"text\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"subject\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"PeopleQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"users\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"all\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"titles\",\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"documents\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v5/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"all\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v6/*: any*/),\n                      (v7/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": \"all(criteria:{})\"\n          }\n        ],\n        \"storageKey\": \"documents(set:\\\"title\\\")\"\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"PeopleQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"users\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"all\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v8/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"titles\",\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"documents\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v5/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"all\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v6/*: any*/),\n                      (v7/*: any*/),\n                      (v8/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": \"all(criteria:{})\"\n          }\n        ],\n        \"storageKey\": \"documents(set:\\\"title\\\")\"\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"2a6dfee5ec8f77c97acff2bc8fbcf4a6\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"PeopleQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query PeopleQuery {\\n  users {\\n    all {\\n      name\\n      presence\\n      avatar {\\n        image48\\n      }\\n      status {\\n        message\\n        emoji\\n      }\\n      id\\n    }\\n  }\\n  titles: documents(set: \\\"title\\\") {\\n    all(criteria: {}) {\\n      edges {\\n        node {\\n          text\\n          subject\\n          id\\n        }\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '28094ab31a64fbe177811308b6004e81';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Criteria = {\n    query?: string | null;\n    subject?: string | null;\n    speakers?: Array<string> | null;\n    mentions?: Array<string> | null;\n};\nexport type ProfileQueryVariables = {\n    name: string;\n    titleCriteria: Criteria;\n};\nexport type ProfileQueryResponse = {\n    readonly users: {\n        readonly current: {\n            readonly avatar: {\n                readonly image192: string | null;\n            };\n            readonly topReactionsReceived: ReadonlyArray<{\n                readonly count: number;\n                readonly emoji: {\n                    readonly name: string;\n                    readonly url: string | null;\n                };\n            }>;\n            readonly topReactionsGiven: ReadonlyArray<{\n                readonly count: number;\n                readonly emoji: {\n                    readonly name: string;\n                    readonly url: string | null;\n                };\n            }>;\n        } | null;\n    };\n    readonly titles: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly text: string;\n                };\n            }>;\n        };\n    } | null;\n    readonly quotes: {\n        readonly rank: number;\n    } | null;\n};\nexport type ProfileQuery = {\n    readonly response: ProfileQueryResponse;\n    readonly variables: ProfileQueryVariables;\n};\n\n\n\n/*\nquery ProfileQuery(\n  $name: String!\n  $titleCriteria: Criteria!\n) {\n  users {\n    current: withName(name: $name) {\n      avatar {\n        image192\n      }\n      topReactionsReceived(limit: 10) {\n        count\n        emoji {\n          name\n          url\n        }\n      }\n      topReactionsGiven(limit: 10) {\n        count\n        emoji {\n          name\n          url\n        }\n      }\n      id\n    }\n  }\n  titles: documents(set: \"title\") {\n    all(first: 100, criteria: $titleCriteria) {\n      edges {\n        node {\n          text\n          id\n        }\n      }\n    }\n  }\n  quotes: documents(set: \"quote\") {\n    rank(speaker: $name)\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"titleCriteria\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"name\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"Avatar\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"avatar\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"image192\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 10\n  }\n],\nv4 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"count\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"Emoji\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"emoji\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"url\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": (v3/*: any*/),\n  \"concreteType\": \"EmojiCount\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"topReactionsReceived\",\n  \"plural\": true,\n  \"selections\": (v4/*: any*/),\n  \"storageKey\": \"topReactionsReceived(limit:10)\"\n},\nv6 = {\n  \"alias\": null,\n  \"args\": (v3/*: any*/),\n  \"concreteType\": \"EmojiCount\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"topReactionsGiven\",\n  \"plural\": true,\n  \"selections\": (v4/*: any*/),\n  \"storageKey\": \"topReactionsGiven(limit:10)\"\n},\nv7 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv8 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"criteria\",\n    \"variableName\": \"titleCriteria\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 100\n  }\n],\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"text\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": \"quotes\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"set\",\n      \"value\": \"quote\"\n    }\n  ],\n  \"concreteType\": \"DocumentSet\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"documents\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"speaker\",\n          \"variableName\": \"name\"\n        }\n      ],\n      \"kind\": \"ScalarField\",\n      \"name\": \"rank\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": \"documents(set:\\\"quote\\\")\"\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProfileQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"users\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": \"current\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"withName\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"titles\",\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"documents\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v8/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"all\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v9/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"documents(set:\\\"title\\\")\"\n      },\n      (v10/*: any*/)\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProfileQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"users\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": \"current\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"withName\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v11/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"titles\",\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"documents\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v8/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"all\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v9/*: any*/),\n                      (v11/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"documents(set:\\\"title\\\")\"\n      },\n      (v10/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"0b5187d4d2ab7e23ca2f29951b25d034\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProfileQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ProfileQuery(\\n  $name: String!\\n  $titleCriteria: Criteria!\\n) {\\n  users {\\n    current: withName(name: $name) {\\n      avatar {\\n        image192\\n      }\\n      topReactionsReceived(limit: 10) {\\n        count\\n        emoji {\\n          name\\n          url\\n        }\\n      }\\n      topReactionsGiven(limit: 10) {\\n        count\\n        emoji {\\n          name\\n          url\\n        }\\n      }\\n      id\\n    }\\n  }\\n  titles: documents(set: \\\"title\\\") {\\n    all(first: 100, criteria: $titleCriteria) {\\n      edges {\\n        node {\\n          text\\n          id\\n        }\\n      }\\n    }\\n  }\\n  quotes: documents(set: \\\"quote\\\") {\\n    rank(speaker: $name)\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '6909612b595759bd5819ae0b5de00978';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RandomQuoteQueryVariables = {};\nexport type RandomQuoteQueryResponse = {\n    readonly documents: {\n        readonly random: {\n            readonly found: boolean;\n            readonly text: string;\n        };\n    } | null;\n};\nexport type RandomQuoteQuery = {\n    readonly response: RandomQuoteQueryResponse;\n    readonly variables: RandomQuoteQueryVariables;\n};\n\n\n\n/*\nquery RandomQuoteQuery {\n  documents(set: \"quote\") {\n    random(criteria: {}) {\n      found\n      text\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"quote\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"criteria\",\n    \"value\": {}\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"found\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"text\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RandomQuoteQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"documents\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"Document\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"random\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ],\n            \"storageKey\": \"random(criteria:{})\"\n          }\n        ],\n        \"storageKey\": \"documents(set:\\\"quote\\\")\"\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"RandomQuoteQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"documents\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"Document\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"random\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": \"random(criteria:{})\"\n          }\n        ],\n        \"storageKey\": \"documents(set:\\\"quote\\\")\"\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"cb6c0f3a03260cd4741e7342c90731b0\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"RandomQuoteQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query RandomQuoteQuery {\\n  documents(set: \\\"quote\\\") {\\n    random(criteria: {}) {\\n      found\\n      text\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = 'b00c2b7f51b5eafc60256f9ab7e571dd';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Criteria = {\n    query?: string | null;\n    subject?: string | null;\n    speakers?: Array<string> | null;\n    mentions?: Array<string> | null;\n};\nexport type QuotePageQueryVariables = {\n    c: Criteria;\n};\nexport type QuotePageQueryResponse = {\n    readonly documents: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly id: string | null;\n                    readonly text: string;\n                };\n            }>;\n            readonly pageInfo: {\n                readonly count: number;\n                readonly hasNextPage: boolean;\n            };\n        };\n    } | null;\n};\nexport type QuotePageQuery = {\n    readonly response: QuotePageQueryResponse;\n    readonly variables: QuotePageQueryVariables;\n};\n\n\n\n/*\nquery QuotePageQuery(\n  $c: Criteria!\n) {\n  documents(set: \"quote\") {\n    all(criteria: $c, first: 20) {\n      edges {\n        node {\n          id\n          text\n        }\n      }\n      pageInfo {\n        count\n        hasNextPage\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"c\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"set\",\n        \"value\": \"quote\"\n      }\n    ],\n    \"concreteType\": \"DocumentSet\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"documents\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"criteria\",\n            \"variableName\": \"c\"\n          },\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"first\",\n            \"value\": 20\n          }\n        ],\n        \"concreteType\": \"DocumentConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"all\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"DocumentEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Document\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"id\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"text\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PageInfo\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pageInfo\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"count\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hasNextPage\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": \"documents(set:\\\"quote\\\")\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotePageQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"QuotePageQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"4474ea52deb1145179f9db6e2c274aad\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotePageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query QuotePageQuery(\\n  $c: Criteria!\\n) {\\n  documents(set: \\\"quote\\\") {\\n    all(criteria: $c, first: 20) {\\n      edges {\\n        node {\\n          id\\n          text\\n        }\\n      }\\n      pageInfo {\\n        count\\n        hasNextPage\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '6e063f623999a0dc41b92fe0b238d3ed';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type EventsQueryVariables = {};\nexport type EventsQueryResponse = {\n    readonly calendarURL: string;\n};\nexport type EventsQuery = {\n    readonly response: EventsQueryResponse;\n    readonly variables: EventsQueryVariables;\n};\n\n\n\n/*\nquery EventsQuery {\n  calendarURL\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"calendarURL\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EventsQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"EventsQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"db7399016ef01122a3905fafde2bf555\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EventsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EventsQuery {\\n  calendarURL\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '388cd7e5bbbedc329dded72e8648dbf6';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type ActionBarSubmitMutationVariables = {\n    set: string;\n    channel: string;\n    lines: Array<string>;\n};\nexport type ActionBarSubmitMutationResponse = {\n    readonly createDocument: {\n        readonly id: string | null;\n    };\n};\nexport type ActionBarSubmitMutation = {\n    readonly response: ActionBarSubmitMutationResponse;\n    readonly variables: ActionBarSubmitMutationVariables;\n};\n\n\n\n/*\nmutation ActionBarSubmitMutation(\n  $set: String!\n  $channel: String!\n  $lines: [ID!]!\n) {\n  createDocument(set: $set, channel: $channel, lines: $lines) {\n    id\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"channel\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"lines\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"set\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"channel\",\n        \"variableName\": \"channel\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"lines\",\n        \"variableName\": \"lines\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"set\",\n        \"variableName\": \"set\"\n      }\n    ],\n    \"concreteType\": \"Document\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"createDocument\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ActionBarSubmitMutation\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ActionBarSubmitMutation\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"cddf9284ec903c2325f34e382ad6750e\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ActionBarSubmitMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ActionBarSubmitMutation(\\n  $set: String!\\n  $channel: String!\\n  $lines: [ID!]!\\n) {\\n  createDocument(set: $set, channel: $channel, lines: $lines) {\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '6207ead903199684c65e05bfe37267af';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RecentChannelQueryVariables = {};\nexport type RecentChannelQueryResponse = {\n    readonly cache: {\n        readonly knownChannels: ReadonlyArray<string>;\n    };\n};\nexport type RecentChannelQuery = {\n    readonly response: RecentChannelQueryResponse;\n    readonly variables: RecentChannelQueryVariables;\n};\n\n\n\n/*\nquery RecentChannelQuery {\n  cache {\n    knownChannels\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"Cache\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"cache\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"knownChannels\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RecentChannelQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"RecentChannelQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"c5196d202e9a97c43891aac6b16c54c3\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"RecentChannelQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query RecentChannelQuery {\\n  cache {\\n    knownChannels\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = 'b33c5ca20b56c7400e6a375a0e5965ed';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RecentHistoryQueryVariables = {\n    channel: string;\n};\nexport type RecentHistoryQueryResponse = {\n    readonly cache: {\n        readonly knownChannels: ReadonlyArray<string>;\n        readonly linesForChannel: ReadonlyArray<{\n            readonly id: string | null;\n            readonly speaker: {\n                readonly id: string;\n                readonly name: string;\n                readonly avatar: {\n                    readonly image32: string | null;\n                };\n            } | null;\n            readonly timestamp: string;\n            readonly text: string;\n        }> | null;\n    };\n};\nexport type RecentHistoryQuery = {\n    readonly response: RecentHistoryQueryResponse;\n    readonly variables: RecentHistoryQueryVariables;\n};\n\n\n\n/*\nquery RecentHistoryQuery(\n  $channel: String!\n) {\n  cache {\n    knownChannels\n    linesForChannel(channel: $channel) {\n      id\n      speaker {\n        id\n        name\n        avatar {\n          image32\n        }\n      }\n      timestamp\n      text\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"channel\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"Cache\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"cache\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"knownChannels\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"channel\",\n            \"variableName\": \"channel\"\n          }\n        ],\n        \"concreteType\": \"Line\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"linesForChannel\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"speaker\",\n            \"plural\": false,\n            \"selections\": [\n              (v1/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"name\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Avatar\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"avatar\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"image32\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"timestamp\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"text\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RecentHistoryQuery\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"RecentHistoryQuery\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"d6b7f6673c517a63ca5f858817351a41\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"RecentHistoryQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query RecentHistoryQuery(\\n  $channel: String!\\n) {\\n  cache {\\n    knownChannels\\n    linesForChannel(channel: $channel) {\\n      id\\n      speaker {\\n        id\\n        name\\n        avatar {\\n          image32\\n        }\\n      }\\n      timestamp\\n      text\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '4638d70a91379c9d2ce46aefaca2f3d9';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RandomMemoryListQueryVariables = {};\nexport type RandomMemoryListQueryResponse = {\n    readonly rem: {\n        readonly search: {\n            readonly edges: ReadonlyArray<{\n                readonly cursor: string;\n                readonly node: {\n                    readonly key: string;\n                };\n            }>;\n        };\n    };\n};\nexport type RandomMemoryListQuery = {\n    readonly response: RandomMemoryListQueryResponse;\n    readonly variables: RandomMemoryListQueryVariables;\n};\n\n\n\n/*\nquery RandomMemoryListQuery {\n  rem {\n    search(first: 10, orderField: RANDOM) {\n      edges {\n        cursor\n        node {\n          key\n        }\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"Rem\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"rem\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": [\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"first\",\n            \"value\": 10\n          },\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"orderField\",\n            \"value\": \"RANDOM\"\n          }\n        ],\n        \"concreteType\": \"MemoryConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"search\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"MemoryEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"cursor\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Memory\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"key\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"search(first:10,orderField:\\\"RANDOM\\\")\"\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RandomMemoryListQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"RandomMemoryListQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"0e6660bfaa4e2d18207c78279129f3bc\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"RandomMemoryListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query RandomMemoryListQuery {\\n  rem {\\n    search(first: 10, orderField: RANDOM) {\\n      edges {\\n        cursor\\n        node {\\n          key\\n        }\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = 'a26dba46981838ebae9dea0fa627b50c';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from \"relay-runtime\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type MatchingMemoryPage_rem = {\n    readonly search: {\n        readonly pageInfo: {\n            readonly count: number;\n            readonly hasPreviousPage: boolean;\n            readonly hasNextPage: boolean;\n        };\n        readonly edges: ReadonlyArray<{\n            readonly cursor: string;\n            readonly node: {\n                readonly key: string;\n            };\n        }>;\n    };\n    readonly \" $refType\": \"MatchingMemoryPage_rem\";\n};\nexport type MatchingMemoryPage_rem$data = MatchingMemoryPage_rem;\nexport type MatchingMemoryPage_rem$key = {\n    readonly \" $data\"?: MatchingMemoryPage_rem$data;\n    readonly \" $fragmentRefs\": FragmentRefs<\"MatchingMemoryPage_rem\">;\n};\n\n\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [\n    {\n      \"defaultValue\": null,\n      \"kind\": \"LocalArgument\",\n      \"name\": \"count\"\n    },\n    {\n      \"defaultValue\": null,\n      \"kind\": \"LocalArgument\",\n      \"name\": \"cursor\"\n    },\n    {\n      \"defaultValue\": null,\n      \"kind\": \"LocalArgument\",\n      \"name\": \"pattern\"\n    }\n  ],\n  \"kind\": \"Fragment\",\n  \"metadata\": {\n    \"connection\": [\n      {\n        \"count\": \"count\",\n        \"cursor\": \"cursor\",\n        \"direction\": \"forward\",\n        \"path\": [\n          \"search\"\n        ]\n      }\n    ]\n  },\n  \"name\": \"MatchingMemoryPage_rem\",\n  \"selections\": [\n    {\n      \"alias\": \"search\",\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"query\",\n          \"variableName\": \"pattern\"\n        }\n      ],\n      \"concreteType\": \"MemoryConnection\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"__MatchingMemoryPage_search_connection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"PageInfo\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"pageInfo\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"kind\": \"ScalarField\",\n              \"name\": \"count\",\n              \"storageKey\": null\n            },\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"kind\": \"ScalarField\",\n              \"name\": \"hasPreviousPage\",\n              \"storageKey\": null\n            },\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"kind\": \"ScalarField\",\n              \"name\": \"hasNextPage\",\n              \"storageKey\": null\n            },\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"kind\": \"ScalarField\",\n              \"name\": \"endCursor\",\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"MemoryEdge\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"edges\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"kind\": \"ScalarField\",\n              \"name\": \"cursor\",\n              \"storageKey\": null\n            },\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"concreteType\": \"Memory\",\n              \"kind\": \"LinkedField\",\n              \"name\": \"node\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"key\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"__typename\",\n                  \"storageKey\": null\n                }\n              ],\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Rem\",\n  \"abstractKey\": null\n};\n(node as any).hash = '3d967b0051bc3ecfaa0ee5a7c22d8066';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type MatchingMemoryPageQueryVariables = {\n    pattern: string;\n    count: number;\n    cursor?: string | null;\n};\nexport type MatchingMemoryPageQueryResponse = {\n    readonly rem: {\n        readonly \" $fragmentRefs\": FragmentRefs<\"MatchingMemoryPage_rem\">;\n    };\n};\nexport type MatchingMemoryPageQuery = {\n    readonly response: MatchingMemoryPageQueryResponse;\n    readonly variables: MatchingMemoryPageQueryVariables;\n};\n\n\n\n/*\nquery MatchingMemoryPageQuery(\n  $pattern: String!\n  $count: Int!\n  $cursor: String\n) {\n  rem {\n    ...MatchingMemoryPage_rem_3tPC4q\n  }\n}\n\nfragment MatchingMemoryPage_rem_3tPC4q on Rem {\n  search(query: $pattern, first: $count, after: $cursor) {\n    pageInfo {\n      count\n      hasPreviousPage\n      hasNextPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        key\n        __typename\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"count\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"cursor\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"pattern\"\n},\nv3 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"after\",\n    \"variableName\": \"cursor\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"first\",\n    \"variableName\": \"count\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"query\",\n    \"variableName\": \"pattern\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"MatchingMemoryPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"args\": [\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"count\",\n                \"variableName\": \"count\"\n              },\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"cursor\",\n                \"variableName\": \"cursor\"\n              },\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"pattern\",\n                \"variableName\": \"pattern\"\n              }\n            ],\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"MatchingMemoryPage_rem\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"MatchingMemoryPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"MemoryConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"search\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"PageInfo\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"pageInfo\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"count\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"hasPreviousPage\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"hasNextPage\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"endCursor\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"MemoryEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"cursor\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Memory\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"key\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"__typename\",\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"filters\": [\n              \"query\"\n            ],\n            \"handle\": \"connection\",\n            \"key\": \"MatchingMemoryPage_search\",\n            \"kind\": \"LinkedHandle\",\n            \"name\": \"search\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"97e8e5d948dfc7d41e0d607f8e9c7669\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"MatchingMemoryPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query MatchingMemoryPageQuery(\\n  $pattern: String!\\n  $count: Int!\\n  $cursor: String\\n) {\\n  rem {\\n    ...MatchingMemoryPage_rem_3tPC4q\\n  }\\n}\\n\\nfragment MatchingMemoryPage_rem_3tPC4q on Rem {\\n  search(query: $pattern, first: $count, after: $cursor) {\\n    pageInfo {\\n      count\\n      hasPreviousPage\\n      hasNextPage\\n      endCursor\\n    }\\n    edges {\\n      cursor\\n      node {\\n        key\\n        __typename\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = 'c72c7b136364a39649e5c22f5505f92c';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type MatchingMemoryListQueryVariables = {\n    pattern: string;\n};\nexport type MatchingMemoryListQueryResponse = {\n    readonly rem: {\n        readonly \" $fragmentRefs\": FragmentRefs<\"MatchingMemoryPage_rem\">;\n    };\n};\nexport type MatchingMemoryListQuery = {\n    readonly response: MatchingMemoryListQueryResponse;\n    readonly variables: MatchingMemoryListQueryVariables;\n};\n\n\n\n/*\nquery MatchingMemoryListQuery(\n  $pattern: String!\n) {\n  rem {\n    ...MatchingMemoryPage_rem_2QeWhh\n  }\n}\n\nfragment MatchingMemoryPage_rem_2QeWhh on Rem {\n  search(query: $pattern, first: 10) {\n    pageInfo {\n      count\n      hasPreviousPage\n      hasNextPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        key\n        __typename\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"pattern\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 10\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"query\",\n    \"variableName\": \"pattern\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"MatchingMemoryListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"args\": [\n              {\n                \"kind\": \"Literal\",\n                \"name\": \"count\",\n                \"value\": 10\n              },\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"pattern\",\n                \"variableName\": \"pattern\"\n              }\n            ],\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"MatchingMemoryPage_rem\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"MatchingMemoryListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"MemoryConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"search\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"PageInfo\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"pageInfo\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"count\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"hasPreviousPage\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"hasNextPage\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"endCursor\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"MemoryEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"cursor\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Memory\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"key\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"__typename\",\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": (v1/*: any*/),\n            \"filters\": [\n              \"query\"\n            ],\n            \"handle\": \"connection\",\n            \"key\": \"MatchingMemoryPage_search\",\n            \"kind\": \"LinkedHandle\",\n            \"name\": \"search\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"229d806710a4fa0ae8dc2de95fcb9c1f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"MatchingMemoryListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query MatchingMemoryListQuery(\\n  $pattern: String!\\n) {\\n  rem {\\n    ...MatchingMemoryPage_rem_2QeWhh\\n  }\\n}\\n\\nfragment MatchingMemoryPage_rem_2QeWhh on Rem {\\n  search(query: $pattern, first: 10) {\\n    pageInfo {\\n      count\\n      hasPreviousPage\\n      hasNextPage\\n      endCursor\\n    }\\n    edges {\\n      cursor\\n      node {\\n        key\\n        __typename\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '405496b6cc0f599796dd82aa790721ea';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RemEntryQueryVariables = {\n    key: string;\n};\nexport type RemEntryQueryResponse = {\n    readonly rem: {\n        readonly get: {\n            readonly key: string;\n            readonly value: string;\n        } | null;\n    };\n};\nexport type RemEntryQuery = {\n    readonly response: RemEntryQueryResponse;\n    readonly variables: RemEntryQueryVariables;\n};\n\n\n\n/*\nquery RemEntryQuery(\n  $key: String!\n) {\n  rem {\n    get(key: $key) {\n      key\n      value\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"key\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"Rem\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"rem\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"key\",\n            \"variableName\": \"key\"\n          }\n        ],\n        \"concreteType\": \"Memory\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"get\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"key\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"value\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RemEntryQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"RemEntryQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"a4b9f433b87d232c07b0af0431a5f167\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"RemEntryQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query RemEntryQuery(\\n  $key: String!\\n) {\\n  rem {\\n    get(key: $key) {\\n      key\\n      value\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '9c103e4e1e7fbb32ec3431e467783435';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type AppQueryVariables = {};\nexport type AppQueryResponse = {\n    readonly users: {\n        readonly me: {\n            readonly id: string;\n            readonly name: string;\n            readonly avatar: {\n                readonly image48: string | null;\n            };\n            readonly roles: ReadonlyArray<{\n                readonly name: string;\n            }>;\n            readonly coordinatorToken: string | null;\n        };\n    };\n    readonly title: {\n        readonly mine: {\n            readonly text: string;\n            readonly found: boolean;\n        };\n    } | null;\n};\nexport type AppQuery = {\n    readonly response: AppQueryResponse;\n    readonly variables: AppQueryVariables;\n};\n\n\n\n/*\nquery AppQuery {\n  users {\n    me {\n      id\n      name\n      avatar {\n        image48\n      }\n      roles {\n        name\n      }\n      coordinatorToken\n    }\n  }\n  title: documents(set: \"title\") {\n    mine {\n      text\n      found\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserSet\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"users\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"User\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"me\",\n      \"plural\": false,\n      \"selections\": [\n        (v0/*: any*/),\n        (v1/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"Avatar\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"avatar\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"kind\": \"ScalarField\",\n              \"name\": \"image48\",\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"Role\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"roles\",\n          \"plural\": true,\n          \"selections\": [\n            (v1/*: any*/)\n          ],\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"coordinatorToken\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"text\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"found\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"AppQuery\",\n    \"selections\": [\n      (v2/*: any*/),\n      {\n        \"alias\": \"title\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"documents\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Document\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"mine\",\n            \"plural\": false,\n            \"selections\": [\n              (v4/*: any*/),\n              (v5/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"documents(set:\\\"title\\\")\"\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"AppQuery\",\n    \"selections\": [\n      (v2/*: any*/),\n      {\n        \"alias\": \"title\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"documents\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Document\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"mine\",\n            \"plural\": false,\n            \"selections\": [\n              (v4/*: any*/),\n              (v5/*: any*/),\n              (v0/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"documents(set:\\\"title\\\")\"\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"710aacb0fc75f6e348429e32d69af297\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"AppQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query AppQuery {\\n  users {\\n    me {\\n      id\\n      name\\n      avatar {\\n        image48\\n      }\\n      roles {\\n        name\\n      }\\n      coordinatorToken\\n    }\\n  }\\n  title: documents(set: \\\"title\\\") {\\n    mine {\\n      text\\n      found\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '836730f8aa29cc2eba77f30e5f879f96';\nexport default node;\n","const NETWORK_ERROR_MARKER = Symbol(\"is-network-error\");\nconst GRAPHQL_ERROR_MARKER = Symbol(\"is-graphql-error\");\n\nexport interface NetworkError extends Error {\n  requestURL: string;\n  responseStatus: number;\n  responseText: string;\n  marker: typeof NETWORK_ERROR_MARKER;\n}\n\nexport interface GraphQLError extends Error {\n  requestURL: string;\n  errors: string[];\n  marker: typeof GRAPHQL_ERROR_MARKER;\n}\n\nexport function isNetworkError(err: Error | null): err is NetworkError {\n  return err ? (err as NetworkError).marker === NETWORK_ERROR_MARKER : false;\n}\n\nexport function isGraphQLError(err: Error | null): err is GraphQLError {\n  return err ? (err as GraphQLError).marker === GRAPHQL_ERROR_MARKER : false;\n}\n\nexport async function createNetworkError(\n  message: string,\n  url: string,\n  response: Response\n) {\n  const err = new Error(message) as NetworkError;\n  err.requestURL = url;\n  err.responseStatus = response.status;\n  err.responseText = await response.text();\n  err.marker = NETWORK_ERROR_MARKER;\n  return err as NetworkError;\n}\n\nexport function createGraphQLError(\n  message: string,\n  url: string,\n  errors: string[]\n) {\n  const err = new Error(message) as GraphQLError;\n  err.requestURL = url;\n  err.errors = [...errors];\n  return err;\n}\n","import {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  OperationType,\n  RequestParameters,\n  Variables,\n} from \"relay-runtime\";\n\nimport {createNetworkError, createGraphQLError} from \"./errors\";\n\nconst API_URL = `${process.env.REACT_APP_API_BASE_URL}/graphql`;\nexport const AUTH_URL = `${process.env.REACT_APP_API_BASE_URL}/auth/${process.env.REACT_APP_API_AUTH_TYPE}`;\n\nexport interface QueryResult<T extends OperationType> {\n  error: Error | null;\n  props: T[\"response\"] | null;\n  retry: (() => void) | null;\n}\n\nasync function fetchQuery(\n  request: RequestParameters,\n  variables: Variables\n): Promise<any> {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      query: request.text,\n      variables,\n    }),\n  });\n\n  if (response.ok) {\n    const payload = await response.json();\n    if (payload.errors) {\n      throw createGraphQLError(\n        `API server responded with GraphQL errors`,\n        API_URL,\n        payload.errors\n      );\n    }\n    return payload;\n  } else {\n    throw await createNetworkError(\n      `API server responded with ${response.status}`,\n      API_URL,\n      response\n    );\n  }\n}\n\nconst source = new RecordSource();\nconst network = Network.create(fetchQuery);\n\nexport function getEnvironment(): Environment {\n  const store = new Store(source);\n\n  return new Environment({\n    network,\n    store,\n  });\n}\n","import React, {useContext} from \"react\";\n\nimport {IUser as IRealUser} from \"./userTypes\";\nexport type IUser = IRealUser;\n\nexport const UserContext = React.createContext<IUser | null>(null);\n\ninterface RoleProps {\n  name: string;\n  children: JSX.Element;\n}\n\nexport const Role = (props: RoleProps) => {\n  const user = useContext(UserContext);\n  if (!user) return null;\n\n  const match = user.roles.some(role => role.name === props.name);\n  if (!match) return null;\n\n  return props.children;\n};\n","import React, {useState, useEffect} from \"react\";\n\nimport {Coordinator, IDelta} from \"./coordinator\";\n\nconst nullDelta: IDelta = {\n  units_to_add: [],\n  units_to_change: [],\n  units_to_restart: [],\n  units_to_remove: [],\n  files_to_write: [],\n};\n\nexport function hasPendingDelta(delta: IDelta) {\n  return [\n    delta.units_to_add,\n    delta.units_to_change,\n    delta.units_to_remove,\n    delta.units_to_restart,\n    delta.units_to_remove,\n    delta.files_to_write,\n  ].some(arr => arr.length > 0);\n}\n\nexport interface PendingDiff {\n  delta: IDelta;\n  refresh: () => void;\n}\n\nexport const PendingDiffContext = React.createContext<PendingDiff>({\n  delta: nullDelta,\n  refresh: () => {},\n});\n\ninterface PendingDiffProps {\n  coordinator: Coordinator;\n  children: JSX.Element;\n}\n\nexport function PendingDiffProvider(props: PendingDiffProps) {\n  const [delta, setDelta] = useState<IDelta>(nullDelta);\n  const [latch, setLatch] = useState(0);\n\n  useEffect(() => {\n    let ignore = false;\n\n    (async function() {\n      const delta = await props.coordinator.getDiff().catch(() => nullDelta);\n      if (!ignore) {\n        setDelta(delta);\n      }\n    })();\n\n    return () => {\n      ignore = true;\n    };\n  }, [props.coordinator, latch]);\n\n  const pendingDiff = {\n    delta,\n    refresh: () => setLatch(current => current + 1),\n  };\n\n  return (\n    <PendingDiffContext.Provider value={pendingDiff}>\n      {props.children}\n    </PendingDiffContext.Provider>\n  );\n}\n","import React, {useContext} from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport {Role} from \"./common/Role\";\nimport {PendingDiffContext, hasPendingDelta} from \"./common/PendingDiff\";\n\ninterface PillProps {\n  to: string;\n  exact?: boolean;\n  children: React.ReactNode;\n}\n\nfunction Pill(props: PillProps) {\n  return (\n    <li role=\"presentation\" className=\"nav-item\">\n      <NavLink\n        to={props.to}\n        exact={props.exact}\n        className=\"nav-link\"\n        activeClassName={\"active\"}\n      >\n        {props.children}\n      </NavLink>\n    </li>\n  );\n}\n\nexport const SideNav = () => {\n  const showBadge = hasPendingDelta(useContext(PendingDiffContext).delta);\n\n  return (\n    <ul className=\"nav nav-pills flex-column\">\n      <Pill to=\"/\" exact>\n        dashboard\n      </Pill>\n      <Pill to=\"/people\">dramatis personae</Pill>\n      <Pill to=\"/recent\">recent chatter</Pill>\n      <hr />\n      <Pill to=\"/quotes\">quotes</Pill>\n      <Pill to=\"/rem\">rem</Pill>\n      <Pill to=\"/events\">events</Pill>\n      <Role name=\"admin\">\n        <>\n          <hr />\n          <p className=\"bg-warning text-white font-weight-bold p-2 rounded text-center\">\n            <i className=\"fas fa-id-badge mr-2\" />\n            admin only\n          </p>\n          <Pill to=\"/admin/services\">services</Pill>\n          <Pill to=\"/admin/sync\">\n            sync{\" \"}\n            {showBadge && (\n              <span className=\"badge badge-info float-right\">pending</span>\n            )}\n          </Pill>\n        </>\n      </Role>\n    </ul>\n  );\n};\n","import React from \"react\";\n\nexport const Dashboard = () => (\n  <div className=\"card bg-light border border-info rounded\">\n    <div className=\"card-body\">\n      <h3 className=\"card-title\">Why hello there.</h3>\n      <p className=\"card-text\">\n        {\"Pretend there's something awesome written here.\"}\n      </p>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport interface User {\n  readonly name: string;\n  readonly presence: string;\n  readonly avatar: {image48: string | null};\n  readonly status: {readonly message: string | null};\n}\n\ninterface PersonProps {\n  user: User;\n  title: string;\n}\n\nexport function Person(props: PersonProps) {\n  const {name, presence, avatar, status} = props.user;\n  const avatarURL = avatar.image48;\n  const presenceIcon =\n    presence === \"ACTIVE\"\n      ? \"pushbot-status-active fa-dot-circle\"\n      : \"pushbot-status-inactive fa-circle\";\n  const {message} = status;\n\n  return (\n    <div className=\"pushbot-person row\">\n      <div className=\"col-xs-1 px-2\">\n        <img src={avatarURL!} className=\"rounded\" alt=\"\" />\n      </div>\n      <div className=\"col-xs-11 px-2\">\n        <p>\n          <i\n            className={`far pushbot-status mr-2 ${presenceIcon}`}\n            aria-hidden=\"true\"\n          />\n          <Link to={`/people/${name}`} className=\"pushbot-person-name mr-2\">\n            {name}\n          </Link>\n          <span className=\"pushbot-person-title font-weight-bold\">\n            {props.title}\n          </span>\n        </p>\n        <p className=\"pushbot-person-status-message font-italic font-weight-light\">\n          {message}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {User, Person} from \"./Person\";\n\nimport {PeopleQuery} from \"../__generated__/PeopleQuery.graphql\";\n\nimport \"./People.css\";\n\nexport class People extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query PeopleQuery {\n        users {\n          all {\n            name\n            presence\n\n            avatar {\n              image48\n            }\n\n            status {\n              message\n              emoji\n            }\n          }\n        }\n\n        titles: documents(set: \"title\") {\n          all(criteria: {}) {\n            edges {\n              node {\n                text\n                subject\n              }\n            }\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<PeopleQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QueryResult<PeopleQuery>) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    return (\n      <div>\n        <h3>Dramatis Personae</h3>\n        <blockquote className=\"blockquote text-right\">\n          Maybe the <em>real</em> lab was the friends we made along the way.\n        </blockquote>\n        <ul className=\"list-group\">\n          {this.collateUsers(props).map(({user, title}) => {\n            return (\n              <li key={user.name} className=\"list-group-item\">\n                <Person user={user} title={title} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  };\n\n  collateUsers(\n    props: QueryResult<PeopleQuery>[\"props\"]\n  ): {user: User; title: string}[] {\n    if (!props) {\n      return [];\n    }\n\n    const titles = props.titles;\n    if (!titles) {\n      return [];\n    }\n\n    const titlesByUsername: {[username: string]: string} = {};\n    for (const title of titles.all.edges) {\n      if (title.node.subject) {\n        titlesByUsername[title.node.subject] = title.node.text;\n      }\n    }\n\n    const userData = props.users.all.map(user => {\n      return {user, title: titlesByUsername[user.name] || \"\"};\n    });\n\n    userData.sort((a, b) => a.user.name.localeCompare(b.user.name));\n\n    return userData;\n  }\n}\n","import React, {Component} from \"react\";\nimport Chartist from \"chartist\";\n\nChartist.plugins = Chartist.plugins || {};\nChartist.plugins.ctHtmlLabels = function() {\n  return function(chart: any) {\n    chart.on(\"draw\", function(context: any) {\n      if (context.type === \"label\") {\n        context.element.empty()._node.innerHTML = context.text;\n      }\n    });\n  };\n};\n\ninterface ChartProps {\n  data: Chartist.IChartistData;\n  options: Chartist.IBarChartOptions;\n}\n\nexport class Chart extends Component<ChartProps> {\n  private refElement?: HTMLElement | null;\n  private chart?: Chartist.IChartistBarChart;\n\n  render() {\n    return (\n      <div\n        className=\"ct-chart ct-golden-section\"\n        ref={c => {\n          this.refElement = c;\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    const options = this.props.options || {};\n    options.plugins = [Chartist.plugins.ctHtmlLabels()];\n\n    this.chart = new Chartist.Bar(this.refElement, this.props.data, options);\n  }\n\n  componentWillUnmount() {\n    this.chart && this.chart.detach();\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport EmojiConverter from \"emoji-js\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {Chart} from \"../common/Chart\";\nimport {ProfileQuery} from \"../__generated__/ProfileQuery.graphql\";\n\nimport \"./Profile.css\";\n\ninterface ProfileProps {\n  match: {\n    params: {\n      name: string;\n    };\n  };\n}\n\ntype User = NonNullable<ProfileQuery[\"response\"][\"users\"][\"current\"]>;\n\ntype EmojiCount = User[\"topReactionsGiven\"] | User[\"topReactionsReceived\"];\n\nexport class Profile extends Component<ProfileProps> {\n  private environment: Environment;\n  private emoji: EmojiConverter;\n\n  constructor(props: ProfileProps) {\n    super(props);\n\n    this.environment = getEnvironment();\n    this.emoji = new EmojiConverter();\n\n    this.emoji.img_sets.apple.sheet = \"/sheet_apple_64.png\";\n    this.emoji.use_sheet = true;\n    this.emoji.include_title = true;\n  }\n\n  render() {\n    const query = graphql`\n      query ProfileQuery($name: String!, $titleCriteria: Criteria!) {\n        users {\n          current: withName(name: $name) {\n            avatar {\n              image192\n            }\n\n            topReactionsReceived(limit: 10) {\n              count\n              emoji {\n                name\n                url\n              }\n            }\n\n            topReactionsGiven(limit: 10) {\n              count\n              emoji {\n                name\n                url\n              }\n            }\n          }\n        }\n\n        titles: documents(set: \"title\") {\n          all(first: 100, criteria: $titleCriteria) {\n            edges {\n              node {\n                text\n              }\n            }\n          }\n        }\n\n        quotes: documents(set: \"quote\") {\n          rank(speaker: $name)\n        }\n      }\n    `;\n\n    const username = decodeURIComponent(this.props.match.params.name);\n    const variables = {\n      name: username,\n      titleCriteria: {subject: username},\n    };\n\n    return (\n      <QueryRenderer<ProfileQuery>\n        environment={this.environment}\n        query={query}\n        variables={variables}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QueryResult<ProfileQuery>) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    if (!props) {\n      return (\n        <div className=\"pushbot-loading\">\n          <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n          sluuuuurp\n        </div>\n      );\n    }\n\n    const user = props.users.current;\n    if (!user) {\n      return null;\n    }\n\n    const avatar = user.avatar.image192 || \"\";\n\n    return (\n      <div className=\"pushbot-profile row\">\n        <div className=\"col-md-6\">\n          <img\n            className=\"pushbot-profile-avatar img-responsive img-rounded\"\n            src={avatar}\n            alt=\"\"\n          />\n          {this.renderReactionsReceivedChart(user)}\n          {this.renderReactionsGivenChart(user)}\n        </div>\n        <div className=\"col-md-6\">\n          <h1 className=\"pushbot-profile-username\">\n            @{this.props.match.params.name}\n          </h1>\n          {this.renderTitles(props)}\n          {this.renderQuoteRank(props)}\n        </div>\n      </div>\n    );\n  };\n\n  renderReactionsGivenChart(user: User) {\n    return this.renderReactionChart(\n      user.topReactionsGiven,\n      \"Emoji reactions given\"\n    );\n  }\n\n  renderReactionsReceivedChart(user: User) {\n    return this.renderReactionChart(\n      user.topReactionsReceived,\n      \"Emoji reactions received\"\n    );\n  }\n\n  renderReactionChart(results: EmojiCount, name: string) {\n    const data = {\n      labels: results.map(each => {\n        if (each.emoji.url) {\n          return `<img class=\"emoji\" alt=\"${each.emoji.name}\" src=\"${each.emoji.url}\" title=\"${each.emoji.name}\">`;\n        }\n\n        return this.emoji.replace_colons(`:${each.emoji.name}:`);\n      }),\n      series: [results.map(each => each.count)],\n    };\n\n    const options = {\n      low: 0,\n      axisY: {\n        onlyInteger: true,\n      },\n    };\n\n    return (\n      <p className=\"pushbot-profile-reaction-chart\">\n        <h4>{name}</h4>\n        <Chart data={data} options={options} />\n      </p>\n    );\n  }\n\n  renderTitles(props: NonNullable<QueryResult<ProfileQuery>[\"props\"]>) {\n    const edges = props.titles ? props.titles.all.edges : [];\n    if (edges.length === 0) {\n      return (\n        <p className=\"pushbot-profile-titles-empty\">\n          No titles yet. Set one with{\" \"}\n          <code>\n            !settitle {decodeURIComponent(this.props.match.params.name)}: ...\n          </code>\n          .\n        </p>\n      );\n    }\n\n    return (\n      <p className=\"pushbot-profile-titles\">\n        {edges.map(t => this.titleFrom(t.node.text))}\n      </p>\n    );\n  }\n\n  renderQuoteRank(props: NonNullable<QueryResult<ProfileQuery>[\"props\"]>) {\n    if (!props.quotes) {\n      return (\n        <p className=\"pushbot-profile-quoterank\">\n          You have not yet been immortalized in the quotefile.\n        </p>\n      );\n    }\n\n    const rank = props.quotes.rank;\n    return (\n      <p className=\"pushbot-profile-quoterank\">\n        Rank #{rank} in the quotefile.\n      </p>\n    );\n  }\n\n  titleFrom(title: string) {\n    if (/^https?:/.test(title)) {\n      return (\n        <img\n          className=\"pushbot-profile-title img-responsive\"\n          alt=\"\"\n          src={title}\n        />\n      );\n    }\n\n    return <span className=\"pushbot-profile-title\">{title}</span>;\n  }\n}\n","export interface QueryModeCases<R> {\n  containing?(): R;\n  by?(): R;\n  about?(): R;\n  default?(): R;\n}\n\nexport interface QueryMode {\n  when<R>(cases: QueryModeCases<R>): R | null;\n  label: string;\n}\n\nexport const CONTAINING: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.containing || cases.default || (() => null))();\n  },\n\n  label: \"containing\",\n};\n\nexport const BY: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.by || cases.default || (() => null))();\n  },\n\n  label: \"by\",\n};\n\nexport const ABOUT: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.about || cases.default || (() => null))();\n  },\n\n  label: \"about\",\n};\n\nexport const modes: QueryMode[] = [CONTAINING, BY, ABOUT];\n","import React from \"react\";\n\ninterface QuoteProps {\n  text: string;\n}\n\nexport function Quote(props: QuoteProps) {\n  return (\n    <blockquote className=\"mx-md-2 pushbot-quote\">\n      <p>{props.text}</p>\n    </blockquote>\n  );\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {RandomQuoteQuery, RandomQuoteResult} from \"./queryTypes\";\nimport {Quote} from \"./Quote\";\n\ninterface RandomQuoteState {\n  environment: Environment;\n}\n\nexport class RandomQuote extends Component<{}, RandomQuoteState> {\n  private lastQuote: string | null;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.lastQuote = null;\n    this.state = {\n      environment: getEnvironment(),\n    };\n  }\n\n  render() {\n    const query = graphql`\n      query RandomQuoteQuery {\n        documents(set: \"quote\") {\n          random(criteria: {}) {\n            found\n            text\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<RandomQuoteQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: RandomQuoteResult) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    const quoteText = props ? props.documents!.random.text : this.lastQuote;\n\n    if (!quoteText) {\n      return null;\n    }\n\n    this.lastQuote = quoteText;\n\n    return (\n      <div className=\"pushbot-random-quote card border-0\">\n        <div className=\"card-body\">\n          <p className=\"card-text\">\n            Type a search term above to find specific quotes. In the meantime,\n            enjoy this random quote.\n          </p>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-sm\"\n            onClick={this.another}\n          >\n            <i className=\"fas fa-sync\" aria-hidden=\"true\" />\n            Another\n          </button>\n        </div>\n        <Quote text={quoteText} />\n      </div>\n    );\n  };\n\n  another = () => {\n    this.setState({\n      environment: getEnvironment(),\n    });\n  };\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {Quote} from \"./Quote\";\nimport {getEnvironment} from \"../common/Transport\";\nimport {QueryMode} from \"./queryMode\";\nimport {QuotePageQuery, QuotePageResult, IQuotes} from \"./queryTypes\";\n\ninterface QuotePageProps {\n  query: string;\n  people: string[];\n  mode: QueryMode;\n}\n\nexport class QuotePage extends Component<QuotePageProps> {\n  private environment: Environment;\n  private lastTotal: number | null;\n  private lastResults: IQuotes | null;\n\n  constructor(props: QuotePageProps) {\n    super(props);\n    this.environment = getEnvironment();\n    this.lastTotal = null;\n    this.lastResults = null;\n  }\n\n  render() {\n    const query = graphql`\n      query QuotePageQuery($c: Criteria!) {\n        documents(set: \"quote\") {\n          all(criteria: $c, first: 20) {\n            edges {\n              node {\n                id\n                text\n              }\n            }\n\n            pageInfo {\n              count\n              hasNextPage\n            }\n          }\n        }\n      }\n    `;\n\n    const criteria: any = {query: this.props.query};\n    this.props.mode.when({\n      by: () => {\n        criteria.speakers = this.props.people;\n      },\n      about: () => {\n        criteria.mentions = this.props.people;\n      },\n    });\n\n    const variables = {\n      c: criteria,\n    };\n\n    return (\n      <QueryRenderer<QuotePageQuery>\n        environment={this.environment}\n        query={query}\n        variables={variables}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QuotePageResult) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    if (!props && !this.lastResults) {\n      return (\n        <div className=\"pushbot-loading\">\n          <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n          performing query\n        </div>\n      );\n    } else if (!props && this.lastResults && this.lastTotal) {\n      return this.renderDocuments(this.lastTotal, this.lastResults);\n    } else if (props) {\n      this.lastTotal = props.documents!.all.pageInfo.count;\n      this.lastResults = props.documents!.all.edges;\n\n      return this.renderDocuments(this.lastTotal, this.lastResults);\n    }\n  };\n\n  renderDocuments(total: number, documents: IQuotes) {\n    const quotes = documents.map(document => {\n      return <Quote key={document.node.id!} text={document.node.text} />;\n    });\n\n    const more = documents.length < total ? \"the first of\" : \"\";\n    const plural = total === 1 ? `matching quote` : `matching quotes`;\n\n    return (\n      <div className=\"pushbot-results card border-0\">\n        <div className=\"card-body\">\n          <p>\n            Showing {more} <strong>{total}</strong> {plural}.\n          </p>\n        </div>\n        {quotes}\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\n\nimport {QueryMode, CONTAINING, BY, ABOUT, modes} from \"./queryMode\";\nimport {RandomQuote} from \"./RandomQuote\";\nimport {QuotePage} from \"./QuotePage\";\n\nimport \"./Quotes.css\";\n\ninterface Search {\n  query: string;\n  people: string;\n  mode: QueryMode;\n}\n\nexport class Quotes extends Component {\n  readSearch(): Search {\n    const params = new URLSearchParams(window.location.search);\n\n    let mode = CONTAINING;\n    let people = \"\";\n    if (params.has(\"by\")) {\n      mode = BY;\n      people = params.get(\"by\")!;\n    } else if (params.has(\"about\")) {\n      mode = ABOUT;\n      people = params.get(\"about\")!;\n    }\n\n    return {\n      query: params.get(\"q\") || \"\",\n      people,\n      mode,\n    };\n  }\n\n  writeSearch(changes: Partial<Search>) {\n    const previous = this.readSearch();\n    const current = Object.assign(previous, changes);\n\n    const params = new URLSearchParams();\n\n    current.mode.when({\n      by: () => params.set(\"by\", current.people),\n      about: () => params.set(\"about\", current.people),\n    });\n    if (current.query.length) {\n      params.set(\"q\", current.query);\n    }\n\n    const nextSearch = params.toString();\n    const nextURL =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname +\n      (nextSearch.length > 0 ? \"?\" + nextSearch : \"\") +\n      window.location.hash;\n\n    if (window.history.replaceState) {\n      window.history.replaceState({}, \"\", nextURL);\n    } else {\n      window.location.href = nextURL;\n    }\n    this.forceUpdate();\n  }\n\n  render() {\n    const search = this.readSearch();\n    const showPeople = search.mode.when({\n      containing: () => false,\n      by: () => true,\n      about: () => true,\n    });\n\n    return (\n      <div>\n        <form\n          className={`pushbot-quote-form form-inline pushbot-mode-${search.mode.label}`}\n        >\n          <select\n            className=\"pushbot-quote-mode form-control\"\n            value={search.mode.label}\n            onChange={this.didChangeMode}\n          >\n            {modes.map((mode, index) => {\n              return (\n                <option key={index} value={mode.label}>\n                  {mode.label}\n                </option>\n              );\n            })}\n          </select>\n          {showPeople && (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"pushbot-quote-people\"\n              placeholder=\"fenris, iguanaditty\"\n              value={search.people}\n              onChange={this.didChangePeople}\n            />\n          )}\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"pushbot-quote-query\"\n            placeholder='\"query\"'\n            value={search.query}\n            onChange={this.didChangeQuery}\n          />\n        </form>\n        {this.renderResult(search)}\n      </div>\n    );\n  }\n\n  renderResult(search: Search) {\n    const people = search.people\n      .split(/[,+;]|\\s/)\n      .map(person => person.replace(/^@/, \"\"))\n      .map(person => person.trim())\n      .filter(person => person.length > 0);\n\n    const noQuery = search.mode.when({\n      containing: () => search.query.length === 0,\n      by: () => people.length === 0,\n      about: () => people.length === 0,\n    });\n\n    if (noQuery) {\n      return <RandomQuote />;\n    } else {\n      return (\n        <QuotePage mode={search.mode} people={people} query={search.query} />\n      );\n    }\n  }\n\n  didChangeMode = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const mode = modes.find(mode => mode.label === event.target.value);\n    this.writeSearch({mode});\n  };\n\n  didChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.writeSearch({query: event.target.value});\n  };\n\n  didChangePeople = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.writeSearch({people: event.target.value});\n  };\n}\n","import React, {Component} from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\ninterface FeedFormProps {\n  ready: boolean;\n  feedURL: string;\n}\n\ninterface FeedFormState {\n  copied: boolean;\n}\n\nexport class FeedForm extends Component<FeedFormProps, FeedFormState> {\n  state = {\n    copied: false,\n  };\n\n  render() {\n    const btnClass = this.state.copied\n      ? \"btn btn-success\"\n      : \"btn btn-secondary\";\n    const btnMessage = this.state.copied ? \"Copied\" : \"Copy\";\n\n    return (\n      <p className=\"form-inline\">\n        <input\n          type=\"text\"\n          id=\"pushbot-events-feedurl\"\n          className=\"form-control\"\n          value={this.props.feedURL}\n          readOnly\n        />\n        <CopyToClipboard\n          text={this.props.feedURL}\n          onCopy={() => this.setState({copied: true})}\n        >\n          <button className={btnClass} disabled={!this.props.ready}>\n            {btnMessage}\n          </button>\n        </CopyToClipboard>\n      </p>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {FeedForm} from \"./FeedForm\";\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\n\nimport {EventsQuery} from \"../__generated__/EventsQuery.graphql\";\n\nimport \"./Events.css\";\n\nexport class Events extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query EventsQuery {\n        calendarURL\n      }\n    `;\n\n    return (\n      <QueryRenderer<EventsQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = (result: QueryResult<EventsQuery>) => {\n    return (\n      <div>\n        <h3>Goings On and Happenings</h3>\n        {this.renderResultBody(result)}\n      </div>\n    );\n  };\n\n  renderResultBody({error, props}: QueryResult<EventsQuery>) {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    const ready = Boolean(props);\n    const feedURL = props ? props.calendarURL : \"...\";\n\n    return (\n      <div>\n        <p>\n          Keep up with #~s events planned in the <code>#events</code> channel\n          with your own, personal iCal feed.\n        </p>\n        <FeedForm ready={ready} feedURL={feedURL} />\n        <p>\n          Subscribe to this URL with any compatible calendar software, including{\" \"}\n          <a\n            href=\"https://calendar.google.com/calendar/r/settings/addbyurl\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Google calendar\n          </a>\n          .\n        </p>\n      </div>\n    );\n  }\n}\n","import {QueryResult} from \"../common/Transport\";\n\nimport {\n  RecentChannelQuery as ORecentChannelQuery,\n  RecentChannelQueryVariables as ORecentChannelQueryVariables,\n  RecentChannelQueryResponse as ORecentChannelQueryResponse,\n} from \"../__generated__/RecentChannelQuery.graphql\";\n\nimport {\n  RecentHistoryQuery as ORecentHistoryQuery,\n  RecentHistoryQueryVariables as ORecentHistoryQueryVariables,\n  RecentHistoryQueryResponse as ORecentHistoryQueryResponse,\n} from \"../__generated__/RecentHistoryQuery.graphql\";\n\nexport type RecentChannelQuery = ORecentChannelQuery;\nexport type RecentChannelQueryVariables = ORecentChannelQueryVariables;\nexport type RecentChannelQueryResponse = ORecentChannelQueryResponse;\nexport type RecentChannelResult = QueryResult<RecentChannelQuery>;\n\nexport type RecentHistoryQuery = ORecentHistoryQuery;\nexport type RecentHistoryQueryVariables = ORecentHistoryQueryVariables;\nexport type RecentHistoryQueryResponse = ORecentHistoryQueryResponse;\nexport type RecentHistoryResult = QueryResult<RecentHistoryQuery>;\n\nexport type ILine = NonNullable<\n  RecentHistoryQueryResponse[\"cache\"][\"linesForChannel\"]\n>[0];\n\nexport const ALL = Symbol(\"all\");\n\nexport type IChange = ILine | typeof ALL;\n\nexport interface IDisposable {\n  dispose(): void;\n}\n","import {IChange, ILine, IDisposable, ALL} from \"./queryTypes\";\n\nexport class Selection {\n  public isSelecting: boolean;\n  private ids: Set<string>;\n  private subs: ((arg: IChange) => any)[];\n\n  constructor() {\n    this.ids = new Set();\n    this.isSelecting = false;\n    this.subs = [];\n  }\n\n  onDidChange(cb: (arg: IChange) => any): IDisposable {\n    this.subs.push(cb);\n    return {\n      dispose: () => {\n        const index = this.subs.indexOf(cb);\n        this.subs.splice(index, 1);\n      },\n    };\n  }\n\n  didChange(payload: IChange) {\n    for (const sub of this.subs) {\n      sub(payload);\n    }\n  }\n\n  isSelected(line: ILine): boolean {\n    return this.ids.has(line.id!);\n  }\n\n  select(line: ILine): boolean {\n    const wasSelected = this.ids.has(line.id!);\n    this.ids.add(line.id!);\n    if (!wasSelected) this.didChange(line);\n    return !wasSelected;\n  }\n\n  startSelecting() {\n    this.isSelecting = true;\n  }\n\n  stopSelecting() {\n    this.isSelecting = false;\n  }\n\n  toggle(line: ILine) {\n    if (!this.ids.delete(line.id!)) {\n      this.ids.add(line.id!);\n    }\n    this.didChange(line);\n  }\n\n  clear() {\n    this.ids.clear();\n    this.didChange(ALL);\n  }\n\n  getLineIDs(): string[] {\n    return Array.from(this.ids);\n  }\n\n  isEmpty(): boolean {\n    return this.ids.size === 0;\n  }\n\n  describe(): string {\n    if (this.ids.size === 0) {\n      return \"nothing selected\";\n    } else if (this.ids.size === 1) {\n      return \"1 line selected\";\n    } else {\n      return `${this.ids.size} lines selected`;\n    }\n  }\n}\n","import React, {Component} from \"react\";\nimport moment from \"moment\";\n\nimport {ILine, IDisposable, ALL} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\n\ninterface LineProps {\n  previous?: ILine;\n  line: ILine;\n  selection: Selection;\n}\n\nexport class Line extends Component<LineProps> {\n  private sub?: IDisposable;\n\n  componentDidMount() {\n    this.sub = this.props.selection.onDidChange(kind => {\n      if (kind === ALL) this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.sub && this.sub.dispose();\n  }\n\n  render() {\n    const {line, previous} = this.props;\n    const ts = moment(parseInt(line.timestamp));\n    const sameSpeaker = previous && previous.speaker!.id === line.speaker!.id;\n\n    const lineClasses = [\"pushbot-line\"];\n    if (this.props.selection.isSelected(line))\n      lineClasses.push(\"pushbot-line-selected\");\n\n    let speakerBanner = null;\n    if (!sameSpeaker) {\n      speakerBanner = (\n        <div className=\"pushbot-speaker-banner\">\n          <span className=\"pushbot-line-avatar\">\n            <img src={line.speaker!.avatar!.image32!} alt=\"\" />\n          </span>\n          <span className=\"pushbot-line-name\">{line.speaker!.name}</span>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className={lineClasses.join(\" \")}\n        onMouseDown={this.didMouseDown}\n        onMouseMove={this.didMouseMove}\n      >\n        {speakerBanner}\n        <span className=\"pushbot-line-timestamp\">{ts.format(\"h:mm:ss\")}</span>\n        <span className=\"pushbot-line-text\">{line.text}</span>\n      </div>\n    );\n  }\n\n  didMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (event.button !== 0) return;\n\n    event.preventDefault();\n    this.props.selection.toggle(this.props.line);\n    this.props.selection.startSelecting();\n    this.forceUpdate();\n  };\n\n  didMouseMove = (event: React.MouseEvent) => {\n    if (!this.props.selection.isSelecting) return;\n\n    event.preventDefault();\n    if (this.props.selection.select(this.props.line)) {\n      this.forceUpdate();\n    }\n  };\n}\n","import React, {Component} from \"react\";\n\nimport {ILine} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {Line} from \"./Line\";\n\ninterface HistoryProps {\n  lines: ReadonlyArray<ILine> | null;\n  selection: Selection;\n}\n\nexport class History extends Component<HistoryProps> {\n  private bottom?: HTMLElement | null;\n\n  componentDidMount() {\n    window.addEventListener(\"mouseup\", this.didMouseUp);\n\n    this.bottom && this.bottom.scrollIntoView();\n  }\n\n  componentDidUpdate() {\n    this.bottom && this.bottom.scrollIntoView();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\", this.didMouseUp);\n  }\n\n  render() {\n    if (this.props.lines === null) {\n      return this.renderLoading();\n    } else {\n      return this.renderLines();\n    }\n  }\n\n  renderLoading() {\n    return (\n      <div className=\"pushbot-history border pushbot-loading\">\n        <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n        loading\n      </div>\n    );\n  }\n\n  renderLines() {\n    return (\n      <div\n        className=\"pushbot-history border pushbot-history-loaded\"\n        onMouseOut={this.didMouseOut}\n      >\n        {this.props.lines!.map((line, i) => {\n          return (\n            <Line\n              key={line.id!}\n              line={line}\n              previous={this.props.lines![i - 1]}\n              selection={this.props.selection}\n            />\n          );\n        })}\n        <div\n          ref={element => {\n            this.bottom = element;\n          }}\n        />\n      </div>\n    );\n  }\n\n  didMouseUp = () => {\n    this.props.selection.stopSelecting();\n  };\n\n  didMouseOut = () => {\n    this.props.selection.stopSelecting();\n  };\n}\n","import React, {Component} from \"react\";\nimport {Environment, commitMutation} from \"relay-runtime\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {IDisposable} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {Role} from \"../common/Role\";\n\ninterface ActionBarProps {\n  environment: Environment;\n  channel: string;\n  selection: Selection;\n}\n\nexport class ActionBar extends Component<ActionBarProps> {\n  private sub?: IDisposable;\n  private didSubmitQuote: () => void;\n  private didSubmitLim: () => void;\n\n  constructor(props: ActionBarProps) {\n    super(props);\n\n    this.didSubmitQuote = this.submit.bind(this, \"quote\");\n    this.didSubmitLim = this.submit.bind(this, \"lim\");\n  }\n\n  componentDidMount() {\n    this.sub = this.props.selection.onDidChange(() => this.forceUpdate());\n  }\n\n  componentWillUnmount() {\n    this.sub && this.sub.dispose();\n  }\n\n  render() {\n    const textClassNames = [\"text-muted\"];\n    let clearBtn = null;\n    let disable = true;\n    if (this.props.selection.isEmpty()) {\n      textClassNames.push(\"pushbot-empty\");\n    } else {\n      disable = false;\n      clearBtn = (\n        <button className=\"btn btn-link\" onClick={this.didClear}>\n          clear\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"pushbot-recent-actions\">\n        <p className={textClassNames.join(\" \")}>\n          {this.props.selection.describe()}\n          {clearBtn}\n        </p>\n        <div className=\"btn-group pushbot-recent-actions\">\n          <Role name=\"quote pontiff\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={disable}\n              onClick={this.didSubmitQuote}\n            >\n              Quote\n            </button>\n          </Role>\n          <Role name=\"poet laureate\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={disable}\n              onClick={this.didSubmitLim}\n            >\n              Limerick\n            </button>\n          </Role>\n        </div>\n      </div>\n    );\n  }\n\n  didClear = () => {\n    this.props.selection.clear();\n  };\n\n  submit(set: string) {\n    if (!this.props.channel) return;\n\n    const mutation = graphql`\n      mutation ActionBarSubmitMutation(\n        $set: String!\n        $channel: String!\n        $lines: [ID!]!\n      ) {\n        createDocument(set: $set, channel: $channel, lines: $lines) {\n          id\n        }\n      }\n    `;\n\n    const variables = {\n      set,\n      channel: this.props.channel,\n      lines: this.props.selection.getLineIDs(),\n    };\n\n    commitMutation(this.props.environment, {\n      mutation,\n      variables,\n      onCompleted: () => this.props.selection.clear(),\n    });\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {Environment} from \"relay-runtime\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {\n  ILine,\n  RecentChannelQuery,\n  RecentChannelResult,\n  RecentHistoryQuery,\n  RecentHistoryResult,\n} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {History} from \"./History\";\nimport {ActionBar} from \"./ActionBar\";\n\nimport \"./Recent.css\";\n\ninterface RecentState {\n  environment: Environment;\n  currentChannel: string | null;\n  selection: Selection;\n}\n\nexport class Recent extends Component<{}, RecentState> {\n  private knownChannels: ReadonlyArray<string> | null;\n  private history: ReadonlyArray<ILine> | null;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.knownChannels = null;\n    this.history = null;\n\n    this.state = {\n      environment: getEnvironment(),\n      currentChannel: null,\n      selection: new Selection(),\n    };\n    this.didChangeChannel = this.didChangeChannel.bind(this);\n  }\n\n  render() {\n    if (this.knownChannels === null) {\n      return this.renderChannelQuery();\n    }\n\n    return this.renderHistoryQuery();\n  }\n\n  renderError(error: Error) {\n    return (\n      <div className=\"pushbot-recent pushbot-recent-error\">\n        <h3>Recent Chatter</h3>\n        <form className=\"pushbot-recent-form form-inline\">\n          <select\n            className=\"pushbot-recent-channel form-control\"\n            value=\"...\"\n            disabled\n          >\n            <option value=\"...\">...</option>\n          </select>\n        </form>\n        <div className=\"pushbot-error-message\">{error.message}</div>\n      </div>\n    );\n  }\n\n  renderChannelQuery() {\n    const query = graphql`\n      query RecentChannelQuery {\n        cache {\n          knownChannels\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<RecentChannelQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={{}}\n        render={this.renderChannelResult}\n      />\n    );\n  }\n\n  renderChannelResult = ({error, props}: RecentChannelResult) => {\n    if (error) {\n      return this.renderError(error);\n    }\n\n    const channelNames = props ? props.cache.knownChannels : this.knownChannels;\n    return this.renderCurrent(channelNames || [], null);\n  };\n\n  renderHistoryQuery() {\n    const query = graphql`\n      query RecentHistoryQuery($channel: String!) {\n        cache {\n          knownChannels\n          linesForChannel(channel: $channel) {\n            id\n            speaker {\n              id\n              name\n              avatar {\n                image32\n              }\n            }\n            timestamp\n            text\n          }\n        }\n      }\n    `;\n\n    const variables = {\n      channel: this.state.currentChannel || \"\",\n    };\n\n    return (\n      <QueryRenderer<RecentHistoryQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={variables}\n        render={this.renderHistoryResult}\n      />\n    );\n  }\n\n  renderHistoryResult = ({error, props}: RecentHistoryResult) => {\n    if (error) {\n      return this.renderError(error);\n    }\n\n    let channelNames = this.knownChannels;\n    if (props) {\n      channelNames = props.cache.knownChannels.slice().sort();\n    }\n    const history = props ? props.cache.linesForChannel : this.history;\n\n    return this.renderCurrent(channelNames, history);\n  };\n\n  renderCurrent(\n    channelNames: ReadonlyArray<string> | null,\n    history: ReadonlyArray<ILine> | null\n  ) {\n    if (channelNames) {\n      if (!this.state.currentChannel && channelNames.length > 0) {\n        const currentChannel = channelNames.includes(\"general\") ? \"general\" : channelNames[0];\n        setTimeout(() => this.setState({currentChannel}), 0);\n      }\n      this.knownChannels = channelNames;\n    }\n\n    if (history) {\n      this.history = history;\n    }\n\n    const displayChannelNames = channelNames || [\"...\"];\n    const displayChannel = this.state.currentChannel || \"...\";\n\n    return (\n      <div className=\"pushbot-recent\">\n        <h3>Recent Chatter</h3>\n        <form className=\"pushbot-recent-form form-inline\">\n          <label className=\"mr-md-3\" htmlFor=\"pushbot-recent-channel\">\n            Channel\n          </label>\n          <div className=\"input-group\">\n            <select\n              className=\"pushbot-recent-channel form-control input-group-prepend\"\n              id=\"pushbot-recent-channel\"\n              value={displayChannel}\n              disabled={!channelNames}\n              onChange={this.didChangeChannel}\n            >\n              {displayChannelNames.map(name => {\n                return (\n                  <option key={name} value={name}>\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n            <button\n              className=\"btn btn-secondary pushbot-recent-refresh\"\n              onClick={this.refresh}\n            >\n              <i className=\"fas fa-sync\" aria-hidden /> Refresh\n            </button>\n          </div>\n        </form>\n        <History lines={history} selection={this.state.selection} />\n        <ActionBar\n          environment={this.state.environment}\n          channel={this.state.currentChannel || \"\"}\n          selection={this.state.selection}\n        />\n      </div>\n    );\n  }\n\n  didChangeChannel = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.history = null;\n    this.state.selection.clear();\n    this.setState({currentChannel: event.target.value});\n  };\n\n  refresh = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    this.setState({environment: getEnvironment()});\n  };\n}\n","import React from \"react\";\n\ninterface Props {\n  query: string;\n  onChange: (q: string) => void;\n}\n\nexport function RemForm(props: Props) {\n  function queryChange(evt: React.ChangeEvent<HTMLInputElement>) {\n    props.onChange(evt.target.value);\n  }\n\n  return (\n    <form className=\"form-inline mt-2 mb-3\">\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">containing</div>\n        </div>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          value={props.query}\n          onChange={queryChange}\n        />\n      </div>\n    </form>\n  );\n}\n","import React, {useState, useContext, useEffect} from \"react\";\nimport cx from \"classnames\";\n\nimport {isNetworkError, isGraphQLError} from \"./errors\";\n\nexport type Severity = \"info\" | \"success\" | \"danger\";\n\ninterface Notification {\n  id: number;\n  severity: Severity;\n  body: React.ReactNode;\n}\n\nclass NotificationHub {\n  private nextID: number;\n  private notifications: Notification[];\n  private subscribers: ((ns: Notification[]) => any)[];\n\n  constructor() {\n    this.nextID = 0;\n    this.notifications = [];\n    this.subscribers = [];\n  }\n\n  deleteNotification(n: Notification) {\n    this.notifications = this.notifications.filter(each => each !== n);\n    this.notify();\n  }\n\n  addInfo(body: React.ReactNode) {\n    this.add(\"info\", body);\n  }\n\n  addSuccess(body: React.ReactNode) {\n    this.add(\"success\", body);\n  }\n\n  addSuccessMessage(message: string) {\n    this.addSuccess(<p>{message}</p>);\n  }\n\n  addDanger(body: React.ReactNode) {\n    this.add(\"danger\", body);\n  }\n\n  addError(err: Error) {\n    if (isNetworkError(err)) {\n      this.addDanger(\n        <>\n          <h5>Error: {err.message}</h5>\n          <p>\n            {err.requestURL} {err.responseStatus}\n          </p>\n          <pre>{err.responseText}</pre>\n        </>\n      );\n      return;\n    }\n\n    if (isGraphQLError(err)) {\n      this.addDanger(\n        <>\n          <h5>Error: {err.message}</h5>\n          {err.errors.map((each, i) => (\n            <p key={i}>{each}</p>\n          ))}\n        </>\n      );\n      return;\n    }\n\n    this.addDanger(\n      <>\n        <h5>Error: {err.message}</h5>\n        <pre className=\"bg-light px-2 py-1 mt-4\">{err.stack}</pre>\n      </>\n    );\n  }\n\n  onNotification(callback: (ns: Notification[]) => any) {\n    this.subscribers.push(callback);\n    return () => {\n      this.subscribers = this.subscribers.filter(sub => sub === callback);\n    };\n  }\n\n  protected add(severity: Severity, body: React.ReactNode) {\n    const id = this.nextID;\n    this.nextID++;\n    this.notifications.push({id, severity, body});\n    this.notify();\n  }\n\n  protected notify() {\n    const current = [...this.notifications];\n    for (const subscriber of this.subscribers) {\n      subscriber(current);\n    }\n  }\n}\n\nclass DevNull extends NotificationHub {\n  protected add() {}\n\n  onNotification() {\n    return () => {};\n  }\n}\n\nconst nullHub = new DevNull();\n\nexport const NotificationContext = React.createContext<NotificationHub>(\n  nullHub\n);\n\nexport function NotificationsProvider(props: {children: React.ReactNode}) {\n  const [hub] = useState(() => new NotificationHub());\n\n  return (\n    <NotificationContext.Provider value={hub}>\n      {props.children}\n    </NotificationContext.Provider>\n  );\n}\n\nexport function NotificationsView() {\n  const hub = useContext(NotificationContext);\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n\n  useEffect(() => hub.onNotification(setNotifications), [hub]);\n\n  function makeCloser(n: Notification) {\n    return function(evt: React.MouseEvent<HTMLButtonElement>) {\n      evt.preventDefault();\n      hub.deleteNotification(n);\n    };\n  }\n\n  if (notifications.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"px-2 mt-2 mb-3\">\n      {notifications.map(n => (\n        <div key={n.id} className={cx(\"alert\", `alert-${n.severity}`, \"my-2\")}>\n          <button className=\"close\" onClick={makeCloser(n)}>\n            <i className=\"fa far fa-window-close\" />\n          </button>\n          {n.body}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Loading() {\n  return (\n    <div className=\"row mt-md-5 pushbot-loading\">\n      <p className=\"mx-auto\">\n        <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n        loading\n      </p>\n    </div>\n  );\n}\n","import React, {useContext} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {Link} from \"react-router-dom\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {NotificationContext} from \"../common/Notifications\";\nimport {Loading} from \"../common/Loading\";\nimport {RandomMemoryListQuery, RandomMemoryListResult} from \"./memoryTypes\";\n\nexport function RandomMemoryList() {\n  const env = getEnvironment();\n\n  const query = graphql`\n    query RandomMemoryListQuery {\n      rem {\n        search(first: 10, orderField: RANDOM) {\n          edges {\n            cursor\n            node {\n              key\n            }\n          }\n        }\n      }\n    }\n  `;\n\n  return (\n    <QueryRenderer<RandomMemoryListQuery>\n      environment={env}\n      query={query}\n      variables={{}}\n      render={result => <RandomMemoryResults {...result} />}\n    />\n  );\n}\n\nfunction RandomMemoryResults({error, props, retry}: RandomMemoryListResult) {\n  const hub = useContext(NotificationContext);\n\n  if (error !== null) {\n    hub.addError(error);\n    return <div className=\"alert alert-danger\">Unable to perform query.</div>;\n  }\n\n  if (props === null) {\n    return <Loading />;\n  }\n\n  function another() {\n    return retry && retry();\n  }\n\n  const results = props.rem.search.edges.map(edge => (\n    <li key={edge.cursor} className=\"list-group-item\">\n      <Link to={`/rem/${encodeURIComponent(edge.node.key)}`}>\n        {edge.node.key}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div className=\"card card-light\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">\n          Type above to search known memory keys. Here's a random sample of\n          what's available:\n        </p>\n        <p className=\"card-text mt-1 mb-3\">\n          <button className=\"btn btn-secondary\" onClick={another}>\n            <i className=\"fas fa-sync mr-2\" aria-hidden=\"true\" />\n            Another\n          </button>\n        </p>\n        <ul className=\"card-text list-group\">{results}</ul>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {createPaginationContainer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {Link} from \"react-router-dom\";\n\nimport {MatchingMemoryPageRem} from \"./memoryTypes\";\n\ninterface Props {\n  relay: {\n    hasMore(): boolean;\n    isLoading(): boolean;\n    loadMore(): any;\n  };\n  rem: MatchingMemoryPageRem;\n}\n\nfunction MemoryPageView(props: Props) {\n  function loadNextPage() {\n    if (props.relay.hasMore() && !props.relay.isLoading()) {\n      return;\n    }\n  }\n\n  const pageSize = props.rem.search.edges.length;\n  const count = props.rem.search.pageInfo.count;\n\n  return (\n    <>\n      <p className=\"my-2\">\n        Showing {pageSize} result{pageSize === 1 ? \"\" : \"s\"}\n        {count > pageSize ? `out of ${count}` : \"\"}.\n      </p>\n      <ul className=\"list-group\">\n        {props.rem.search.edges.map(edge => (\n          <li key={edge.cursor} className=\"list-group-item\">\n            <Link to={`/rem/${encodeURIComponent(edge.node.key)}`}>\n              {edge.node.key}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <div className=\"my-2\">\n        {props.relay.hasMore() && (\n          <button className=\"btn btn-info\" onClick={loadNextPage}>\n            Next page\n          </button>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport const MatchingMemoryPage = createPaginationContainer(\n  MemoryPageView,\n  {\n    rem: graphql`\n      fragment MatchingMemoryPage_rem on Rem\n        @argumentDefinitions(\n          pattern: {type: \"String!\"}\n          count: {type: \"Int!\"}\n          cursor: {type: \"String\"}\n        ) {\n        search(query: $pattern, first: $count, after: $cursor)\n          @connection(key: \"MatchingMemoryPage_search\") {\n          pageInfo {\n            count\n            hasPreviousPage\n            hasNextPage\n          }\n\n          edges {\n            cursor\n            node {\n              key\n            }\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.rem && props.rem.search;\n    },\n    getVariables(_props, {count, cursor}, fragmentVariables) {\n      return {\n        pattern: fragmentVariables.pattern,\n        count,\n        cursor,\n      };\n    },\n    query: graphql`\n      query MatchingMemoryPageQuery(\n        $pattern: String!\n        $count: Int!\n        $cursor: String\n      ) {\n        rem {\n          ...MatchingMemoryPage_rem\n            @arguments(pattern: $pattern, count: $count, cursor: $cursor)\n        }\n      }\n    `,\n  }\n);\n","import React, {useContext} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {NotificationContext} from \"../common/Notifications\";\nimport {Loading} from \"../common/Loading\";\nimport {MatchingMemoryListQuery} from \"../__generated__/MatchingMemoryListQuery.graphql\";\nimport {MatchingMemoryPage} from \"./MatchingMemoryPage\";\n\ntype Result = QueryResult<MatchingMemoryListQuery>;\n\ninterface Props {\n  query: string;\n}\n\nexport function MatchingMemoryList(props: Props) {\n  const env = getEnvironment();\n\n  const query = graphql`\n    query MatchingMemoryListQuery($pattern: String!) {\n      rem {\n        ...MatchingMemoryPage_rem @arguments(pattern: $pattern, count: 10)\n      }\n    }\n  `;\n\n  const variables = {\n    pattern: props.query,\n  };\n\n  return (\n    <QueryRenderer<MatchingMemoryListQuery>\n      environment={env}\n      query={query}\n      variables={variables}\n      render={results => <MatchingMemoryResults {...results} />}\n    />\n  );\n}\n\nfunction MatchingMemoryResults(results: Result) {\n  const hub = useContext(NotificationContext);\n\n  if (results.error) {\n    hub.addError(results.error);\n    return <div className=\"alert alert-danger\">Unable to perform query.</div>;\n  }\n\n  if (!results.props) {\n    return <Loading />;\n  }\n\n  return <MatchingMemoryPage rem={results.props.rem} />;\n}\n","import React from \"react\";\n\nimport {useQueryParameter} from \"../common/urlSearch\";\nimport {RemForm} from \"./RemForm\";\nimport {RandomMemoryList} from \"./RandomMemoryList\";\nimport {MatchingMemoryList} from \"./MatchingMemoryList\";\n\nexport function Rem() {\n  const [query, setQuery] = useQueryParameter(\"q\");\n\n  return (\n    <>\n      <h3>rem</h3>\n      <RemForm query={query} onChange={setQuery} />\n      {query === \"\" ? (\n        <RandomMemoryList />\n      ) : (\n        <MatchingMemoryList query={query} />\n      )}\n    </>\n  );\n}\n","import {useState} from \"react\";\n\nexport function useQueryParameter(\n  parameterName: string\n): [string, (v: string) => void] {\n  const [, setLatch] = useState(0);\n\n  const params = new URLSearchParams(window.location.search);\n  const current = params.get(parameterName) || \"\";\n\n  function setNext(next: string) {\n    const nextParams = new URLSearchParams();\n    if (next.length > 0) {\n      nextParams.set(parameterName, next);\n    }\n\n    const nextSearch = nextParams.toString();\n    const nextURL =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname +\n      (nextSearch.length > 0 ? \"?\" + nextSearch : \"\") +\n      window.location.hash;\n\n    if (window.history.replaceState) {\n      window.history.replaceState({}, \"\", nextURL);\n    } else {\n      window.location.href = nextURL;\n    }\n    setLatch(latch => latch + 1);\n  }\n\n  return [current, setNext];\n}\n","import React, {useContext} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {Link} from \"react-router-dom\";\nimport {TwitterTweetEmbed} from \"react-twitter-embed\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {NotificationContext} from \"../common/Notifications\";\nimport {Loading} from \"../common/Loading\";\nimport {RemEntryQuery} from \"../__generated__/RemEntryQuery.graphql\";\n\ntype RemEntryQueryResult = QueryResult<RemEntryQuery>;\n\ninterface Props {\n  match: {\n    params: {\n      key: string;\n    };\n  };\n}\n\nexport function RemEntry(props: Props) {\n  const env = getEnvironment();\n\n  const query = graphql`\n    query RemEntryQuery($key: String!) {\n      rem {\n        get(key: $key) {\n          key\n          value\n        }\n      }\n    }\n  `;\n\n  const variables = {key: decodeURIComponent(props.match.params.key)};\n\n  return (\n    <QueryRenderer<RemEntryQuery>\n      environment={env}\n      query={query}\n      variables={variables}\n      render={results => <RemEntryWrapper {...results} />}\n    />\n  );\n}\n\nfunction RemEntryWrapper(results: RemEntryQueryResult) {\n  return (\n    <>\n      <h3>rem</h3>\n      <p className=\"my-2\">\n        <Link to=\"/rem\">\n          <i className=\"fas fa-angle-double-left mr-2\" />\n          rem search\n        </Link>\n      </p>\n      <RemEntryResult {...results} />\n    </>\n  );\n}\n\nfunction RemEntryResult(results: RemEntryQueryResult) {\n  const hub = useContext(NotificationContext);\n\n  if (results.error) {\n    hub.addError(results.error);\n    return <div className=\"alert alert-danger\">Unable to perform query.</div>;\n  }\n\n  if (!results.props) {\n    return <Loading />;\n  }\n\n  const {get} = results.props.rem;\n  if (!get) {\n    return <div className=\"alert alert-danger\">Key not found.</div>;\n  }\n\n  const {key, value} = get;\n\n  const tweet = /^http(?:s)?:\\/\\/twitter\\.com\\/[^/]+\\/status\\/(\\d+)/.exec(\n    value\n  );\n  if (tweet) {\n    return (\n      <div className=\"container-fluid\">\n        <h2 className=\"my-5 text-center\">{key}</h2>\n        <div className=\"d-flex justify-content-center\">\n          <TwitterTweetEmbed tweetId={tweet[1]} />\n        </div>\n      </div>\n    );\n  }\n\n  if (/^http(?:s)?:\\/\\//.test(value)) {\n    return (\n      <div className=\"container-fluid\">\n        <h2 className=\"my-5 text-center\">{key}</h2>\n        <img\n          className=\"d-block mx-auto\"\n          style={{maxWidth: \"100%\"}}\n          src={value}\n          alt=\"\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"row my-5\">\n      <h2 className=\"col-3 text-muted text-right\">{key}</h2>\n      <h2 className=\"col-9 font-weight-bolder\">{value}</h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {createNetworkError} from \"./errors\";\n\nconst COORDINATOR_URL = `${process.env.REACT_APP_AZ_COORDINATOR_URL}`;\n\nexport type ServiceType = \"simple\" | \"oneshot\" | \"timer\" | \"self\";\n\nexport interface IContainer {\n  name?: string;\n  image_name: string;\n  image_tag: string;\n}\n\nexport interface IEnvMap {\n  [varName: string]: string;\n}\n\nexport interface IPortMap {\n  [hostPort: string]: number;\n}\n\nexport interface IVolumeMap {\n  [hostPath: string]: string;\n}\n\ninterface IDesiredUnitCommon {\n  type: ServiceType;\n  secrets: string[];\n  env: IEnvMap;\n  ports: IPortMap;\n  volumes: IVolumeMap;\n  container?: IContainer;\n  calendar?: string;\n}\n\nexport interface IDesiredUnit extends IDesiredUnitCommon {\n  id: number;\n  path: string;\n}\n\nexport interface IDesiredUnitCreate extends IDesiredUnitCommon {\n  path: string;\n}\n\nexport interface IDesiredUnitUpdate extends IDesiredUnitCommon {}\n\nexport interface IDesiredState {\n  units: IDesiredUnit[];\n}\n\nexport interface IActualUnit {\n  path: string;\n}\n\nexport interface IActualState {\n  units: IActualUnit[];\n}\n\nexport interface ISecretsCreate {\n  [secretName: string]: string;\n}\n\nexport type ISecretsDelete = string[];\n\nexport type ISecrets = string[];\n\nexport interface IDelta {\n  units_to_add: IDesiredUnit[];\n  units_to_change: IDesiredUnit[];\n  units_to_restart: IDesiredUnit[];\n  units_to_remove: IActualUnit[];\n  files_to_write: string[];\n}\n\nexport interface ISyncReport {\n  timestamp: number;\n  elapsed: number;\n  message: string;\n  fields: {[fieldName: string]: any};\n}\n\nexport interface ISync {\n  in_progress: boolean;\n  reports: ISyncReport[];\n  errors: string[];\n  delta?: IDelta;\n}\n\nexport class Coordinator {\n  constructor(private readonly token: string) {}\n\n  async getDesiredState(): Promise<IDesiredState> {\n    return this.requestJSON<IDesiredState>(\"GET\", \"/desired\");\n  }\n\n  async createDesiredUnit(unit: IDesiredUnitCreate): Promise<IDesiredUnit> {\n    return this.requestJSON<IDesiredUnit>(\"POST\", \"/desired\", unit);\n  }\n\n  async updateDesiredUnit(\n    id: number,\n    unit: IDesiredUnitUpdate\n  ): Promise<IDesiredUnit> {\n    return this.requestJSON<IDesiredUnit>(\n      \"PUT\",\n      `/desired/${encodeURIComponent(id.toString())}`,\n      unit\n    );\n  }\n\n  async deleteDesiredUnit(id: number): Promise<void> {\n    await this.request(\n      \"DELETE\",\n      `/desired/${encodeURIComponent(id.toString())}`\n    );\n  }\n\n  async getActualUnits(): Promise<IActualState> {\n    return this.requestJSON<IActualState>(\"GET\", \"/actual\");\n  }\n\n  async getSecrets(): Promise<ISecrets> {\n    return this.requestJSON<ISecrets>(\"GET\", \"/secrets\");\n  }\n\n  async createSecrets(secrets: ISecretsCreate): Promise<void> {\n    await this.request(\"POST\", \"/secrets\", secrets);\n  }\n\n  async deleteSecrets(secretNames: ISecretsDelete): Promise<void> {\n    await this.request(\"DELETE\", \"/secrets\", secretNames);\n  }\n\n  async getDiff(): Promise<IDelta> {\n    return this.requestJSON<IDelta>(\"GET\", \"/diff\");\n  }\n\n  async getSync(): Promise<ISync> {\n    return this.requestJSON<ISync>(\"GET\", \"/sync\");\n  }\n\n  async createSync(): Promise<void> {\n    await this.request(\"POST\", \"/sync\");\n  }\n\n  isPresent(): boolean {\n    return true;\n  }\n\n  protected async request(\n    method: string,\n    subPath: string,\n    payload?: any\n  ): Promise<Response> {\n    const url = `${COORDINATOR_URL}${subPath}`;\n    const headers: HeadersInit = {\n      Authorization: `Basic ${btoa(\"token:\" + this.token)}`,\n    };\n\n    const options: RequestInit = {\n      method,\n      headers,\n      credentials: \"include\",\n    };\n\n    if (payload) {\n      headers[\"Content-Type\"] = \"application/json\";\n      options.body = JSON.stringify(payload);\n    }\n\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw await createNetworkError(\n        \"Unable to contact coordinator\",\n        url,\n        response\n      );\n    }\n    return response;\n  }\n\n  protected async requestJSON<R>(\n    method: string,\n    subPath: string,\n    payload?: any\n  ): Promise<R> {\n    const response = await this.request(method, subPath, payload);\n    return response.json() as any;\n  }\n}\n\nclass NullCoordinator extends Coordinator {\n  protected async request(): Promise<any> {\n    throw new Error(\"Coordinator is not available\");\n  }\n\n  isPresent(): boolean {\n    return false;\n  }\n}\n\nexport const nullCoordinator = new NullCoordinator(\"\");\n\nexport const CoordinatorContext = React.createContext<Coordinator>(\n  nullCoordinator\n);\n","import {useContext, useEffect, useState} from \"react\";\n\nimport {Coordinator, CoordinatorContext} from \"./coordinator\";\n\ninterface CoordinatorContainerProps<R> {\n  getter: (c: Coordinator) => Promise<R>;\n  nullValue: R;\n  children: (value: R, isLoading: boolean, refresh: () => void) => JSX.Element;\n}\n\nexport function CoordinatorContainer<R>(props: CoordinatorContainerProps<R>) {\n  const coordinator = useContext(CoordinatorContext);\n  const {getter} = props;\n  const [isLoading, setLoading] = useState(true);\n  const [value, setValue] = useState(props.nullValue);\n  const [latch, setLatch] = useState(0);\n\n  useEffect(() => {\n    let ignore = false;\n\n    (async function() {\n      setLoading(true);\n      const v = await getter(coordinator);\n\n      if (!ignore) {\n        setLoading(false);\n        setValue(v);\n      }\n    })();\n\n    return () => {\n      ignore = true;\n    };\n  }, [coordinator, getter, latch]);\n\n  function refresh() {\n    setLatch(current => current + 1);\n  }\n\n  return props.children(value, isLoading, refresh);\n}\n","import React from \"react\";\nimport * as path from \"path\";\n\ninterface Props {\n  path: string;\n}\n\nexport function ServicePath(props: Props) {\n  const dirname = path.dirname(props.path);\n  const basename = path.basename(props.path);\n\n  return (\n    <span className=\"text-monospace\">\n      <span className=\"text-muted\">\n        {dirname}\n        {path.sep}\n      </span>\n      <span className=\"font-weight-bold\">{basename}</span>\n    </span>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {IDesiredUnit, IPortMap} from \"../../common/coordinator\";\nimport {ServicePath} from \"./ServicePath\";\n\ninterface ServiceDisplayProps {\n  unit: IDesiredUnit;\n}\n\nfunction plural(count: number, noun: string) {\n  if (count === 1) {\n    return `${count} ${noun}`;\n  } else {\n    return `${count} ${noun}s`;\n  }\n}\n\nfunction ports(p: IPortMap) {\n  const keys = Object.keys(p);\n  if (keys.length === 0) {\n    return null;\n  }\n\n  const mappings: string[] = [];\n  for (const source of Object.keys(p)) {\n    const dest = p[source];\n    mappings.push(`${source} => ${dest}`);\n  }\n  return mappings.join(\", \");\n}\n\nexport function ServiceDisplay(props: ServiceDisplayProps) {\n  const {unit} = props;\n\n  return (\n    <li className=\"list-group-item px-4 rounded pushbot-serviceDisplay\">\n      <div className=\"float-right pushbot-serviceDisplay--controls\">\n        <Link\n          to={`/admin/services/${unit.id}`}\n          className=\"btn btn-secondary d-flex align-items-baseline\"\n        >\n          <i className=\"fas fa-cog mr-2\" />\n          edit\n        </Link>\n      </div>\n      <ServicePath path={unit.path} />\n      <p>\n        type <span className=\"font-weight-bold\">{unit.type}</span>\n        {\" | \"}\n        {plural(Object.keys(unit.env).length, \" environment variable\")}\n        {\" | \"}\n        {plural(unit.secrets.length, \" secret\")}\n        {\" | \"}\n        {plural(Object.keys(unit.volumes).length, \"volume\")} {ports(unit.ports)}\n      </p>\n    </li>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {IDesiredState} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {ServiceDisplay} from \"./ServiceDisplay\";\n\nimport \"./Services.css\";\n\nconst nullDesiredState: IDesiredState = {units: []};\n\nexport function Services() {\n  return (\n    <>\n      <h3>services</h3>\n      <CoordinatorContainer<IDesiredState>\n        getter={c => c.getDesiredState()}\n        nullValue={nullDesiredState}\n      >\n        {(state, isLoading, refresh) => {\n          const list = isLoading ? (\n            <Loading />\n          ) : (\n            state.units.map(unit => (\n              <ServiceDisplay unit={unit} key={unit.id} />\n            ))\n          );\n\n          return (\n            <>\n              <div className=\"my-3 d-flex justify-content-end\">\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={refresh}\n                  disabled={isLoading}\n                >\n                  <i className=\"fas fa-sync-alt mr-2\" />\n                  Refresh\n                </button>\n              </div>\n              {list}\n              <div className=\"my-3 d-flex justify-content-end\">\n                <Link className=\"btn btn-primary\" to=\"/admin/services/create\">\n                  <i className=\"fas fa-plus mr-2\" />\n                  Create\n                </Link>\n              </div>\n            </>\n          );\n        }}\n      </CoordinatorContainer>\n    </>\n  );\n}\n","import {useState} from \"react\";\n\nimport {\n  ServiceType as ValidServiceType,\n  IDesiredUnit,\n  IDesiredUnitUpdate,\n  IDesiredUnitCreate,\n  IEnvMap,\n  IPortMap,\n  IVolumeMap,\n  IContainer,\n} from \"../../common/coordinator\";\n\nexport interface ServiceType {\n  name: string;\n\n  valid: boolean;\n  hasAnyContainer: boolean;\n  hasContainerConfig: boolean;\n  hasContainerName: boolean;\n  hasEnvAndSecrets: boolean;\n  hasVolumes: boolean;\n  hasPorts: boolean;\n  hasSchedule: boolean;\n\n  ifInvalid<R>(cb: () => R): R | null;\n  ifAnyContainer<R>(cb: () => R): R | null;\n  ifContainerConfig<R>(cb: () => R): R | null;\n  ifContainerName<R>(cb: () => R): R | null;\n  ifEnvAndSecrets<R>(cb: () => R): R | null;\n  ifVolumes<R>(cb: () => R): R | null;\n  ifPorts<R>(cb: () => R): R | null;\n  ifSchedule<R>(cb: () => R): R | null;\n}\n\ninterface Spec {\n  isInvalid?: boolean;\n  hasContainerConfig?: boolean;\n  hasContainerName?: boolean;\n  hasEnvAndSecrets?: boolean;\n  hasVolumes?: boolean;\n  hasPorts?: boolean;\n  hasSchedule?: boolean;\n}\n\nconst typeMap: Map<string, ServiceType> = new Map();\n\nfunction makeServiceType(typeName: string, config: Spec): ServiceType {\n  function accept<R>(cb: () => R): R {\n    return cb();\n  }\n\n  function skip() {\n    return null;\n  }\n\n  const serviceType = {\n    name: typeName,\n\n    valid: !config.isInvalid,\n    hasAnyContainer: Boolean(\n      config.hasContainerName || config.hasContainerConfig\n    ),\n    hasContainerConfig: Boolean(config.hasContainerConfig),\n    hasContainerName: Boolean(config.hasContainerName),\n    hasEnvAndSecrets: Boolean(config.hasEnvAndSecrets),\n    hasVolumes: Boolean(config.hasVolumes),\n    hasPorts: Boolean(config.hasPorts),\n    hasSchedule: Boolean(config.hasSchedule),\n\n    ifInvalid: config.isInvalid ? accept : skip,\n    ifAnyContainer:\n      config.hasContainerName || config.hasContainerConfig ? accept : skip,\n    ifContainerConfig: config.hasContainerConfig ? accept : skip,\n    ifContainerName: config.hasContainerName ? accept : skip,\n    ifEnvAndSecrets: config.hasEnvAndSecrets ? accept : skip,\n    ifVolumes: config.hasVolumes ? accept : skip,\n    ifPorts: config.hasPorts ? accept : skip,\n    ifSchedule: config.hasSchedule ? accept : skip,\n  };\n\n  if (!config.isInvalid) {\n    typeMap.set(typeName, serviceType);\n  }\n  return serviceType;\n}\n\nexport const typeSimple = makeServiceType(\"simple\", {\n  hasContainerConfig: true,\n  hasContainerName: true,\n  hasEnvAndSecrets: true,\n  hasVolumes: true,\n  hasPorts: true,\n});\n\nexport const typeOneShot = makeServiceType(\"oneshot\", {\n  hasContainerConfig: true,\n  hasEnvAndSecrets: true,\n  hasVolumes: true,\n  hasPorts: true,\n});\n\nexport const typeTimer = makeServiceType(\"timer\", {\n  hasSchedule: true,\n});\n\nexport const typeSelf = makeServiceType(\"self\", {\n  hasEnvAndSecrets: true,\n});\n\nexport const serviceTypes = [typeSimple, typeOneShot, typeTimer, typeSelf];\n\nexport function getServiceType(typeName: string): ServiceType {\n  return typeMap.get(typeName) || makeServiceType(typeName, {isInvalid: true});\n}\n\nexport type UnitAction = \"create\" | \"update\";\n\nexport class DesiredUnitPayload {\n  private original?: IDesiredUnit;\n  path: string;\n  currentType: ServiceType;\n  secrets: string[];\n  env: IEnvMap;\n  ports: IPortMap;\n  volumes: IVolumeMap;\n  containerName: string;\n  containerImageName: string;\n  containerImageTag: string;\n  calendar: string;\n\n  constructor(original?: IDesiredUnit) {\n    this.original = original;\n    this.path = original ? original.path : \"/etc/systemd/system/az-\";\n    this.currentType = original ? getServiceType(original.type) : typeSimple;\n    this.secrets = original ? [...original.secrets] : [];\n    this.env = original ? {...original.env} : {};\n    this.ports = original ? {...original.ports} : {};\n    this.volumes = original ? {...original.volumes} : {};\n    this.containerName =\n      (original && original.container && original.container.name) || \"\";\n    this.containerImageName =\n      (original && original.container && original.container.image_name) ||\n      \"quay.io/smashwilson/az-\";\n    this.containerImageTag =\n      (original && original.container && original.container.image_tag) ||\n      \"latest\";\n\n    this.calendar =\n      original && original.calendar ? original.calendar : \"*-*-* 00:00:00\";\n  }\n\n  private get type(): ValidServiceType {\n    return this.currentType.name as ValidServiceType;\n  }\n\n  private commonValidation(): boolean {\n    function isEmpty(s: string): boolean {\n      return s.length === 0;\n    }\n\n    function hasEmptyKeyOrValue(obj: {[k: string]: string}): boolean {\n      const ks = Object.keys(obj);\n      return ks.some(k => isEmpty(k) || isEmpty(obj[k]));\n    }\n\n    if (!this.currentType.valid) {\n      return false;\n    }\n\n    if (this.currentType.hasContainerName && isEmpty(this.containerName)) {\n      return false;\n    }\n\n    if (this.currentType.hasContainerConfig) {\n      if (isEmpty(this.containerImageName)) {\n        return false;\n      }\n\n      if (isEmpty(this.containerImageTag)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      if (hasEmptyKeyOrValue(this.env)) {\n        return false;\n      }\n\n      if (this.secrets.some(isEmpty)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasPorts) {\n      function isInvalidPortNumber(p: number): boolean {\n        return isNaN(p) || p < 0 || p > 65536;\n      }\n\n      function isInvalidPort(s: string): boolean {\n        const parsed = parseInt(s, 10);\n        return isInvalidPortNumber(parsed);\n      }\n\n      const hostPorts = Object.keys(this.ports);\n      if (hostPorts.some(isInvalidPort)) {\n        return false;\n      }\n\n      if (hostPorts.some(hp => isInvalidPortNumber(this.ports[hp]))) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasVolumes) {\n      if (hasEmptyKeyOrValue(this.volumes)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasSchedule) {\n      if (isEmpty(this.calendar)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isCreate() {\n    return this.original === undefined;\n  }\n\n  isUpdate() {\n    return this.original !== undefined;\n  }\n\n  withAction<R>(cbs: {create: () => R; update: (id: number) => R}): R {\n    if (this.original) {\n      return cbs.update(this.original.id);\n    } else {\n      return cbs.create();\n    }\n  }\n\n  isModified(): boolean {\n    if (!this.original) {\n      return true;\n    }\n\n    if (this.currentType.name !== this.original.type) {\n      return true;\n    }\n\n    if (this.currentType.hasAnyContainer) {\n      if (!this.original.container) {\n        return true;\n      }\n\n      const container = this.original.container;\n\n      if (\n        this.currentType.hasContainerName &&\n        container.name !== this.containerName\n      ) {\n        return true;\n      }\n\n      if (container.image_name !== this.containerImageName) {\n        return true;\n      }\n\n      if (container.image_tag !== this.containerImageTag) {\n        return true;\n      }\n    }\n\n    function arrayChanged<K>(array: K[], original: K[]): boolean {\n      if (array.length !== original.length) {\n        return true;\n      }\n\n      const s = new Set(array);\n      return original.some(o => !s.has(o));\n    }\n\n    function objectChanged<K>(\n      obj: {[k: string]: K},\n      original: {[k: string]: K}\n    ): boolean {\n      const ks = Object.keys(obj);\n      return (\n        arrayChanged(ks, Object.keys(original)) &&\n        ks.some(k => obj[k] !== original[k])\n      );\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      if (arrayChanged(this.secrets, this.original.secrets)) {\n        return true;\n      }\n\n      if (objectChanged(this.env, this.original.env)) {\n        return true;\n      }\n    }\n\n    if (\n      this.currentType.hasPorts &&\n      objectChanged(this.ports, this.original.ports)\n    ) {\n      return true;\n    }\n\n    if (\n      this.currentType.hasVolumes &&\n      objectChanged(this.volumes, this.original.volumes)\n    ) {\n      return true;\n    }\n\n    if (\n      this.currentType.hasSchedule &&\n      this.calendar !== this.original.calendar\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isValid(): boolean {\n    if (!this.commonValidation()) {\n      return false;\n    }\n\n    return this.withAction({\n      create: () => this.path.length !== 0,\n      update: () => this.isModified(),\n    });\n  }\n\n  private getCommonPayload(): IDesiredUnitCreate | IDesiredUnitUpdate {\n    const payload: IDesiredUnitCreate | IDesiredUnitUpdate = {\n      type: this.type,\n      secrets: [],\n      env: {},\n      ports: {},\n      volumes: {},\n    };\n\n    if (this.currentType.hasContainerConfig) {\n      const container: IContainer = {\n        image_name: this.containerImageName,\n        image_tag: this.containerImageTag,\n      };\n      if (this.currentType.hasContainerName) {\n        container.name = this.containerName;\n      }\n      payload.container = container;\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      payload.env = this.env;\n      payload.secrets = this.secrets;\n    }\n\n    if (this.currentType.hasPorts) {\n      payload.ports = this.ports;\n    }\n\n    if (this.currentType.hasVolumes) {\n      payload.volumes = this.volumes;\n    }\n\n    if (this.currentType.hasSchedule) {\n      payload.calendar = this.calendar;\n    }\n\n    return payload;\n  }\n\n  withID<R>(fn: (id: number) => R): R | null {\n    if (this.original) {\n      return fn(this.original.id);\n    }\n\n    return null;\n  }\n\n  getCreatePayload(): IDesiredUnitCreate {\n    return {\n      ...this.getCommonPayload(),\n      path: this.path,\n    };\n  }\n\n  getUpdatePayload(): IDesiredUnitUpdate {\n    return this.getCommonPayload();\n  }\n}\n\nexport function usePayloadState<K extends keyof DesiredUnitPayload>(\n  payload: DesiredUnitPayload,\n  key: K\n): [DesiredUnitPayload[K], (v: DesiredUnitPayload[K]) => void] {\n  const [value, setValue] = useState<DesiredUnitPayload[K]>(payload[key]);\n\n  function setInPayload(v: DesiredUnitPayload[K]): void {\n    payload[key] = v;\n    setValue(v);\n  }\n\n  return [value, setInPayload];\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport cx from \"classnames\";\n\ninterface ToggleableInputProps {\n  value: string;\n  onChange: (newValue: string) => any;\n  controlID?: string;\n  controlClassName?: string;\n}\n\nexport function ToggleableInput(props: ToggleableInputProps) {\n  const [multiLineMode, setMode] = useState<boolean>(\n    props.value.indexOf(\"\\n\") !== -1\n  );\n  const controlRef = useRef<HTMLTextAreaElement & HTMLInputElement>(null);\n\n  const cn = cx(\"form-control\", props.controlClassName);\n\n  useEffect(() => {\n    if (controlRef.current) {\n      controlRef.current.focus();\n    }\n  }, [multiLineMode]);\n\n  if (multiLineMode) {\n    return (\n      <div className=\"input-group\">\n        <textarea\n          ref={controlRef}\n          id={props.controlID}\n          className={cn}\n          onChange={evt => {\n            evt.preventDefault();\n            props.onChange(evt.target.value);\n          }}\n        >\n          {props.value}\n        </textarea>\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-light\"\n            onClick={evt => {\n              evt.preventDefault();\n              setMode(false);\n            }}\n          >\n            <i className=\"fas fa-compress\" />\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"input-group\">\n        <input\n          ref={controlRef}\n          id={props.controlID}\n          type=\"text\"\n          className={cn}\n          onChange={evt => {\n            evt.preventDefault();\n            props.onChange(evt.target.value);\n          }}\n          value={props.value}\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-light\"\n            onClick={evt => {\n              evt.preventDefault();\n              setMode(true);\n            }}\n          >\n            <i className=\"fas fa-expand\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {ToggleableInput} from \"../../common/ToggleableInput\";\n\nlet envVarCounter = 0;\n\ninterface EnvVarEditorProps {\n  value: string;\n  onChangeValue: (newValue: string) => any;\n\n  renderName: (uniqueID: string) => React.ReactNode;\n  renderControls: () => React.ReactNode;\n}\n\nfunction EnvVarEditor(props: EnvVarEditorProps) {\n  const uniqueID = `envVarEditor--${envVarCounter}`;\n  envVarCounter++;\n\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-3\">{props.renderName(uniqueID)}</div>\n      <div className=\"col-sm-8\">\n        <ToggleableInput\n          controlID={uniqueID}\n          controlClassName=\"text-monospace\"\n          value={props.value}\n          onChange={props.onChangeValue}\n        />\n      </div>\n      <div className=\"col-sm-1 d-flex justify-content-end\">\n        {props.renderControls()}\n      </div>\n    </div>\n  );\n}\n\ninterface ExistingEnvVarProps {\n  name: string;\n  value: string;\n  onChange: (newValue: string) => any;\n  onDelete: () => any;\n}\n\nexport function ExistingEnvVarEditor(props: ExistingEnvVarProps) {\n  return (\n    <EnvVarEditor\n      value={props.value}\n      onChangeValue={props.onChange}\n      renderName={uniqueID => (\n        <label htmlFor={uniqueID} className=\"text-monospace\">\n          {props.name}\n        </label>\n      )}\n      renderControls={() => (\n        <button className=\"btn btn-outline-danger\" onClick={props.onDelete}>\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      )}\n    />\n  );\n}\n\ninterface NewEnvVarProps {\n  onAccept: (name: string, value: string) => any;\n}\n\nexport function NewEnvVarEditor(props: NewEnvVarProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [currentName, setName] = useState(\"\");\n  const [currentValue, setValue] = useState(\"\");\n  const nameFieldRef = useRef<HTMLInputElement>(null);\n\n  const canAccept = currentName.length > 0;\n\n  useEffect(() => {\n    if (expanded && nameFieldRef.current) {\n      nameFieldRef.current.focus();\n    }\n  }, [expanded]);\n\n  if (!expanded) {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-3\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(true);\n            }}\n          >\n            <i className=\"far fa-plus-square\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <EnvVarEditor\n      value={currentValue}\n      onChangeValue={v => setValue(v)}\n      renderName={() => (\n        <input\n          ref={nameFieldRef}\n          type=\"text\"\n          className=\"form-control text-monospace\"\n          value={currentName}\n          onChange={evt => setName(evt.target.value)}\n        />\n      )}\n      renderControls={() => (\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canAccept}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onAccept(currentName.toLocaleUpperCase(), currentValue);\n              setName(\"\");\n              setValue(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      )}\n    />\n  );\n}\n","import React from \"react\";\n\nimport {IEnvMap} from \"../../common/coordinator\";\nimport {ExistingEnvVarEditor, NewEnvVarEditor} from \"./EnvVarEditor\";\n\ninterface EnvVarListEditorProps {\n  envVars: IEnvMap;\n  onChange: (name: string, value: string) => any;\n  onDelete: (name: string) => any;\n}\n\nexport function EnvVarListEditor(props: EnvVarListEditorProps) {\n  const varNames = Object.keys(props.envVars);\n  varNames.sort();\n\n  const existingVarEditors = varNames.map(varName => (\n    <ExistingEnvVarEditor\n      key={`envVarEditor-${varName}`}\n      name={varName}\n      value={props.envVars[varName]}\n      onChange={value => props.onChange(varName, value)}\n      onDelete={() => props.onDelete(varName)}\n    />\n  ));\n\n  return (\n    <>\n      {existingVarEditors}\n      <NewEnvVarEditor onAccept={props.onChange} />\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {ToggleableInput} from \"../../common/ToggleableInput\";\n\ninterface ExistingSecretProps {\n  name: string;\n  onDelete: () => any;\n}\n\nexport function ExistingSecretEditor(props: ExistingSecretProps) {\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-3\">\n        <label className=\"text-monospace text-success\">\n          <i className=\"fas fa-lock d-inline mr-2\" />\n          {props.name}\n        </label>\n      </div>\n      <div className=\"col-sm-8\" />\n      <div\n        className=\"col-sm-1 d-flex justify-content-end\"\n        onClick={props.onDelete}\n      >\n        <button className=\"btn btn-outline-danger\">\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\ninterface AddSecretProps {\n  availableSecrets: string[];\n  onAddExisting: (name: string) => any;\n  onCreateNew: (name: string, value: string) => any;\n}\n\ntype DisplayMode = \"collapsed\" | \"existing\" | \"create\";\n\nexport function NewSecretEditor(props: AddSecretProps) {\n  const [displayMode, setDisplayMode] = useState<DisplayMode>(\"collapsed\");\n  const [currentName, setName] = useState(\"\");\n  const [currentValue, setValue] = useState(\"\");\n\n  const canAdd = currentName.length > 0;\n  const canCreate = currentName.length > 0 && currentValue.length > 0;\n  const nameFieldRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (displayMode === \"create\" && nameFieldRef.current) {\n      nameFieldRef.current.focus();\n    }\n  }, [displayMode]);\n\n  if (displayMode === \"collapsed\") {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-3\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setDisplayMode(\"existing\");\n            }}\n          >\n            <i className=\"far fa-plus-square\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (displayMode === \"existing\") {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-10 input-group\">\n          <div className=\"input-group-prepend d-flex align-items-center\">\n            <i className=\"fas fa-lock-open text-success d-inline mr-2\" />\n          </div>\n          <select\n            className=\"form-control text-success\"\n            value={currentName}\n            onChange={evt => setName(evt.target.value)}\n            required={true}\n          >\n            <option value=\"\">Choose an existing secret</option>\n            {props.availableSecrets.map(secretName => (\n              <option key={`secret-${secretName}`} value={secretName}>\n                {secretName}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"col-sm-2 d-flex justify-content-end\">\n          <div className=\"btn-group\">\n            <button\n              className=\"btn btn-outline-success\"\n              disabled={!canAdd}\n              onClick={evt => {\n                evt.preventDefault();\n                props.onAddExisting(currentName.toLocaleUpperCase());\n                setName(\"\");\n                setValue(\"\");\n                setDisplayMode(\"collapsed\");\n              }}\n            >\n              <i className=\"fas fa-plus\" />\n            </button>\n            <button\n              className=\"btn btn-outline-info\"\n              onClick={evt => {\n                evt.preventDefault();\n                setName(\"\");\n                setValue(\"\");\n                setDisplayMode(\"create\");\n              }}\n            >\n              <i className=\"fas fa-pencil-alt\" />\n            </button>\n            <button\n              className=\"btn btn-outline-info\"\n              onClick={evt => {\n                evt.preventDefault();\n                setDisplayMode(\"collapsed\");\n              }}\n            >\n              <i className=\"far fa-minus-square\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend d-flex align-items-center\">\n            <i className=\"fas fa-lock-open text-success d-inline mr-2\" />\n          </div>\n          <input\n            ref={nameFieldRef}\n            type=\"text\"\n            className=\"form-control text-monospace border-success d-inline\"\n            value={currentName}\n            onChange={evt => setName(evt.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-sm-8\">\n        <ToggleableInput\n          controlClassName=\"text-monospace border-success\"\n          value={currentValue}\n          onChange={setValue}\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreateNew(currentName.toLocaleUpperCase(), currentValue);\n              setName(\"\");\n              setValue(\"\");\n              setDisplayMode(\"collapsed\");\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setName(\"\");\n              setValue(\"\");\n              setDisplayMode(\"existing\");\n            }}\n          >\n            <i className=\"fas fa-list\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setDisplayMode(\"collapsed\");\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport {ExistingSecretEditor, NewSecretEditor} from \"./SecretEditor\";\n\ninterface SecretListProps {\n  secrets: string[];\n  availableSecrets: string[];\n  onDelete: (name: string) => any;\n  onAdd: (name: string) => any;\n  onCreate: (name: string, value: string) => any;\n}\n\nexport function SecretListEditor(props: SecretListProps) {\n  const existingSecretEditors = props.secrets.map(name => (\n    <ExistingSecretEditor\n      key={`existingSecret-${name}`}\n      name={name}\n      onDelete={() => props.onDelete(name)}\n    />\n  ));\n\n  return (\n    <>\n      {existingSecretEditors}\n      <NewSecretEditor\n        availableSecrets={props.availableSecrets}\n        onAddExisting={props.onAdd}\n        onCreateNew={props.onCreate}\n      />\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {IVolumeMap} from \"../../common/coordinator\";\n\ninterface VolumeListProps {\n  volumeMap: IVolumeMap;\n  onDelete: (hostPath: string) => any;\n  onCreate: (hostPath: string, containerPath: string) => any;\n}\n\nexport function VolumeListEditor(props: VolumeListProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [hostPath, setHostPath] = useState(\"/etc/ssl/az/\");\n  const [containerPath, setContainerPath] = useState(\"\");\n\n  const hostPathRef = useRef<HTMLInputElement>(null);\n\n  const canCreate = hostPath.length > 0 && containerPath.length > 0;\n\n  useEffect(() => {\n    if (expanded && hostPathRef.current) {\n      hostPathRef.current.focus();\n    }\n  }, [expanded]);\n\n  const hostPaths = Object.keys(props.volumeMap);\n  const existingVolumes = hostPaths.map((hostPath, i) => (\n    <div className=\"form-row\" key={i}>\n      <div className=\"col-sm-5\">\n        host: <span className=\"text-monospace\">{hostPath}</span>\n      </div>\n      <div className=\"col-sm-5\">\n        container:{\" \"}\n        <span className=\"text-monospace\">{props.volumeMap[hostPath]}</span>\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <button\n          className=\"btn btn-outline-danger\"\n          onClick={evt => {\n            evt.preventDefault();\n            props.onDelete(hostPath);\n          }}\n        >\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      </div>\n    </div>\n  ));\n\n  const newVolume = expanded ? (\n    <div className=\"form-row\">\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">host</span>\n        </div>\n        <input\n          ref={hostPathRef}\n          type=\"text\"\n          value={hostPath}\n          onChange={evt => setHostPath(evt.target.value)}\n          className=\"form-control text-monospace\"\n        />\n      </div>\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">container</span>\n        </div>\n        <input\n          type=\"text\"\n          value={containerPath}\n          onChange={evt => setContainerPath(evt.target.value)}\n          className=\"form-control text-monospace\"\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreate(hostPath, containerPath);\n              setHostPath(\"/etc/ssl/az/\");\n              setContainerPath(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <button\n          className=\"btn btn-outline-info\"\n          onClick={evt => {\n            evt.preventDefault();\n            setExpanded(true);\n          }}\n        >\n          <i className=\"far fa-plus-square\" />\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {existingVolumes}\n      {newVolume}\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {IPortMap} from \"../../common/coordinator\";\n\ninterface PortListProps {\n  portMap: IPortMap;\n  onCreate: (hostPort: string, containerPort: number) => any;\n  onDelete: (hostPort: string) => any;\n}\n\nexport function PortListEditor(props: PortListProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [hostPort, setHostPort] = useState(\"\");\n  const [containerPort, setContainerPort] = useState(\"\");\n\n  const hostPortRef = useRef<HTMLInputElement>(null);\n\n  const canCreate = hostPort.length > 0 && containerPort.length > 0;\n\n  useEffect(() => {\n    if (expanded && hostPortRef.current) {\n      hostPortRef.current.focus();\n    }\n  }, [expanded]);\n\n  const hostPorts = Object.keys(props.portMap);\n  const existingPorts =\n    hostPorts.length > 0 ? (\n      <div className=\"form-row mb-2\">\n        <ul className=\"list-group list-group-horizontal\">\n          {hostPorts.map((hostPort, i) => (\n            <li\n              key={`hostPort-${i}`}\n              className=\"list-group-item pushbot-portMapping\"\n            >\n              {hostPort} <i className=\"fas fa-arrow-right mx-2\" />{\" \"}\n              {props.portMap[hostPort]}{\" \"}\n              <button\n                className=\"btn btn-outline-danger ml-3 pushbot-portMapping--deleteButton\"\n                onClick={evt => {\n                  evt.preventDefault();\n                  props.onDelete(hostPort);\n                }}\n              >\n                <i className=\"far fa-trash-alt\" />\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    ) : null;\n\n  const newPort = expanded ? (\n    <div className=\"form-row\">\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">host</span>\n        </div>\n        <input\n          ref={hostPortRef}\n          type=\"number\"\n          value={hostPort}\n          onChange={evt => setHostPort(evt.target.value)}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">container</span>\n        </div>\n        <input\n          type=\"number\"\n          value={containerPort}\n          onChange={evt => setContainerPort(evt.target.value)}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreate(hostPort, parseInt(containerPort, 10));\n              setHostPort(\"\");\n              setContainerPort(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <button\n          className=\"btn btn-outline-info\"\n          onClick={evt => {\n            evt.preventDefault();\n            setExpanded(true);\n          }}\n        >\n          <i className=\"far fa-plus-square\" />\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {existingPorts}\n      {newPort}\n    </>\n  );\n}\n","import React, {useState, useMemo, useContext} from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport cx from \"classnames\";\n\nimport {ISecretsCreate, CoordinatorContext} from \"../../common/coordinator\";\nimport {NotificationContext} from \"../../common/Notifications\";\nimport {PendingDiffContext} from \"../../common/PendingDiff\";\nimport {\n  DesiredUnitPayload,\n  usePayloadState,\n  serviceTypes,\n  getServiceType,\n} from \"./serviceTypes\";\nimport {EnvVarListEditor} from \"./EnvVarListEditor\";\nimport {SecretListEditor} from \"./SecretListEditor\";\nimport {VolumeListEditor} from \"./VolumeListEditor\";\nimport {PortListEditor} from \"./PortListEditor\";\n\ninterface ServiceFormProps {\n  payload: DesiredUnitPayload;\n  knownSecrets: string[];\n}\n\nexport function ServiceForm({payload, knownSecrets}: ServiceFormProps) {\n  const [nextRoute, setNextRoute] = useState<string | null>(null);\n\n  const [currentPath, setPath] = usePayloadState(payload, \"path\");\n  const [currentType, setType] = usePayloadState(payload, \"currentType\");\n  const [currentContainerName, setContainerName] = usePayloadState(\n    payload,\n    \"containerName\"\n  );\n  const [currentContainerImageName, setContainerImageName] = usePayloadState(\n    payload,\n    \"containerImageName\"\n  );\n  const [currentContainerImageTag, setContainerImageTag] = usePayloadState(\n    payload,\n    \"containerImageTag\"\n  );\n  const [currentEnvVars, setEnvVars] = usePayloadState(payload, \"env\");\n  const [currentSecrets, setSecrets] = usePayloadState(payload, \"secrets\");\n  const [currentVolumes, setVolumes] = usePayloadState(payload, \"volumes\");\n  const [currentPorts, setPorts] = usePayloadState(payload, \"ports\");\n  const [currentCalendar, setCalendar] = usePayloadState(payload, \"calendar\");\n\n  const [createdSecrets, setCreatedSecrets] = useState<ISecretsCreate>({});\n\n  function deleteSecret(name: string) {\n    setSecrets(currentSecrets.filter(each => each !== name));\n  }\n\n  function addSecret(name: string) {\n    setSecrets([...currentSecrets, name]);\n  }\n\n  function createSecret(name: string, value: string) {\n    setSecrets([...currentSecrets, name]);\n    setCreatedSecrets({...createdSecrets, [name]: value});\n  }\n\n  function deleteVolume(hostPath: string) {\n    const nextVolumes = {...currentVolumes};\n    delete nextVolumes[hostPath];\n    setVolumes(nextVolumes);\n  }\n\n  function createVolume(hostPath: string, containerPath: string) {\n    setVolumes({\n      ...currentVolumes,\n      [hostPath]: containerPath,\n    });\n  }\n\n  function deletePort(hostPort: string) {\n    const nextPorts = {...currentPorts};\n    delete nextPorts[hostPort];\n    setPorts(nextPorts);\n  }\n\n  function createPort(hostPort: string, containerPort: number) {\n    setPorts({\n      ...currentPorts,\n      [hostPort]: containerPort,\n    });\n  }\n\n  const availableSecrets = useMemo(() => {\n    const used = new Set(currentSecrets);\n    return knownSecrets.filter(each => !used.has(each));\n  }, [knownSecrets, currentSecrets]);\n\n  const {refresh: refreshDiff} = useContext(PendingDiffContext);\n  const coordinator = useContext(CoordinatorContext);\n  const hub = useContext(NotificationContext);\n\n  if (nextRoute) {\n    return <Redirect to={nextRoute} />;\n  }\n\n  async function apply(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n\n      if (Object.keys(createdSecrets).length > 0) {\n        await coordinator.createSecrets(createdSecrets);\n      }\n\n      await payload.withAction({\n        create: () => coordinator.createDesiredUnit(payload.getCreatePayload()),\n        update: (id: number) =>\n          coordinator.updateDesiredUnit(id, payload.getUpdatePayload()),\n      });\n      refreshDiff();\n      setNextRoute(\"/admin/services\");\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  async function deleteService(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n\n      await payload.withID(id => coordinator.deleteDesiredUnit(id));\n\n      refreshDiff();\n      setNextRoute(\"/admin/services\");\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  return (\n    <form className=\"border rounded p-3\">\n      {/* path */}\n      <div className=\"form-row\">\n        <label htmlFor=\"serviceEditor--path\" className=\"col-sm-3\">\n          Path:\n        </label>\n        <div className={cx(\"col-sm-9\", {disabled: payload.isUpdate()})}>\n          <input\n            id=\"serviceEditor--path\"\n            className=\"form-control text-monospace\"\n            type=\"text\"\n            value={currentPath}\n            onChange={evt => setPath(evt.target.value)}\n            readOnly={payload.isUpdate()}\n          />\n        </div>\n      </div>\n\n      {/* type */}\n      <div className=\"form-row\">\n        <label htmlFor=\"serviceEditor--type\" className=\"col-sm-3\">\n          Type:\n        </label>\n        <div className=\"col-sm-2\">\n          <select\n            className=\"form-control\"\n            id=\"serviceEditor--type\"\n            onChange={evt => setType(getServiceType(evt.target.value))}\n          >\n            {serviceTypes.map(tp => (\n              <option selected={tp === currentType} value={tp.name}>\n                {tp.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* invalid type detection */}\n      {currentType.ifInvalid(() => (\n        <div className=\"form-row my-2\">\n          <div className=\"alert alert-danger px-3 col\">\n            <p>\n              Invalid service type:{\" \"}\n              <span className=\"font-weight-bold\">{currentType.name}</span>.\n            </p>\n            <p>Please choose another.</p>\n          </div>\n        </div>\n      ))}\n\n      <hr />\n\n      {currentType.ifAnyContainer(() => (\n        <div className=\"form-row mt-4 mb-2\">\n          <div className=\"col\">\n            <h6 className=\"text-secondary\">Container details</h6>\n          </div>\n        </div>\n      ))}\n\n      {/* container name */}\n      {currentType.ifContainerName(() => (\n        <div className=\"form-row\">\n          <label htmlFor=\"serviceEditor--containerName\" className=\"col-sm-3\">\n            Name:\n          </label>\n          <div className=\"col-sm-9\">\n            <input\n              id=\"serviceEditor--containerName\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerName}\n              onChange={evt => setContainerName(evt.target.value)}\n            />\n          </div>\n        </div>\n      ))}\n\n      {/* container image name and tag */}\n      {currentType.ifContainerConfig(() => (\n        <div className=\"form-row\">\n          <label\n            htmlFor=\"serviceEditor--containerImageName\"\n            className=\"col-sm-3\"\n          >\n            Image:\n          </label>\n          <div className=\"col-sm-5\">\n            <input\n              id=\"serviceEditor--containerImageName\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerImageName}\n              onChange={evt => setContainerImageName(evt.target.value)}\n              placeholder=\"quay.io/smashwilson/az-\"\n            />\n          </div>\n          <div className=\"col-sm-3\">\n            <input\n              id=\"serviceEditor--containerImageTag\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerImageTag}\n              onChange={evt => setContainerImageTag(evt.target.value)}\n              placeholder=\"latest\"\n            />\n          </div>\n        </div>\n      ))}\n\n      {/* environment variables and secrets */}\n      {currentType.ifEnvAndSecrets(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Environment variables</h6>\n            </div>\n          </div>\n          <EnvVarListEditor\n            envVars={currentEnvVars}\n            onChange={(name, value) => {\n              const nextVars = {\n                ...currentEnvVars,\n                [name]: value,\n              };\n              setEnvVars(nextVars);\n            }}\n            onDelete={name => {\n              const nextVars = {...currentEnvVars};\n              delete nextVars[name];\n              setEnvVars(nextVars);\n            }}\n          />\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Secrets</h6>\n            </div>\n          </div>\n          <SecretListEditor\n            availableSecrets={availableSecrets}\n            secrets={currentSecrets}\n            onDelete={deleteSecret}\n            onAdd={addSecret}\n            onCreate={createSecret}\n          />\n        </>\n      ))}\n\n      {/* volumes */}\n      {currentType.ifVolumes(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Volumes</h6>\n            </div>\n          </div>\n          <VolumeListEditor\n            volumeMap={currentVolumes}\n            onCreate={createVolume}\n            onDelete={deleteVolume}\n          />\n        </>\n      ))}\n\n      {/* port mappings */}\n      {currentType.ifPorts(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Port mappings</h6>\n            </div>\n          </div>\n          <PortListEditor\n            portMap={currentPorts}\n            onCreate={createPort}\n            onDelete={deletePort}\n          />\n        </>\n      ))}\n\n      {/* schedule */}\n      {currentType.ifSchedule(() => (\n        <div className=\"form-row\">\n          <label htmlFor=\"serviceEditor--schedule\" className=\"col-sm-3\">\n            Schedule:\n          </label>\n          <div className=\"col-sm-7\">\n            <input\n              id=\"serviceEditor--schedule\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentCalendar}\n              onChange={evt => setCalendar(evt.target.value)}\n            />\n          </div>\n          <div className=\"col-sm-2\">\n            <a\n              target=\"_new\"\n              href=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html#\"\n            >\n              <i className=\"fas fa-book mr-2\" />\n              reference\n            </a>\n          </div>\n        </div>\n      ))}\n\n      <hr />\n\n      {/* controls */}\n      <div className=\"form-row m-3\">\n        {payload.isUpdate() && (\n          <div className=\"col d-flex align-items-baseline\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger\"\n              onClick={deleteService}\n              disabled={payload.isCreate()}\n            >\n              Delete\n            </button>\n          </div>\n        )}\n        <div className=\"col d-flex align-items-baseline justify-content-end\">\n          <div className=\"btn-group\">\n            <Link to=\"/admin/services\" className=\"btn btn-secondary\">\n              Cancel\n            </Link>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={apply}\n              disabled={!payload.isValid()}\n            >\n              {payload.withAction({\n                create: () => \"Create\",\n                update: () => \"Update\",\n              })}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\n\nimport {IDesiredState} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {ServiceForm} from \"./ServiceForm\";\nimport {DesiredUnitPayload} from \"./serviceTypes\";\n\nconst nullDesiredState: IDesiredState = {units: []};\n\ninterface ServiceEditorProps {\n  match: {\n    params: {\n      id: string;\n    };\n  };\n}\n\nexport function ServiceEditor(props: ServiceEditorProps) {\n  return (\n    <CoordinatorContainer<string[]> getter={c => c.getSecrets()} nullValue={[]}>\n      {(knownSecrets, secretsLoading) => {\n        if (props.match.params.id === \"create\") {\n          return (\n            <ServiceForm\n              payload={new DesiredUnitPayload()}\n              knownSecrets={knownSecrets}\n            />\n          );\n        }\n\n        return (\n          <CoordinatorContainer<IDesiredState>\n            getter={c => c.getDesiredState()}\n            nullValue={nullDesiredState}\n          >\n            {(state, stateIsLoading) => {\n              if (stateIsLoading || secretsLoading) {\n                return <Loading />;\n              }\n\n              const reqID = decodeURIComponent(props.match.params.id);\n              const original = state.units.find(u => u.id.toString() === reqID);\n              if (original) {\n                return (\n                  <ServiceForm\n                    payload={new DesiredUnitPayload(original)}\n                    knownSecrets={knownSecrets}\n                  />\n                );\n              }\n\n              return (\n                <div className=\"card bg-danger text-white\">\n                  <div className=\"card-header\">Unknown service ID</div>\n                  <div className=\"card-body\">\n                    <p className=\"card-text\">No service exists with that ID.</p>\n                  </div>\n                </div>\n              );\n            }}\n          </CoordinatorContainer>\n        );\n      }}\n    </CoordinatorContainer>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport cx from \"classnames\";\n\nimport {IDelta, IDesiredUnit} from \"../../common/coordinator\";\nimport {hasPendingDelta} from \"../../common/PendingDiff\";\n\ninterface Tense {\n  create: string;\n  modify: string;\n  restart: string;\n  remove: string;\n  write: string;\n}\n\nexport const futureTense: Tense = {\n  create: \"will create\",\n  modify: \"will modify\",\n  restart: \"will restart\",\n  remove: \"will remove\",\n  write: \"will write\",\n};\n\nexport const pastTense: Tense = {\n  create: \"created\",\n  modify: \"modified\",\n  restart: \"restarted\",\n  remove: \"removed\",\n  write: \"wrote\",\n};\n\ninterface DeltaViewProps {\n  delta: IDelta;\n  headerText: string;\n  emptyText: string;\n  tense: Tense;\n}\n\nexport function DeltaView(props: DeltaViewProps) {\n  if (!hasPendingDelta(props.delta)) {\n    return (\n      <div className=\"card border-success my-3 mx-0\">\n        <div className=\"card-body\">\n          <p className=\"card-text text-success\">\n            <i className=\"fas fa-check-circle mr-3\" />\n            {props.emptyText}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  function createDesiredRow(\n    unit: IDesiredUnit,\n    action: string,\n    textClass: string,\n    iconClass: string\n  ): React.ReactNode {\n    return (\n      <p\n        key={`key-${action}-${unit.id}`}\n        className={cx(\"card-text\", textClass)}\n      >\n        <i className={cx(\"mr-3\", iconClass)} />\n        {action}{\" \"}\n        <Link\n          to={`/admin/services/${encodeURIComponent(unit.id.toString())}`}\n          className={cx(\"font-weight-bold\", textClass)}\n        >\n          {unit.path}\n        </Link>\n      </p>\n    );\n  }\n\n  const changeRows: React.ReactNodeArray = [];\n  for (const unit of props.delta.units_to_add) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.create} unit`,\n        \"text-success\",\n        \"far fa-plus-square\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_change) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.modify} unit`,\n        \"text-info\",\n        \"fas fa-tools\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_restart) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.restart} unit`,\n        \"text-info\",\n        \"fas fa-recycle\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_remove) {\n    changeRows.push(\n      <p key={`remove-${unit.path}`} className=\"card-text text-danger\">\n        <i className=\"mr-3 fas fa-fire\" />\n        {props.tense.remove} unit{\" \"}\n        <span className=\"font-weight-bold\">{unit.path}</span>\n      </p>\n    );\n  }\n  for (const filePath of props.delta.files_to_write) {\n    changeRows.push(\n      <p className=\"card-text text-info\">\n        <i className=\"mr-3 far fa-file-alt\" />\n        {props.tense.write} file{\" \"}\n        <span className=\"font-weight-bold\">{filePath}</span>\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"card bg-light my-3 mx-0\">\n      <h5 className=\"card-header\">{props.headerText}</h5>\n      <div className=\"card-body\">{changeRows}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport {ISyncReport} from \"../../common/coordinator\";\n\nconst timeUnits: (\"h\" | \"m\" | \"s\" | \"ms\")[] = [\"h\", \"m\", \"s\", \"ms\"];\n\nfunction reportDuration(d: moment.Duration): string {\n  for (const timeUnit of timeUnits) {\n    const count = d.get(timeUnit);\n    if (count > 0) {\n      return `${count}${timeUnit}`;\n    }\n  }\n  return \"<1ms\";\n}\n\ninterface FieldsViewProps {\n  fields: {[fieldName: string]: any};\n}\n\nfunction FieldsView(props: FieldsViewProps) {\n  const keys = Object.keys(props.fields);\n  if (keys.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"row mt-1\">\n      <div className=\"col-1 px-2\" />\n      <div className=\"col-11\">\n        <ul className=\"list-group-horizontal p-0\">\n          {keys.map(key => (\n            <li key={key} className=\"list-group-item px-2 py-0\">\n              <small className=\"text-muted mr-1\">{key}:</small>\n              <small className=\"text-monospaced\">\n                {props.fields[key].toString()}\n              </small>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\ninterface SyncReportViewProps {\n  reports: ISyncReport[];\n}\n\nexport function SyncReportView(props: SyncReportViewProps) {\n  const reportRows = props.reports.map((report, index) => {\n    const duration = moment.duration(report.elapsed);\n\n    return (\n      <li className=\"list-group-item row\" key={index}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-1 px-2 border-right d-flex justify-content-end pushbot-syncReport--duration\">\n              {reportDuration(duration)}\n            </div>\n            <div className=\"col-11 text-dark\">{report.message}</div>\n          </div>\n          <FieldsView fields={report.fields} />\n        </div>\n      </li>\n    );\n  });\n\n  return <ul className=\"list-group pushbot-syncReport\">{reportRows}</ul>;\n}\n\ninterface PlaceholderSyncReportViewProps {\n  lastReport?: ISyncReport;\n}\n\nexport function PlaceholderSyncReportView(props: PlaceholderSyncReportViewProps) {\n  const elapsed = props.lastReport\n    ? reportDuration(\n        moment.duration(moment().diff(moment.unix(props.lastReport.timestamp)))\n      )\n    : \"...\";\n\n  return (\n    <li className=\"list-group-item row\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-1 border-right\">{elapsed}</div>\n          <div className=\"col-11\">\n            <i className=\"fas fa-circle-notch fa-spin text-dark\" />\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import React, {useContext} from \"react\";\nimport cx from \"classnames\";\n\nimport {CoordinatorContext, ISync} from \"../../common/coordinator\";\nimport {PendingDiffContext} from \"../../common/PendingDiff\";\nimport {NotificationContext} from \"../../common/Notifications\";\nimport {DeltaView, pastTense, futureTense} from \"./DeltaView\";\nimport {SyncReportView, PlaceholderSyncReportView} from \"./SyncReportView\";\n\ninterface SyncViewProps {\n  lastSync: ISync;\n  refresh: () => void;\n}\n\nexport function SyncView(props: SyncViewProps) {\n  const coordinator = useContext(CoordinatorContext);\n  const pendingDiff = useContext(PendingDiffContext);\n  const hub = useContext(NotificationContext);\n\n  const lastDelta = props.lastSync.delta;\n  const lastReport = props.lastSync.reports[props.lastSync.reports.length - 1];\n  const inProgress = props.lastSync.in_progress;\n\n  async function startSync(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n      await coordinator.createSync();\n      props.refresh();\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  if (inProgress) {\n    setTimeout(() => {\n      props.refresh();\n      pendingDiff.refresh();\n    }, 1000);\n  }\n\n  return (\n    <>\n      <DeltaView\n        delta={pendingDiff.delta}\n        emptyText=\"No changes waiting to be applied.\"\n        headerText=\"changes to apply\"\n        tense={futureTense}\n      />\n      <p className=\"mt-2 mb-4\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={inProgress}\n          onClick={startSync}\n        >\n          <i\n            className={cx(\"fas fa-sync-alt mr-2\", {\n              \"fa-spin\": inProgress,\n            })}\n          />\n          Sync\n        </button>\n      </p>\n      <div className=\"my-3\">\n        <h6>{inProgress ? \"current \" : \"most recent \"} sync</h6>\n        <SyncReportView reports={props.lastSync.reports} />\n        {props.lastSync.in_progress && (\n          <PlaceholderSyncReportView lastReport={lastReport} />\n        )}\n      </div>\n      {lastDelta && (\n        <DeltaView\n          delta={lastDelta}\n          emptyText=\"No changes applied.\"\n          headerText=\"applied changes\"\n          tense={pastTense}\n        />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nimport {ISync} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {SyncView} from \"./SyncView\";\n\nimport \"./Sync.css\";\n\nconst nullSync: ISync = {\n  in_progress: false,\n  reports: [],\n  errors: [],\n};\n\nexport function Sync() {\n  return (\n    <>\n      <h3>sync</h3>\n      <CoordinatorContainer<ISync>\n        getter={c => c.getSync()}\n        nullValue={nullSync}\n      >\n        {(lastSync, isLoading, refresh) => {\n          if (isLoading && lastSync.reports.length === 0) {\n            return <Loading />;\n          } else {\n            return <SyncView lastSync={lastSync} refresh={refresh} />;\n          }\n        }}\n      </CoordinatorContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport memo from \"memoize-one\";\n\nimport {SideNav} from \"./SideNav\";\nimport {Dashboard} from \"./dashboard/Dashboard\";\nimport {People} from \"./people/People\";\nimport {Profile} from \"./profile/Profile\";\nimport {Quotes} from \"./quotes/Quotes\";\nimport {Events} from \"./events/Events\";\nimport {Recent} from \"./recent/Recent\";\nimport {Rem} from \"./rem/Rem\";\nimport {RemEntry} from \"./rem/RemEntry\";\nimport {Services} from \"./admin/services/Services\";\nimport {ServiceEditor} from \"./admin/services/ServiceEditor\";\nimport {Sync} from \"./admin/sync/Sync\";\nimport {UserContext, IUser} from \"./common/Role\";\nimport {\n  CoordinatorContext,\n  Coordinator,\n  nullCoordinator,\n} from \"./common/coordinator\";\nimport {PendingDiffProvider} from \"./common/PendingDiff\";\nimport {NotificationsProvider, NotificationsView} from \"./common/Notifications\";\n\ninterface AuthenticatedProps {\n  user: IUser;\n}\n\nconst coordinatorForUser = memo(\n  (user: IUser): Coordinator => {\n    if (user.coordinatorToken) {\n      return new Coordinator(user.coordinatorToken);\n    } else {\n      return nullCoordinator;\n    }\n  },\n  (newArgs: IUser[], lastArgs: IUser[]) => newArgs[0].id === lastArgs[0].id\n);\n\nexport function Authenticated(props: AuthenticatedProps) {\n  const coordinator = coordinatorForUser(props.user);\n\n  return (\n    <UserContext.Provider value={props.user}>\n      <CoordinatorContext.Provider value={coordinator}>\n        <PendingDiffProvider coordinator={coordinator}>\n          <NotificationsProvider>\n            <div className=\"row mt-md-5\">\n              <div className=\"col-md-2\">\n                <SideNav />\n              </div>\n              <div className=\"col-md-8\">\n                <NotificationsView />\n                <Route path=\"/\" component={Dashboard} exact />\n                <Route path=\"/people\" component={People} exact />\n                <Route path=\"/people/:name\" component={Profile} />\n                <Route path=\"/quotes\" component={Quotes} />\n                <Route path=\"/rem\" component={Rem} exact />\n                <Route path=\"/rem/:key\" component={RemEntry} />\n                <Route path=\"/events\" component={Events} />\n                <Route path=\"/recent\" component={Recent} />\n                <Route path=\"/admin/services\" component={Services} exact />\n                <Route path=\"/admin/services/:id\" component={ServiceEditor} />\n                <Route path=\"/admin/sync\" component={Sync} />\n              </div>\n            </div>\n          </NotificationsProvider>\n        </PendingDiffProvider>\n      </CoordinatorContext.Provider>\n    </UserContext.Provider>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport \"./Banner.css\";\n\nconst LOGOUT_URL = `${process.env.REACT_APP_API_BASE_URL}/logout?backTo=true`;\n\ninterface BannerProps {\n  username: string;\n  title: string;\n  avatar: string;\n}\n\nexport const Banner = (props: BannerProps) => {\n  let accountControl = null;\n\n  if (props.username) {\n    let accountElements = [];\n    if (props.title) {\n      accountElements.push(\n        <span key=\"0\" className=\"navbar-text pushbot-navbar-title\">\n          {props.title}\n\n          <i\n            key=\"1\"\n            className=\"far fa-circle pushbot-navbar-separator\"\n            aria-hidden=\"true\"\n          />\n        </span>\n      );\n    }\n    accountElements.push(\n      <Link\n        to={`/people/${props.username}`}\n        key=\"2\"\n        className=\"navbar-text pushbot-navbar-username font-weight-bolder\"\n      >\n        @{props.username}\n      </Link>\n    );\n\n    accountControl = (\n      <>\n        {accountElements}\n        <img className=\"navbar-item pushbot-navbar-avatar\" src={props.avatar} alt=\"\" />\n        <a href={LOGOUT_URL} className=\"navbar-item pushbot-navbar-logout\">\n          <i className=\"fas fa-sign-out-alt\" aria-hidden=\"true\" />\n          Log out\n        </a>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"container-fluid mx-0 px-0\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mx-0\">\n        <button\n          type=\"button\"\n          className=\"navbar-toggler collapsed\"\n          data-toggle=\"collapse\"\n          data-target=\"#bs-example-navbar-collapse-1\"\n          aria-expanded=\"false\"\n        >\n          <span className=\"navbar-toggler-icon\">Toggle navigation</span>\n        </button>\n        <div className=\"navbar-brand flex-grow-1\">pushbot party</div>\n\n        <div\n          className=\"collapse navbar-collapse flex-grow-0\"\n          id=\"bs-example-navbar-collapse-1\"\n        >\n          {accountControl}\n        </div>\n      </nav>\n    </div>\n  );\n};\n","import React, {Component} from \"react\";\n\nimport \"./Login.css\";\n\ninterface LoginProps {\n  authUrl: string;\n}\n\nexport class Login extends Component<LoginProps> {\n  componentDidMount() {\n    document.children[0].classList.add(\"pushbot-login-bg\");\n  }\n\n  render() {\n    return (\n      <div className=\"jumbotron pushbot-login mt-md-5\">\n        <h1>Are there stairs in your house?</h1>\n        <p>\n          <a href={this.props.authUrl} className=\"pushbot-signin-slack\">\n            <img\n              alt=\"Sign in with Slack\"\n              height=\"40\"\n              width=\"172\"\n              src=\"https://platform.slack-edge.com/img/sign_in_with_slack.png\"\n              srcSet=\"https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x\"\n            />\n          </a>\n          so that I may protect you from the\n          <a href=\"https://www.youtube.com/watch?v=7E0ot9iJm_k\">\n            terrible secret of space\n          </a>\n        </p>\n        <p className=\"text-muted\">\n          <em>\n            <small>\n              (Make sure that you choose <strong>#~s</strong> as your Slack\n              team)\n            </small>\n          </em>\n        </p>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    document.children[0].classList.remove(\"pushbot-login-bg\");\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\nimport {getEnvironment, AUTH_URL, QueryResult} from \"./common/Transport\";\nimport {isNetworkError} from \"./common/errors\";\nimport {Authenticated} from \"./Authenticated\";\nimport {Banner} from \"./Banner\";\nimport {Login} from \"./Login\";\n\nimport {AppQuery} from \"./__generated__/AppQuery.graphql\";\n\nimport \"./App.css\";\n\nexport class App extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query AppQuery {\n        users {\n          me {\n            id\n            name\n            avatar {\n              image48\n            }\n            roles {\n              name\n            }\n            coordinatorToken\n          }\n        }\n\n        title: documents(set: \"title\") {\n          mine {\n            text\n            found\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<AppQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = (result: QueryResult<AppQuery>) => {\n    let body = null;\n    let username = \"\";\n    let title = \"\";\n    let avatar = \"\";\n\n    if (isNetworkError(result.error)) {\n      if (result.error.responseStatus === 401) {\n        const backTo = encodeURIComponent(document.location!.pathname);\n        body = <Login authUrl={`${AUTH_URL}?backTo=${backTo}`} />;\n      } else {\n        body = <div>{result.error.message}</div>;\n      }\n    } else if (result.props) {\n      const user = result.props.users.me;\n      username = user.name;\n      if (result.props.title) {\n        title = result.props.title.mine.text;\n      }\n      if (user.avatar && user.avatar.image48) {\n        avatar = user.avatar.image48;\n      }\n\n      body = <Authenticated user={user} />;\n    } else {\n      body = (\n        <div className=\"row mt-md-5 pushbot-loading\">\n          <p className=\"mx-auto\">\n            <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n            loading\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <Router>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <Banner username={username} title={title} avatar={avatar} />\n          </div>\n          {body}\n        </div>\n      </Router>\n    );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootswatch/dist/spacelab/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport \"jquery\";\nimport \"popper.js\";\nimport \"bootstrap\";\nimport \"@fortawesome/fontawesome-free\";\nimport \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}