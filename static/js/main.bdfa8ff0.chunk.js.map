{"version":3,"sources":["__generated__/PeopleQuery.graphql.ts","__generated__/ProfileQuery.graphql.ts","__generated__/RandomQuoteQuery.graphql.ts","__generated__/QuotePageQuery.graphql.ts","__generated__/EventsQuery.graphql.ts","__generated__/ActionBarSubmitMutation.graphql.ts","common/errors.ts","common/Transport.ts","common/Role.tsx","common/PendingDiff.tsx","SideNav.tsx","dashboard/Dashboard.tsx","people/Person.tsx","people/People.tsx","common/Chart.tsx","profile/Profile.tsx","quotes/queryMode.ts","quotes/Quote.tsx","quotes/RandomQuote.tsx","quotes/QuotePage.tsx","quotes/Quotes.tsx","events/FeedForm.tsx","events/Events.tsx","recent/queryTypes.ts","recent/selection.ts","recent/Line.tsx","recent/History.tsx","recent/ActionBar.tsx","recent/Recent.tsx","common/coordinator.ts","common/CoordinatorContainer.tsx","common/Loading.tsx","admin/services/ServicePath.tsx","admin/services/ServiceDisplay.tsx","admin/services/Services.tsx","common/Notifications.tsx","admin/services/serviceTypes.ts","common/ToggleableInput.tsx","admin/services/EnvVarEditor.tsx","admin/services/EnvVarListEditor.tsx","admin/services/SecretEditor.tsx","admin/services/SecretListEditor.tsx","admin/services/VolumeListEditor.tsx","admin/services/PortListEditor.tsx","admin/services/ServiceForm.tsx","admin/services/ServiceEditor.tsx","admin/sync/DeltaView.tsx","admin/sync/SyncReportView.tsx","admin/sync/SyncView.tsx","admin/sync/Sync.tsx","Authenticated.tsx","Banner.tsx","Login.tsx","App.tsx","serviceWorker.ts","index.tsx","__generated__/AppQuery.graphql.ts","__generated__/RecentChannelQuery.graphql.ts","__generated__/RecentHistoryQuery.graphql.ts"],"names":["__webpack_require__","r","__webpack_exports__","node","v0","kind","alias","name","args","storageKey","v1","v2","concreteType","plural","selections","v3","v4","value","v5","v6","v7","v8","fragment","type","metadata","argumentDefinitions","operation","params","operationKind","id","text","hash","defaultValue","variableName","v9","v10","v11","NETWORK_ERROR_MARKER","Symbol","GRAPHQL_ERROR_MARKER","isNetworkError","err","marker","createNetworkError","_x","_x2","_x3","_createNetworkError","apply","this","arguments","_callee","message","url","response","regenerator_default","a","wrap","_context","prev","next","Error","requestURL","responseStatus","status","responseText","sent","abrupt","stop","createGraphQLError","errors","Object","toConsumableArray","API_URL","concat","process","AUTH_URL","request","variables","payload","fetch","method","headers","content-type","credentials","body","JSON","stringify","query","ok","json","source","RecordSource","network","Network","create","getEnvironment","store","Store","Environment","UserContext","React","createContext","Role","props","user","useContext","roles","some","role","children","nullDelta","units_to_add","units_to_change","units_to_restart","units_to_remove","files_to_write","hasPendingDelta","delta","arr","length","PendingDiffContext","refresh","PendingDiffProvider","_useState","useState","_useState2","slicedToArray","setDelta","_useState3","setLatch","useEffect","ignore","_fetchDelta","asyncToGenerator","mark","coordinator","getDiff","catch","fetchDelta","pendingDiff","current","react_default","createElement","Provider","Pill","className","react_router_dom","to","exact","activeClassName","SideNav","showBadge","Role_Role","Fragment","Dashboard","Person","_props$user","presence","avatar","avatarURL","image48","presenceIcon","src","alt","aria-hidden","title","People","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","environment","renderResult","_ref","error","collateUsers","map","_ref2","key","inherits","createClass","_graphql","react_relay","render","titles","titlesByUsername","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","all","edges","iterator","done","subject","return","userData","users","sort","b","localeCompare","Component","Chartist","plugins","ctHtmlLabels","chart","on","context","element","empty","_node","innerHTML","Chart","_getPrototypeOf2","_len","Array","_key","refElement","_this2","ref","c","options","Bar","data","detach","Profile","emoji","image192","renderReactionsReceivedChart","renderReactionsGivenChart","match","renderTitles","renderQuoteRank","EmojiConverter","img_sets","apple","sheet","use_sheet","include_title","Profile_graphql","username","titleCriteria","renderReactionChart","topReactionsGiven","topReactionsReceived","results","labels","each","replace_colons","series","count","Chart_Chart","low","axisY","onlyInteger","_this3","t","titleFrom","quotes","rank","test","CONTAINING","when","cases","containing","default","label","BY","by","ABOUT","about","modes","Quote","RandomQuote","lastQuote","quoteText","documents","random","onClick","another","setState","state","RandomQuote_graphql","QuotePage","lastTotal","lastResults","renderDocuments","pageInfo","QuotePage_graphql","criteria","mode","speakers","people","mentions","total","document","more","Quotes","didChangeMode","event","find","target","writeSearch","didChangeQuery","didChangePeople","URLSearchParams","window","location","search","has","get","changes","previous","readSearch","assign","set","nextSearch","toString","nextURL","protocol","host","pathname","history","replaceState","href","forceUpdate","showPeople","onChange","index","placeholder","split","person","replace","trim","filter","RandomQuote_RandomQuote","QuotePage_QuotePage","FeedForm","copied","btnClass","btnMessage","feedURL","readOnly","lib_default","onCopy","disabled","ready","Events","result","renderResultBody","Events_graphql","Boolean","calendarURL","FeedForm_FeedForm","rel","ALL","Selection","isSelecting","ids","subs","Set","cb","push","dispose","indexOf","splice","sub","line","wasSelected","add","didChange","delete","clear","from","size","Line","didMouseDown","button","preventDefault","selection","toggle","startSelecting","didMouseMove","select","onDidChange","_this$props","ts","moment","parseInt","timestamp","sameSpeaker","speaker","lineClasses","isSelected","speakerBanner","image32","join","onMouseDown","onMouseMove","format","History","bottom","didMouseUp","stopSelecting","didMouseOut","addEventListener","scrollIntoView","removeEventListener","lines","renderLoading","renderLines","onMouseOut","i","Line_Line","ActionBar","didSubmitQuote","didSubmitLim","didClear","submit","bind","assertThisInitialized","textClassNames","clearBtn","disable","isEmpty","describe","channel","mutation","ActionBar_graphql","getLineIDs","commitMutation","onCompleted","Recent","knownChannels","renderChannelResult","renderError","channelNames","cache","renderCurrent","renderHistoryResult","linesForChannel","didChangeChannel","currentChannel","renderChannelQuery","renderHistoryQuery","Recent_graphql","_graphql2","setTimeout","displayChannelNames","displayChannel","htmlFor","History_History","ActionBar_ActionBar","COORDINATOR_URL","Coordinator","token","_getDesiredState","requestJSON","_createDesiredUnit","_callee2","unit","_context2","_updateDesiredUnit","_callee3","_context3","encodeURIComponent","_deleteDesiredUnit","_callee4","_context4","_x4","_getActualUnits","_callee5","_context5","_getSecrets","_callee6","_context6","_createSecrets","_callee7","secrets","_context7","_x5","_deleteSecrets","_callee8","secretNames","_context8","_x6","_getDiff","_callee9","_context9","_getSync","_callee10","_context10","_createSync","_callee11","_context11","_request","_callee12","subPath","_context12","Authorization","btoa","_x7","_x8","_x9","_requestJSON","_callee13","_context13","_x10","_x11","_x12","nullCoordinator","CoordinatorContext","CoordinatorContainer","getter","isLoading","setLoading","nullValue","_useState4","setValue","_useState5","_useState6","latch","v","Loading","ServicePath","dirname","path","basename","noun","ServiceDisplay","keys","env","volumes","p","mappings","_i","_Object$keys","dest","ports","nullDesiredState","units","Services","getDesiredState","list","NotificationHub","nextID","notifications","subscribers","n","notify","addSuccess","addDanger","isGraphQLError","stack","callback","severity","subscriber","nullHub","NotificationContext","NotificationsProvider","hub","NotificationsView","setNotifications","makeCloser","evt","deleteNotification","onNotification","cx","typeMap","Map","makeServiceType","typeName","config","accept","skip","serviceType","valid","isInvalid","hasAnyContainer","hasContainerName","hasContainerConfig","hasEnvAndSecrets","hasVolumes","hasPorts","hasSchedule","ifInvalid","ifAnyContainer","ifContainerConfig","ifContainerName","ifEnvAndSecrets","ifVolumes","ifPorts","ifSchedule","typeSimple","typeOneShot","typeTimer","typeSelf","serviceTypes","getServiceType","DesiredUnitPayload","original","currentType","containerName","containerImageName","containerImageTag","calendar","objectSpread","container","image_name","image_tag","s","hasEmptyKeyOrValue","obj","k","isInvalidPortNumber","isNaN","hostPorts","parsed","hp","cbs","update","arrayChanged","array","o","objectChanged","ks","commonValidation","withAction","isModified","fn","getCommonPayload","usePayloadState","ToggleableInput","multiLineMode","setMode","controlRef","useRef","cn","controlClassName","focus","controlID","envVarCounter","EnvVarEditor","uniqueID","renderName","onChangeValue","renderControls","ExistingEnvVarEditor","onDelete","NewEnvVarEditor","expanded","setExpanded","currentName","setName","currentValue","nameFieldRef","canAccept","onAccept","toLocaleUpperCase","EnvVarListEditor","varNames","envVars","existingVarEditors","varName","ExistingSecretEditor","NewSecretEditor","displayMode","setDisplayMode","canAdd","canCreate","required","availableSecrets","secretName","onAddExisting","onCreateNew","SecretListEditor","existingSecretEditors","onAdd","onCreate","VolumeListEditor","hostPath","setHostPath","containerPath","setContainerPath","hostPathRef","existingVolumes","volumeMap","newVolume","PortListEditor","hostPort","setHostPort","containerPort","setContainerPort","hostPortRef","portMap","existingPorts","newPort","ServiceForm","knownSecrets","nextRoute","setNextRoute","_usePayloadState","_usePayloadState2","currentPath","setPath","_usePayloadState3","_usePayloadState4","setType","_usePayloadState5","_usePayloadState6","currentContainerName","setContainerName","_usePayloadState7","_usePayloadState8","currentContainerImageName","setContainerImageName","_usePayloadState9","_usePayloadState10","currentContainerImageTag","setContainerImageTag","_usePayloadState11","_usePayloadState12","currentEnvVars","setEnvVars","_usePayloadState13","_usePayloadState14","currentSecrets","setSecrets","_usePayloadState15","_usePayloadState16","currentVolumes","setVolumes","_usePayloadState17","_usePayloadState18","currentPorts","setPorts","_usePayloadState19","_usePayloadState20","currentCalendar","setCalendar","createdSecrets","setCreatedSecrets","deleteSecret","addSecret","createSecret","defineProperty","deleteVolume","nextVolumes","createVolume","deletePort","nextPorts","createPort","useMemo","used","refreshDiff","react_router","_apply","createSecrets","createDesiredUnit","getCreatePayload","updateDesiredUnit","getUpdatePayload","t0","addError","_deleteService","withID","deleteDesiredUnit","isUpdate","tp","selected","nextVars","isCreate","isValid","ServiceEditor","getSecrets","secretsLoading","stateIsLoading","u","futureTense","modify","restart","remove","write","pastTense","DeltaView","emptyText","createDesiredRow","action","textClass","iconClass","changeRows","tense","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","filePath","headerText","timeUnits","reportDuration","d","_timeUnits","timeUnit","SyncReportView","reportRows","reports","report","duration","elapsed","PlaceholderSyncReportView","lastReport","diff","unix","SyncView","lastDelta","lastSync","inProgress","in_progress","_startSync","createSync","fa-spin","nullSync","Sync","getSync","coordinatorForUser","memo","coordinatorToken","oldArgs","newArgs","Authenticated","SideNav_SideNav","component","LOGOUT_URL","Banner","accountControl","accountElements","data-toggle","data-target","aria-expanded","Login","classList","authUrl","height","width","srcSet","App","backTo","Login_Login","me","mine","Banner_Banner","App_graphql","hostname","ReactDOM","App_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdfa8ff0.chunk.js","sourcesContent":["/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Presence = \"ACTIVE\" | \"AWAY\" | \"UNKNOWN\" | \"%future added value\";\nexport type PeopleQueryVariables = {};\nexport type PeopleQueryResponse = {\n    readonly users: {\n        readonly all: ReadonlyArray<{\n            readonly name: string;\n            readonly presence: Presence;\n            readonly avatar: {\n                readonly image48: string | null;\n            };\n            readonly status: {\n                readonly message: string | null;\n                readonly emoji: string | null;\n            };\n        }>;\n    };\n    readonly titles: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly text: string;\n                    readonly subject: string | null;\n                };\n            }>;\n        };\n    } | null;\n};\nexport type PeopleQuery = {\n    readonly response: PeopleQueryResponse;\n    readonly variables: PeopleQueryVariables;\n};\n\n\n\n/*\nquery PeopleQuery {\n  users {\n    all {\n      name\n      presence\n      avatar {\n        image48\n      }\n      status {\n        message\n        emoji\n      }\n      id\n    }\n  }\n  titles: documents(set: \"title\") {\n    all(criteria: {}) {\n      edges {\n        node {\n          text\n          subject\n          id\n        }\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"name\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"presence\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"avatar\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"Avatar\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"image48\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n},\nv3 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"status\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"Status\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"message\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"emoji\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n},\nv4 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv5 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"criteria\",\n    \"value\": {}\n  }\n],\nv6 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv7 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"subject\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv8 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"PeopleQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": \"all(criteria:{})\",\n            \"args\": (v5/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v6/*: any*/),\n                      (v7/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"PeopleQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v8/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": \"all(criteria:{})\",\n            \"args\": (v5/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v6/*: any*/),\n                      (v7/*: any*/),\n                      (v8/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"PeopleQuery\",\n    \"id\": null,\n    \"text\": \"query PeopleQuery {\\n  users {\\n    all {\\n      name\\n      presence\\n      avatar {\\n        image48\\n      }\\n      status {\\n        message\\n        emoji\\n      }\\n      id\\n    }\\n  }\\n  titles: documents(set: \\\"title\\\") {\\n    all(criteria: {}) {\\n      edges {\\n        node {\\n          text\\n          subject\\n          id\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '28094ab31a64fbe177811308b6004e81';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Criteria = {\n    readonly query?: string | null;\n    readonly subject?: string | null;\n    readonly speakers?: ReadonlyArray<string> | null;\n    readonly mentions?: ReadonlyArray<string> | null;\n};\nexport type ProfileQueryVariables = {\n    readonly name: string;\n    readonly titleCriteria: Criteria;\n};\nexport type ProfileQueryResponse = {\n    readonly users: {\n        readonly current: {\n            readonly avatar: {\n                readonly image192: string | null;\n            };\n            readonly topReactionsReceived: ReadonlyArray<{\n                readonly count: number;\n                readonly emoji: {\n                    readonly name: string;\n                    readonly url: string | null;\n                };\n            }>;\n            readonly topReactionsGiven: ReadonlyArray<{\n                readonly count: number;\n                readonly emoji: {\n                    readonly name: string;\n                    readonly url: string | null;\n                };\n            }>;\n        } | null;\n    };\n    readonly titles: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly text: string;\n                };\n            }>;\n        };\n    } | null;\n    readonly quotes: {\n        readonly rank: number;\n    } | null;\n};\nexport type ProfileQuery = {\n    readonly response: ProfileQueryResponse;\n    readonly variables: ProfileQueryVariables;\n};\n\n\n\n/*\nquery ProfileQuery(\n  $name: String!\n  $titleCriteria: Criteria!\n) {\n  users {\n    current: withName(name: $name) {\n      avatar {\n        image192\n      }\n      topReactionsReceived(limit: 10) {\n        count\n        emoji {\n          name\n          url\n        }\n      }\n      topReactionsGiven(limit: 10) {\n        count\n        emoji {\n          name\n          url\n        }\n      }\n      id\n    }\n  }\n  titles: documents(set: \"title\") {\n    all(first: 100, criteria: $titleCriteria) {\n      edges {\n        node {\n          text\n          id\n        }\n      }\n    }\n  }\n  quotes: documents(set: \"quote\") {\n    rank(speaker: $name)\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"titleCriteria\",\n    \"type\": \"Criteria!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"name\"\n  }\n],\nv2 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"avatar\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"Avatar\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"image192\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 10\n  }\n],\nv4 = [\n  {\n    \"kind\": \"ScalarField\",\n    \"alias\": null,\n    \"name\": \"count\",\n    \"args\": null,\n    \"storageKey\": null\n  },\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"emoji\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Emoji\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"name\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"url\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n],\nv5 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"topReactionsReceived\",\n  \"storageKey\": \"topReactionsReceived(limit:10)\",\n  \"args\": (v3/*: any*/),\n  \"concreteType\": \"EmojiCount\",\n  \"plural\": true,\n  \"selections\": (v4/*: any*/)\n},\nv6 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"topReactionsGiven\",\n  \"storageKey\": \"topReactionsGiven(limit:10)\",\n  \"args\": (v3/*: any*/),\n  \"concreteType\": \"EmojiCount\",\n  \"plural\": true,\n  \"selections\": (v4/*: any*/)\n},\nv7 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv8 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"criteria\",\n    \"variableName\": \"titleCriteria\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 100\n  }\n],\nv9 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv10 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": \"quotes\",\n  \"name\": \"documents\",\n  \"storageKey\": \"documents(set:\\\"quote\\\")\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"set\",\n      \"value\": \"quote\"\n    }\n  ],\n  \"concreteType\": \"DocumentSet\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"rank\",\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"speaker\",\n          \"variableName\": \"name\"\n        }\n      ],\n      \"storageKey\": null\n    }\n  ]\n},\nv11 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"ProfileQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": \"current\",\n            \"name\": \"withName\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": (v8/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v9/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      (v10/*: any*/)\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"ProfileQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": \"current\",\n            \"name\": \"withName\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v11/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": (v8/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v9/*: any*/),\n                      (v11/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      (v10/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"ProfileQuery\",\n    \"id\": null,\n    \"text\": \"query ProfileQuery(\\n  $name: String!\\n  $titleCriteria: Criteria!\\n) {\\n  users {\\n    current: withName(name: $name) {\\n      avatar {\\n        image192\\n      }\\n      topReactionsReceived(limit: 10) {\\n        count\\n        emoji {\\n          name\\n          url\\n        }\\n      }\\n      topReactionsGiven(limit: 10) {\\n        count\\n        emoji {\\n          name\\n          url\\n        }\\n      }\\n      id\\n    }\\n  }\\n  titles: documents(set: \\\"title\\\") {\\n    all(first: 100, criteria: $titleCriteria) {\\n      edges {\\n        node {\\n          text\\n          id\\n        }\\n      }\\n    }\\n  }\\n  quotes: documents(set: \\\"quote\\\") {\\n    rank(speaker: $name)\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '6909612b595759bd5819ae0b5de00978';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RandomQuoteQueryVariables = {};\nexport type RandomQuoteQueryResponse = {\n    readonly documents: {\n        readonly random: {\n            readonly found: boolean;\n            readonly text: string;\n        };\n    } | null;\n};\nexport type RandomQuoteQuery = {\n    readonly response: RandomQuoteQueryResponse;\n    readonly variables: RandomQuoteQueryVariables;\n};\n\n\n\n/*\nquery RandomQuoteQuery {\n  documents(set: \"quote\") {\n    random(criteria: {}) {\n      found\n      text\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"quote\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"criteria\",\n    \"value\": {}\n  }\n],\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"found\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv3 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RandomQuoteQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"quote\\\")\",\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"random\",\n            \"storageKey\": \"random(criteria:{})\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RandomQuoteQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"quote\\\")\",\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"random\",\n            \"storageKey\": \"random(criteria:{})\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"id\",\n                \"args\": null,\n                \"storageKey\": null\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RandomQuoteQuery\",\n    \"id\": null,\n    \"text\": \"query RandomQuoteQuery {\\n  documents(set: \\\"quote\\\") {\\n    random(criteria: {}) {\\n      found\\n      text\\n      id\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = 'b00c2b7f51b5eafc60256f9ab7e571dd';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Criteria = {\n    readonly query?: string | null;\n    readonly subject?: string | null;\n    readonly speakers?: ReadonlyArray<string> | null;\n    readonly mentions?: ReadonlyArray<string> | null;\n};\nexport type QuotePageQueryVariables = {\n    readonly c: Criteria;\n};\nexport type QuotePageQueryResponse = {\n    readonly documents: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly id: string | null;\n                    readonly text: string;\n                };\n            }>;\n            readonly pageInfo: {\n                readonly count: number;\n                readonly hasNextPage: boolean;\n            };\n        };\n    } | null;\n};\nexport type QuotePageQuery = {\n    readonly response: QuotePageQueryResponse;\n    readonly variables: QuotePageQueryVariables;\n};\n\n\n\n/*\nquery QuotePageQuery(\n  $c: Criteria!\n) {\n  documents(set: \"quote\") {\n    all(criteria: $c, first: 20) {\n      edges {\n        node {\n          id\n          text\n        }\n      }\n      pageInfo {\n        count\n        hasNextPage\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"c\",\n    \"type\": \"Criteria!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"documents\",\n    \"storageKey\": \"documents(set:\\\"quote\\\")\",\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"set\",\n        \"value\": \"quote\"\n      }\n    ],\n    \"concreteType\": \"DocumentSet\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"all\",\n        \"storageKey\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"criteria\",\n            \"variableName\": \"c\"\n          },\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"first\",\n            \"value\": 20\n          }\n        ],\n        \"concreteType\": \"DocumentConnection\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"edges\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"DocumentEdge\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"node\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"Document\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"id\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"text\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"pageInfo\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"PageInfo\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"count\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"hasNextPage\",\n                \"args\": null,\n                \"storageKey\": null\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"QuotePageQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"QuotePageQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"QuotePageQuery\",\n    \"id\": null,\n    \"text\": \"query QuotePageQuery(\\n  $c: Criteria!\\n) {\\n  documents(set: \\\"quote\\\") {\\n    all(criteria: $c, first: 20) {\\n      edges {\\n        node {\\n          id\\n          text\\n        }\\n      }\\n      pageInfo {\\n        count\\n        hasNextPage\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '6e063f623999a0dc41b92fe0b238d3ed';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type EventsQueryVariables = {};\nexport type EventsQueryResponse = {\n    readonly calendarURL: string;\n};\nexport type EventsQuery = {\n    readonly response: EventsQueryResponse;\n    readonly variables: EventsQueryVariables;\n};\n\n\n\n/*\nquery EventsQuery {\n  calendarURL\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"ScalarField\",\n    \"alias\": null,\n    \"name\": \"calendarURL\",\n    \"args\": null,\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"EventsQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"EventsQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"EventsQuery\",\n    \"id\": null,\n    \"text\": \"query EventsQuery {\\n  calendarURL\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '388cd7e5bbbedc329dded72e8648dbf6';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type ActionBarSubmitMutationVariables = {\n    readonly set: string;\n    readonly channel: string;\n    readonly lines: ReadonlyArray<string>;\n};\nexport type ActionBarSubmitMutationResponse = {\n    readonly createDocument: {\n        readonly id: string | null;\n    };\n};\nexport type ActionBarSubmitMutation = {\n    readonly response: ActionBarSubmitMutationResponse;\n    readonly variables: ActionBarSubmitMutationVariables;\n};\n\n\n\n/*\nmutation ActionBarSubmitMutation(\n  $set: String!\n  $channel: String!\n  $lines: [ID!]!\n) {\n  createDocument(set: $set, channel: $channel, lines: $lines) {\n    id\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"set\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"channel\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"lines\",\n    \"type\": \"[ID!]!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"createDocument\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"channel\",\n        \"variableName\": \"channel\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"lines\",\n        \"variableName\": \"lines\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"set\",\n        \"variableName\": \"set\"\n      }\n    ],\n    \"concreteType\": \"Document\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"ActionBarSubmitMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"ActionBarSubmitMutation\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"mutation\",\n    \"name\": \"ActionBarSubmitMutation\",\n    \"id\": null,\n    \"text\": \"mutation ActionBarSubmitMutation(\\n  $set: String!\\n  $channel: String!\\n  $lines: [ID!]!\\n) {\\n  createDocument(set: $set, channel: $channel, lines: $lines) {\\n    id\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '6207ead903199684c65e05bfe37267af';\nexport default node;\n","const NETWORK_ERROR_MARKER = Symbol(\"is-network-error\");\nconst GRAPHQL_ERROR_MARKER = Symbol(\"is-graphql-error\");\n\nexport interface NetworkError extends Error {\n  requestURL: string;\n  responseStatus: number;\n  responseText: string;\n  marker: typeof NETWORK_ERROR_MARKER;\n}\n\nexport interface GraphQLError extends Error {\n  requestURL: string;\n  errors: string[];\n  marker: typeof GRAPHQL_ERROR_MARKER;\n}\n\nexport function isNetworkError(err: Error | null): err is NetworkError {\n  return err ? (err as NetworkError).marker === NETWORK_ERROR_MARKER : false;\n}\n\nexport function isGraphQLError(err: Error | null): err is GraphQLError {\n  return err ? (err as GraphQLError).marker === GRAPHQL_ERROR_MARKER : false;\n}\n\nexport async function createNetworkError(\n  message: string,\n  url: string,\n  response: Response\n) {\n  const err = new Error(message) as NetworkError;\n  err.requestURL = url;\n  err.responseStatus = response.status;\n  err.responseText = await response.text();\n  err.marker = NETWORK_ERROR_MARKER;\n  return err as NetworkError;\n}\n\nexport function createGraphQLError(\n  message: string,\n  url: string,\n  errors: string[]\n) {\n  const err = new Error(message) as GraphQLError;\n  err.requestURL = url;\n  err.errors = [...errors];\n  return err;\n}\n","import {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  OperationType,\n  RequestParameters,\n  Variables,\n} from \"relay-runtime\";\n\nimport {createNetworkError, createGraphQLError} from \"./errors\";\n\nconst API_URL = `${process.env.REACT_APP_API_BASE_URL}/graphql`;\nexport const AUTH_URL = `${process.env.REACT_APP_API_BASE_URL}/auth/${process.env.REACT_APP_API_AUTH_TYPE}`;\n\nexport interface QueryResult<T extends OperationType> {\n  error: Error | null;\n  props: T[\"response\"] | null;\n  retry: (() => void) | null;\n}\n\nasync function fetchQuery(\n  request: RequestParameters,\n  variables: Variables\n): Promise<any> {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      query: request.text,\n      variables,\n    }),\n  });\n\n  if (response.ok) {\n    const payload = await response.json();\n    if (payload.errors) {\n      throw createGraphQLError(\n        `API server responded with GraphQL errors`,\n        API_URL,\n        payload.errors\n      );\n    }\n    return payload;\n  } else {\n    throw await createNetworkError(\n      `API server responded with ${response.status}`,\n      API_URL,\n      response\n    );\n  }\n}\n\nconst source = new RecordSource();\nconst network = Network.create(fetchQuery);\n\nexport function getEnvironment(): Environment {\n  const store = new Store(source);\n\n  return new Environment({\n    network,\n    store,\n  });\n}\n","import React, {useContext} from \"react\";\n\nimport {IUser} from \"./userTypes\";\n\nexport type IUser = IUser;\nexport const UserContext = React.createContext<IUser | null>(null);\n\ninterface RoleProps {\n  name: string;\n  children: JSX.Element;\n}\n\nexport const Role = (props: RoleProps) => {\n  const user = useContext(UserContext);\n  if (!user) return null;\n\n  const match = user.roles.some(role => role.name === props.name);\n  if (!match) return null;\n\n  return props.children;\n};\n","import React, {useState, useEffect} from \"react\";\n\nimport {Coordinator, IDelta} from \"./coordinator\";\n\nconst nullDelta: IDelta = {\n  units_to_add: [],\n  units_to_change: [],\n  units_to_restart: [],\n  units_to_remove: [],\n  files_to_write: [],\n};\n\nexport function hasPendingDelta(delta: IDelta) {\n  return [\n    delta.units_to_add,\n    delta.units_to_change,\n    delta.units_to_remove,\n    delta.units_to_restart,\n    delta.units_to_remove,\n    delta.files_to_write,\n  ].some(arr => arr.length > 0);\n}\n\nexport interface PendingDiff {\n  delta: IDelta;\n  refresh: () => void;\n}\n\nexport const PendingDiffContext = React.createContext<PendingDiff>({\n  delta: nullDelta,\n  refresh: () => {},\n});\n\ninterface PendingDiffProps {\n  coordinator: Coordinator;\n  children: JSX.Element;\n}\n\nexport function PendingDiffProvider(props: PendingDiffProps) {\n  const [delta, setDelta] = useState<IDelta>(nullDelta);\n  const [, setLatch] = useState(0);\n\n  useEffect(() => {\n    let ignore = false;\n\n    async function fetchDelta() {\n      const delta = await props.coordinator.getDiff().catch(() => nullDelta);\n      if (!ignore) {\n        setDelta(delta);\n      }\n    }\n\n    fetchDelta();\n    return () => {\n      ignore = true;\n    };\n  });\n\n  const pendingDiff = {\n    delta,\n    refresh: () => setLatch(current => current + 1),\n  };\n\n  return (\n    <PendingDiffContext.Provider value={pendingDiff}>\n      {props.children}\n    </PendingDiffContext.Provider>\n  );\n}\n","import React, {useContext} from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport {Role} from \"./common/Role\";\nimport {PendingDiffContext, hasPendingDelta} from \"./common/PendingDiff\";\n\ninterface PillProps {\n  to: string;\n  exact?: boolean;\n  children: React.ReactNode;\n}\n\nfunction Pill(props: PillProps) {\n  return (\n    <li role=\"presentation\" className=\"nav-item\">\n      <NavLink\n        to={props.to}\n        exact={props.exact}\n        className=\"nav-link\"\n        activeClassName={\"active\"}\n      >\n        {props.children}\n      </NavLink>\n    </li>\n  );\n}\n\nexport const SideNav = () => {\n  const showBadge = hasPendingDelta(useContext(PendingDiffContext).delta);\n\n  return (\n    <ul className=\"nav nav-pills flex-column\">\n      <Pill to=\"/\" exact>\n        dashboard\n      </Pill>\n      <Pill to=\"/people\">dramatis personae</Pill>\n      <Pill to=\"/recent\">recent chatter</Pill>\n      <hr />\n      <Pill to=\"/quotes\">quotes</Pill>\n      <Pill to=\"/events\">events</Pill>\n      <Role name=\"admin\">\n        <>\n          <hr />\n          <p className=\"bg-warning text-white font-weight-bold p-2 rounded text-center\">\n            <i className=\"fas fa-id-badge mr-2\" />\n            admin only\n          </p>\n          <Pill to=\"/admin/services\">services</Pill>\n          <Pill to=\"/admin/sync\">\n            sync{\" \"}\n            {showBadge && (\n              <span className=\"badge badge-info float-right\">pending</span>\n            )}\n          </Pill>\n        </>\n      </Role>\n    </ul>\n  );\n};\n","import React from \"react\";\n\nexport const Dashboard = () => (\n  <div className=\"card bg-light border border-info rounded\">\n    <div className=\"card-body\">\n      <h3 className=\"card-title\">Why hello there.</h3>\n      <p className=\"card-text\">\n        {\"Pretend there's something awesome written here.\"}\n      </p>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport interface User {\n  readonly name: string;\n  readonly presence: string;\n  readonly avatar: {image48: string | null};\n  readonly status: {readonly message: string | null};\n}\n\ninterface PersonProps {\n  user: User;\n  title: string;\n}\n\nexport function Person(props: PersonProps) {\n  const {name, presence, avatar, status} = props.user;\n  const avatarURL = avatar.image48;\n  const presenceIcon =\n    presence === \"ACTIVE\"\n      ? \"pushbot-status-active fa-dot-circle\"\n      : \"pushbot-status-inactive fa-circle\";\n  const {message} = status;\n\n  return (\n    <div className=\"pushbot-person row\">\n      <div className=\"col-xs-1 px-2\">\n        <img src={avatarURL!} className=\"rounded\" alt=\"\" />\n      </div>\n      <div className=\"col-xs-11 px-2\">\n        <p>\n          <i\n            className={`far pushbot-status mr-2 ${presenceIcon}`}\n            aria-hidden=\"true\"\n          />\n          <Link to={`/people/${name}`} className=\"pushbot-person-name mr-2\">\n            {name}\n          </Link>\n          <span className=\"pushbot-person-title font-weight-bold\">\n            {props.title}\n          </span>\n        </p>\n        <p className=\"pushbot-person-status-message font-italic font-weight-light\">\n          {message}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {User, Person} from \"./Person\";\n\nimport {PeopleQuery} from \"../__generated__/PeopleQuery.graphql\";\n\nimport \"./People.css\";\n\nexport class People extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query PeopleQuery {\n        users {\n          all {\n            name\n            presence\n\n            avatar {\n              image48\n            }\n\n            status {\n              message\n              emoji\n            }\n          }\n        }\n\n        titles: documents(set: \"title\") {\n          all(criteria: {}) {\n            edges {\n              node {\n                text\n                subject\n              }\n            }\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<PeopleQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QueryResult<PeopleQuery>) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    return (\n      <div>\n        <h3>Dramatis Personae</h3>\n        <blockquote className=\"blockquote text-right\">\n          Maybe the <em>real</em> lab was the friends we made along the way.\n        </blockquote>\n        <ul className=\"list-group\">\n          {this.collateUsers(props).map(({user, title}) => {\n            return (\n              <li key={user.name} className=\"list-group-item\">\n                <Person user={user} title={title} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  };\n\n  collateUsers(\n    props: QueryResult<PeopleQuery>[\"props\"]\n  ): {user: User; title: string}[] {\n    if (!props) {\n      return [];\n    }\n\n    const titles = props.titles;\n    if (!titles) {\n      return [];\n    }\n\n    const titlesByUsername: {[username: string]: string} = {};\n    for (const title of titles.all.edges) {\n      if (title.node.subject) {\n        titlesByUsername[title.node.subject] = title.node.text;\n      }\n    }\n\n    const userData = props.users.all.map(user => {\n      return {user, title: titlesByUsername[user.name] || \"\"};\n    });\n\n    userData.sort((a, b) => a.user.name.localeCompare(b.user.name));\n\n    return userData;\n  }\n}\n","import React, {Component} from \"react\";\nimport Chartist from \"chartist\";\n\nChartist.plugins = Chartist.plugins || {};\nChartist.plugins.ctHtmlLabels = function() {\n  return function(chart: any) {\n    chart.on(\"draw\", function(context: any) {\n      if (context.type === \"label\") {\n        context.element.empty()._node.innerHTML = context.text;\n      }\n    });\n  };\n};\n\ninterface ChartProps {\n  data: Chartist.IChartistData;\n  options: Chartist.IBarChartOptions;\n}\n\nexport class Chart extends Component<ChartProps> {\n  private refElement?: HTMLElement | null;\n  private chart?: Chartist.IChartistBarChart;\n\n  render() {\n    return (\n      <div\n        className=\"ct-chart ct-golden-section\"\n        ref={c => {\n          this.refElement = c;\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    const options = this.props.options || {};\n    options.plugins = [Chartist.plugins.ctHtmlLabels()];\n\n    this.chart = new Chartist.Bar(this.refElement, this.props.data, options);\n  }\n\n  componentWillUnmount() {\n    this.chart && this.chart.detach();\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport EmojiConverter from \"emoji-js\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {Chart} from \"../common/Chart\";\nimport {ProfileQuery} from \"../__generated__/ProfileQuery.graphql\";\n\nimport \"./Profile.css\";\n\ninterface ProfileProps {\n  match: {\n    params: {\n      name: string;\n    };\n  };\n}\n\ntype User = NonNullable<ProfileQuery[\"response\"][\"users\"][\"current\"]>;\n\ntype EmojiCount = User[\"topReactionsGiven\"] | User[\"topReactionsReceived\"];\n\nexport class Profile extends Component<ProfileProps> {\n  private environment: Environment;\n  private emoji: EmojiConverter;\n\n  constructor(props: ProfileProps) {\n    super(props);\n\n    this.environment = getEnvironment();\n    this.emoji = new EmojiConverter();\n\n    this.emoji.img_sets.apple.sheet = \"/sheet_apple_64.png\";\n    this.emoji.use_sheet = true;\n    this.emoji.include_title = true;\n  }\n\n  render() {\n    const query = graphql`\n      query ProfileQuery($name: String!, $titleCriteria: Criteria!) {\n        users {\n          current: withName(name: $name) {\n            avatar {\n              image192\n            }\n\n            topReactionsReceived(limit: 10) {\n              count\n              emoji {\n                name\n                url\n              }\n            }\n\n            topReactionsGiven(limit: 10) {\n              count\n              emoji {\n                name\n                url\n              }\n            }\n          }\n        }\n\n        titles: documents(set: \"title\") {\n          all(first: 100, criteria: $titleCriteria) {\n            edges {\n              node {\n                text\n              }\n            }\n          }\n        }\n\n        quotes: documents(set: \"quote\") {\n          rank(speaker: $name)\n        }\n      }\n    `;\n\n    const username = this.props.match.params.name;\n    const variables = {\n      name: username,\n      titleCriteria: {subject: username},\n    };\n\n    return (\n      <QueryRenderer<ProfileQuery>\n        environment={this.environment}\n        query={query}\n        variables={variables}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QueryResult<ProfileQuery>) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    if (!props) {\n      return (\n        <div className=\"pushbot-loading\">\n          <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n          sluuuuurp\n        </div>\n      );\n    }\n\n    const user = props.users.current;\n    if (!user) {\n      return null;\n    }\n\n    const avatar = user.avatar.image192 || \"\";\n\n    return (\n      <div className=\"pushbot-profile row\">\n        <div className=\"col-md-6\">\n          <img\n            className=\"pushbot-profile-avatar img-responsive img-rounded\"\n            src={avatar}\n            alt=\"\"\n          />\n          {this.renderReactionsReceivedChart(user)}\n          {this.renderReactionsGivenChart(user)}\n        </div>\n        <div className=\"col-md-6\">\n          <h1 className=\"pushbot-profile-username\">\n            @{this.props.match.params.name}\n          </h1>\n          {this.renderTitles(props)}\n          {this.renderQuoteRank(props)}\n        </div>\n      </div>\n    );\n  };\n\n  renderReactionsGivenChart(user: User) {\n    return this.renderReactionChart(\n      user.topReactionsGiven,\n      \"Emoji reactions given\"\n    );\n  }\n\n  renderReactionsReceivedChart(user: User) {\n    return this.renderReactionChart(\n      user.topReactionsReceived,\n      \"Emoji reactions received\"\n    );\n  }\n\n  renderReactionChart(results: EmojiCount, name: string) {\n    const data = {\n      labels: results.map(each => {\n        if (each.emoji.url) {\n          return `<img class=\"emoji\" alt=\"${each.emoji.name}\" src=\"${each.emoji.url}\" title=\"${each.emoji.name}\">`;\n        }\n\n        return this.emoji.replace_colons(`:${each.emoji.name}:`);\n      }),\n      series: [results.map(each => each.count)],\n    };\n\n    const options = {\n      low: 0,\n      axisY: {\n        onlyInteger: true,\n      },\n    };\n\n    return (\n      <p className=\"pushbot-profile-reaction-chart\">\n        <h4>{name}</h4>\n        <Chart data={data} options={options} />\n      </p>\n    );\n  }\n\n  renderTitles(props: NonNullable<QueryResult<ProfileQuery>[\"props\"]>) {\n    const edges = props.titles ? props.titles.all.edges : [];\n    if (edges.length === 0) {\n      return (\n        <p className=\"pushbot-profile-titles-empty\">\n          No titles yet. Set one with{\" \"}\n          <code>!settitle {this.props.match.params.name}: ...</code>.\n        </p>\n      );\n    }\n\n    return (\n      <p className=\"pushbot-profile-titles\">\n        {edges.map(t => this.titleFrom(t.node.text))}\n      </p>\n    );\n  }\n\n  renderQuoteRank(props: NonNullable<QueryResult<ProfileQuery>[\"props\"]>) {\n    if (!props.quotes) {\n      return (\n        <p className=\"pushbot-profile-quoterank\">\n          You have not yet been immortalized in the quotefile.\n        </p>\n      );\n    }\n\n    const rank = props.quotes.rank;\n    return (\n      <p className=\"pushbot-profile-quoterank\">\n        Rank #{rank} in the quotefile.\n      </p>\n    );\n  }\n\n  titleFrom(title: string) {\n    if (/^https?:/.test(title)) {\n      return (\n        <img\n          className=\"pushbot-profile-title img-responsive\"\n          alt=\"\"\n          src={title}\n        />\n      );\n    }\n\n    return <span className=\"pushbot-profile-title\">{title}</span>;\n  }\n}\n","export interface QueryModeCases<R> {\n  containing?(): R;\n  by?(): R;\n  about?(): R;\n  default?(): R;\n}\n\nexport interface QueryMode {\n  when<R>(cases: QueryModeCases<R>): R | null;\n  label: string;\n}\n\nexport const CONTAINING: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.containing || cases.default || (() => null))();\n  },\n\n  label: \"containing\",\n};\n\nexport const BY: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.by || cases.default || (() => null))();\n  },\n\n  label: \"by\",\n};\n\nexport const ABOUT: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.about || cases.default || (() => null))();\n  },\n\n  label: \"about\",\n};\n\nexport const modes: QueryMode[] = [CONTAINING, BY, ABOUT];\n","import React from \"react\";\n\ninterface QuoteProps {\n  text: string;\n}\n\nexport function Quote(props: QuoteProps) {\n  return (\n    <blockquote className=\"mx-md-2 pushbot-quote\">\n      <p>{props.text}</p>\n    </blockquote>\n  );\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {RandomQuoteQuery, RandomQuoteResult} from \"./queryTypes\";\nimport {Quote} from \"./Quote\";\n\ninterface RandomQuoteState {\n  environment: Environment;\n}\n\nexport class RandomQuote extends Component<{}, RandomQuoteState> {\n  private lastQuote: string | null;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.lastQuote = null;\n    this.state = {\n      environment: getEnvironment(),\n    };\n  }\n\n  render() {\n    const query = graphql`\n      query RandomQuoteQuery {\n        documents(set: \"quote\") {\n          random(criteria: {}) {\n            found\n            text\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<RandomQuoteQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: RandomQuoteResult) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    const quoteText = props ? props.documents!.random.text : this.lastQuote;\n\n    if (!quoteText) {\n      return null;\n    }\n\n    this.lastQuote = quoteText;\n\n    return (\n      <div className=\"pushbot-random-quote card border-0\">\n        <div className=\"card-body\">\n          <p className=\"card-text\">\n            Type a search term above to find specific quotes. In the meantime,\n            enjoy this random quote.\n          </p>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-sm\"\n            onClick={this.another}\n          >\n            <i className=\"fas fa-sync\" aria-hidden=\"true\" />\n            Another\n          </button>\n        </div>\n        <Quote text={quoteText} />\n      </div>\n    );\n  };\n\n  another = () => {\n    this.setState({\n      environment: getEnvironment(),\n    });\n  };\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {Quote} from \"./Quote\";\nimport {getEnvironment} from \"../common/Transport\";\nimport {QueryMode} from \"./queryMode\";\nimport {QuotePageQuery, QuotePageResult, IQuotes} from \"./queryTypes\";\n\ninterface QuotePageProps {\n  query: string;\n  people: string[];\n  mode: QueryMode;\n}\n\nexport class QuotePage extends Component<QuotePageProps> {\n  private environment: Environment;\n  private lastTotal: number | null;\n  private lastResults: IQuotes | null;\n\n  constructor(props: QuotePageProps) {\n    super(props);\n    this.environment = getEnvironment();\n    this.lastTotal = null;\n    this.lastResults = null;\n  }\n\n  render() {\n    const query = graphql`\n      query QuotePageQuery($c: Criteria!) {\n        documents(set: \"quote\") {\n          all(criteria: $c, first: 20) {\n            edges {\n              node {\n                id\n                text\n              }\n            }\n\n            pageInfo {\n              count\n              hasNextPage\n            }\n          }\n        }\n      }\n    `;\n\n    const criteria: any = {query: this.props.query};\n    this.props.mode.when({\n      by: () => {\n        criteria.speakers = this.props.people;\n      },\n      about: () => {\n        criteria.mentions = this.props.people;\n      },\n    });\n\n    const variables = {\n      c: criteria,\n    };\n\n    return (\n      <QueryRenderer<QuotePageQuery>\n        environment={this.environment}\n        query={query}\n        variables={variables}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QuotePageResult) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    if (!props && !this.lastResults) {\n      return (\n        <div className=\"pushbot-loading\">\n          <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n          performing query\n        </div>\n      );\n    } else if (!props && this.lastResults && this.lastTotal) {\n      return this.renderDocuments(this.lastTotal, this.lastResults);\n    } else if (props) {\n      this.lastTotal = props.documents!.all.pageInfo.count;\n      this.lastResults = props.documents!.all.edges;\n\n      return this.renderDocuments(this.lastTotal, this.lastResults);\n    }\n  };\n\n  renderDocuments(total: number, documents: IQuotes) {\n    const quotes = documents.map(document => {\n      return <Quote key={document.node.id!} text={document.node.text} />;\n    });\n\n    const more = documents.length < total ? \"the first of\" : \"\";\n    const plural = total === 1 ? `matching quote` : `matching quotes`;\n\n    return (\n      <div className=\"pushbot-results card border-0\">\n        <div className=\"card-body\">\n          <p>\n            Showing {more} <strong>{total}</strong> {plural}.\n          </p>\n        </div>\n        {quotes}\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\n\nimport {QueryMode, CONTAINING, BY, ABOUT, modes} from \"./queryMode\";\nimport {RandomQuote} from \"./RandomQuote\";\nimport {QuotePage} from \"./QuotePage\";\n\nimport \"./Quotes.css\";\n\ninterface Search {\n  query: string;\n  people: string;\n  mode: QueryMode;\n}\n\nexport class Quotes extends Component {\n  readSearch(): Search {\n    const params = new URLSearchParams(window.location.search);\n\n    let mode = CONTAINING;\n    let people = \"\";\n    if (params.has(\"by\")) {\n      mode = BY;\n      people = params.get(\"by\")!;\n    } else if (params.has(\"about\")) {\n      mode = ABOUT;\n      people = params.get(\"about\")!;\n    }\n\n    return {\n      query: params.get(\"q\") || \"\",\n      people,\n      mode,\n    };\n  }\n\n  writeSearch(changes: Partial<Search>) {\n    const previous = this.readSearch();\n    const current = Object.assign(previous, changes);\n\n    const params = new URLSearchParams();\n\n    current.mode.when({\n      by: () => params.set(\"by\", current.people),\n      about: () => params.set(\"about\", current.people),\n    });\n    if (current.query.length) {\n      params.set(\"q\", current.query);\n    }\n\n    const nextSearch = params.toString();\n    const nextURL =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname +\n      (nextSearch.length > 0 ? \"?\" + nextSearch : \"\") +\n      window.location.hash;\n\n    if (window.history.replaceState) {\n      window.history.replaceState({}, \"\", nextURL);\n    } else {\n      window.location.href = nextURL;\n    }\n    this.forceUpdate();\n  }\n\n  render() {\n    const search = this.readSearch();\n    const showPeople = search.mode.when({\n      containing: () => false,\n      by: () => true,\n      about: () => true,\n    });\n\n    return (\n      <div>\n        <form\n          className={`pushbot-quote-form form-inline pushbot-mode-${search.mode.label}`}\n        >\n          <select\n            className=\"pushbot-quote-mode form-control\"\n            value={search.mode.label}\n            onChange={this.didChangeMode}\n          >\n            {modes.map((mode, index) => {\n              return (\n                <option key={index} value={mode.label}>\n                  {mode.label}\n                </option>\n              );\n            })}\n          </select>\n          {showPeople && (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"pushbot-quote-people\"\n              placeholder=\"fenris, iguanaditty\"\n              value={search.people}\n              onChange={this.didChangePeople}\n            />\n          )}\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"pushbot-quote-query\"\n            placeholder='\"query\"'\n            value={search.query}\n            onChange={this.didChangeQuery}\n          />\n        </form>\n        {this.renderResult(search)}\n      </div>\n    );\n  }\n\n  renderResult(search: Search) {\n    const people = search.people\n      .split(/[,+;]|\\s/)\n      .map(person => person.replace(/^@/, \"\"))\n      .map(person => person.trim())\n      .filter(person => person.length > 0);\n\n    const noQuery = search.mode.when({\n      containing: () => search.query.length === 0,\n      by: () => people.length === 0,\n      about: () => people.length === 0,\n    });\n\n    if (noQuery) {\n      return <RandomQuote />;\n    } else {\n      return (\n        <QuotePage mode={search.mode} people={people} query={search.query} />\n      );\n    }\n  }\n\n  didChangeMode = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const mode = modes.find(mode => mode.label === event.target.value);\n    this.writeSearch({mode});\n  };\n\n  didChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.writeSearch({query: event.target.value});\n  };\n\n  didChangePeople = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.writeSearch({people: event.target.value});\n  };\n}\n","import React, {Component} from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\ninterface FeedFormProps {\n  ready: boolean;\n  feedURL: string;\n}\n\ninterface FeedFormState {\n  copied: boolean;\n}\n\nexport class FeedForm extends Component<FeedFormProps, FeedFormState> {\n  state = {\n    copied: false,\n  };\n\n  render() {\n    const btnClass = this.state.copied\n      ? \"btn btn-success\"\n      : \"btn btn-secondary\";\n    const btnMessage = this.state.copied ? \"Copied\" : \"Copy\";\n\n    return (\n      <p className=\"form-inline\">\n        <input\n          type=\"text\"\n          id=\"pushbot-events-feedurl\"\n          className=\"form-control\"\n          value={this.props.feedURL}\n          readOnly\n        />\n        <CopyToClipboard\n          text={this.props.feedURL}\n          onCopy={() => this.setState({copied: true})}\n        >\n          <button className={btnClass} disabled={!this.props.ready}>\n            {btnMessage}\n          </button>\n        </CopyToClipboard>\n      </p>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {FeedForm} from \"./FeedForm\";\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\n\nimport {EventsQuery} from \"../__generated__/EventsQuery.graphql\";\n\nimport \"./Events.css\";\n\nexport class Events extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query EventsQuery {\n        calendarURL\n      }\n    `;\n\n    return (\n      <QueryRenderer<EventsQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = (result: QueryResult<EventsQuery>) => {\n    return (\n      <div>\n        <h3>Goings On and Happenings</h3>\n        {this.renderResultBody(result)}\n      </div>\n    );\n  };\n\n  renderResultBody({error, props}: QueryResult<EventsQuery>) {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    const ready = Boolean(props);\n    const feedURL = props ? props.calendarURL : \"...\";\n\n    return (\n      <div>\n        <p>\n          Keep up with #~s events planned in the <code>#events</code> channel\n          with your own, personal iCal feed.\n        </p>\n        <FeedForm ready={ready} feedURL={feedURL} />\n        <p>\n          Subscribe to this URL with any compatible calendar software, including{\" \"}\n          <a\n            href=\"https://calendar.google.com/calendar/r/settings/addbyurl\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Google calendar\n          </a>\n          .\n        </p>\n      </div>\n    );\n  }\n}\n","import {QueryResult} from \"../common/Transport\";\n\nimport {\n  RecentChannelQuery,\n  RecentChannelQueryVariables,\n  RecentChannelQueryResponse,\n} from \"../__generated__/RecentChannelQuery.graphql\";\n\nimport {\n  RecentHistoryQuery,\n  RecentHistoryQueryVariables,\n  RecentHistoryQueryResponse,\n} from \"../__generated__/RecentHistoryQuery.graphql\";\n\nexport type RecentChannelQuery = RecentChannelQuery;\nexport type RecentChannelQueryVariables = RecentChannelQueryVariables;\nexport type RecentChannelQueryResponse = RecentChannelQueryResponse;\nexport type RecentChannelResult = QueryResult<RecentChannelQuery>;\n\nexport type RecentHistoryQuery = RecentHistoryQuery;\nexport type RecentHistoryQueryVariables = RecentHistoryQueryVariables;\nexport type RecentHistoryQueryResponse = RecentHistoryQueryResponse;\nexport type RecentHistoryResult = QueryResult<RecentHistoryQuery>;\n\nexport type ILine = NonNullable<\n  RecentHistoryQueryResponse[\"cache\"][\"linesForChannel\"]\n>[0];\n\nexport const ALL = Symbol(\"all\");\n\nexport type IChange = ILine | typeof ALL;\n\nexport interface IDisposable {\n  dispose(): void;\n}\n","import {IChange, ILine, IDisposable, ALL} from \"./queryTypes\";\n\nexport class Selection {\n  public isSelecting: boolean;\n  private ids: Set<string>;\n  private subs: ((arg: IChange) => any)[];\n\n  constructor() {\n    this.ids = new Set();\n    this.isSelecting = false;\n    this.subs = [];\n  }\n\n  onDidChange(cb: (arg: IChange) => any): IDisposable {\n    this.subs.push(cb);\n    return {\n      dispose: () => {\n        const index = this.subs.indexOf(cb);\n        this.subs.splice(index, 1);\n      },\n    };\n  }\n\n  didChange(payload: IChange) {\n    for (const sub of this.subs) {\n      sub(payload);\n    }\n  }\n\n  isSelected(line: ILine): boolean {\n    return this.ids.has(line.id!);\n  }\n\n  select(line: ILine): boolean {\n    const wasSelected = this.ids.has(line.id!);\n    this.ids.add(line.id!);\n    if (!wasSelected) this.didChange(line);\n    return !wasSelected;\n  }\n\n  startSelecting() {\n    this.isSelecting = true;\n  }\n\n  stopSelecting() {\n    this.isSelecting = false;\n  }\n\n  toggle(line: ILine) {\n    if (!this.ids.delete(line.id!)) {\n      this.ids.add(line.id!);\n    }\n    this.didChange(line);\n  }\n\n  clear() {\n    this.ids.clear();\n    this.didChange(ALL);\n  }\n\n  getLineIDs(): string[] {\n    return Array.from(this.ids);\n  }\n\n  isEmpty(): boolean {\n    return this.ids.size === 0;\n  }\n\n  describe(): string {\n    if (this.ids.size === 0) {\n      return \"nothing selected\";\n    } else if (this.ids.size === 1) {\n      return \"1 line selected\";\n    } else {\n      return `${this.ids.size} lines selected`;\n    }\n  }\n}\n","import React, {Component} from \"react\";\nimport moment from \"moment\";\n\nimport {ILine, IDisposable, ALL} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\n\ninterface LineProps {\n  previous?: ILine;\n  line: ILine;\n  selection: Selection;\n}\n\nexport class Line extends Component<LineProps> {\n  private sub?: IDisposable;\n\n  componentDidMount() {\n    this.sub = this.props.selection.onDidChange(kind => {\n      if (kind === ALL) this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.sub && this.sub.dispose();\n  }\n\n  render() {\n    const {line, previous} = this.props;\n    const ts = moment(parseInt(line.timestamp));\n    const sameSpeaker = previous && previous.speaker!.id === line.speaker!.id;\n\n    const lineClasses = [\"pushbot-line\"];\n    if (this.props.selection.isSelected(line))\n      lineClasses.push(\"pushbot-line-selected\");\n\n    let speakerBanner = null;\n    if (!sameSpeaker) {\n      speakerBanner = (\n        <div className=\"pushbot-speaker-banner\">\n          <span className=\"pushbot-line-avatar\">\n            <img src={line.speaker!.avatar!.image32!} alt=\"\" />\n          </span>\n          <span className=\"pushbot-line-name\">{line.speaker!.name}</span>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className={lineClasses.join(\" \")}\n        onMouseDown={this.didMouseDown}\n        onMouseMove={this.didMouseMove}\n      >\n        {speakerBanner}\n        <span className=\"pushbot-line-timestamp\">{ts.format(\"h:mm:ss\")}</span>\n        <span className=\"pushbot-line-text\">{line.text}</span>\n      </div>\n    );\n  }\n\n  didMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (event.button !== 0) return;\n\n    event.preventDefault();\n    this.props.selection.toggle(this.props.line);\n    this.props.selection.startSelecting();\n    this.forceUpdate();\n  };\n\n  didMouseMove = (event: React.MouseEvent) => {\n    if (!this.props.selection.isSelecting) return;\n\n    event.preventDefault();\n    if (this.props.selection.select(this.props.line)) {\n      this.forceUpdate();\n    }\n  };\n}\n","import React, {Component} from \"react\";\n\nimport {ILine} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {Line} from \"./Line\";\n\ninterface HistoryProps {\n  lines: ReadonlyArray<ILine> | null;\n  selection: Selection;\n}\n\nexport class History extends Component<HistoryProps> {\n  private bottom?: HTMLElement | null;\n\n  componentDidMount() {\n    window.addEventListener(\"mouseup\", this.didMouseUp);\n\n    this.bottom && this.bottom.scrollIntoView();\n  }\n\n  componentDidUpdate() {\n    this.bottom && this.bottom.scrollIntoView();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\", this.didMouseUp);\n  }\n\n  render() {\n    if (this.props.lines === null) {\n      return this.renderLoading();\n    } else {\n      return this.renderLines();\n    }\n  }\n\n  renderLoading() {\n    return (\n      <div className=\"pushbot-history border pushbot-loading\">\n        <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n        loading\n      </div>\n    );\n  }\n\n  renderLines() {\n    return (\n      <div\n        className=\"pushbot-history border pushbot-history-loaded\"\n        onMouseOut={this.didMouseOut}\n      >\n        {this.props.lines!.map((line, i) => {\n          return (\n            <Line\n              key={line.id!}\n              line={line}\n              previous={this.props.lines![i - 1]}\n              selection={this.props.selection}\n            />\n          );\n        })}\n        <div\n          ref={element => {\n            this.bottom = element;\n          }}\n        />\n      </div>\n    );\n  }\n\n  didMouseUp = () => {\n    this.props.selection.stopSelecting();\n  };\n\n  didMouseOut = () => {\n    this.props.selection.stopSelecting();\n  };\n}\n","import React, {Component} from \"react\";\nimport {Environment, commitMutation} from \"relay-runtime\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {IDisposable} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {Role} from \"../common/Role\";\n\ninterface ActionBarProps {\n  environment: Environment;\n  channel: string;\n  selection: Selection;\n}\n\nexport class ActionBar extends Component<ActionBarProps> {\n  private sub?: IDisposable;\n  private didSubmitQuote: () => void;\n  private didSubmitLim: () => void;\n\n  constructor(props: ActionBarProps) {\n    super(props);\n\n    this.didSubmitQuote = this.submit.bind(this, \"quote\");\n    this.didSubmitLim = this.submit.bind(this, \"lim\");\n  }\n\n  componentDidMount() {\n    this.sub = this.props.selection.onDidChange(() => this.forceUpdate());\n  }\n\n  componentWillUnmount() {\n    this.sub && this.sub.dispose();\n  }\n\n  render() {\n    const textClassNames = [\"text-muted\"];\n    let clearBtn = null;\n    let disable = true;\n    if (this.props.selection.isEmpty()) {\n      textClassNames.push(\"pushbot-empty\");\n    } else {\n      disable = false;\n      clearBtn = (\n        <button className=\"btn btn-link\" onClick={this.didClear}>\n          clear\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"pushbot-recent-actions\">\n        <p className={textClassNames.join(\" \")}>\n          {this.props.selection.describe()}\n          {clearBtn}\n        </p>\n        <div className=\"btn-group pushbot-recent-actions\">\n          <Role name=\"quote pontiff\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={disable}\n              onClick={this.didSubmitQuote}\n            >\n              Quote\n            </button>\n          </Role>\n          <Role name=\"poet laureate\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={disable}\n              onClick={this.didSubmitLim}\n            >\n              Limerick\n            </button>\n          </Role>\n        </div>\n      </div>\n    );\n  }\n\n  didClear = () => {\n    this.props.selection.clear();\n  };\n\n  submit(set: string) {\n    if (!this.props.channel) return;\n\n    const mutation = graphql`\n      mutation ActionBarSubmitMutation(\n        $set: String!\n        $channel: String!\n        $lines: [ID!]!\n      ) {\n        createDocument(set: $set, channel: $channel, lines: $lines) {\n          id\n        }\n      }\n    `;\n\n    const variables = {\n      set,\n      channel: this.props.channel,\n      lines: this.props.selection.getLineIDs(),\n    };\n\n    commitMutation(this.props.environment, {\n      mutation,\n      variables,\n      onCompleted: () => this.props.selection.clear(),\n    });\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {Environment} from \"relay-runtime\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {\n  ILine,\n  RecentChannelQuery,\n  RecentChannelResult,\n  RecentHistoryQuery,\n  RecentHistoryResult,\n} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {History} from \"./History\";\nimport {ActionBar} from \"./ActionBar\";\n\nimport \"./Recent.css\";\n\ninterface RecentState {\n  environment: Environment;\n  currentChannel: string | null;\n  selection: Selection;\n}\n\nexport class Recent extends Component<{}, RecentState> {\n  private knownChannels: ReadonlyArray<string> | null;\n  private history: ReadonlyArray<ILine> | null;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.knownChannels = null;\n    this.history = null;\n\n    this.state = {\n      environment: getEnvironment(),\n      currentChannel: null,\n      selection: new Selection(),\n    };\n    this.didChangeChannel = this.didChangeChannel.bind(this);\n  }\n\n  render() {\n    if (this.knownChannels === null) {\n      return this.renderChannelQuery();\n    }\n\n    return this.renderHistoryQuery();\n  }\n\n  renderError(error: Error) {\n    return (\n      <div className=\"pushbot-recent pushbot-recent-error\">\n        <h3>Recent Chatter</h3>\n        <form className=\"pushbot-recent-form form-inline\">\n          <select\n            className=\"pushbot-recent-channel form-control\"\n            value=\"...\"\n            disabled\n          >\n            <option value=\"...\">...</option>\n          </select>\n        </form>\n        <div className=\"pushbot-error-message\">{error.message}</div>\n      </div>\n    );\n  }\n\n  renderChannelQuery() {\n    const query = graphql`\n      query RecentChannelQuery {\n        cache {\n          knownChannels\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<RecentChannelQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={{}}\n        render={this.renderChannelResult}\n      />\n    );\n  }\n\n  renderChannelResult = ({error, props}: RecentChannelResult) => {\n    if (error) {\n      return this.renderError(error);\n    }\n\n    const channelNames = props ? props.cache.knownChannels : this.knownChannels;\n    return this.renderCurrent(channelNames || [], null);\n  };\n\n  renderHistoryQuery() {\n    const query = graphql`\n      query RecentHistoryQuery($channel: String!) {\n        cache {\n          knownChannels\n          linesForChannel(channel: $channel) {\n            id\n            speaker {\n              id\n              name\n              avatar {\n                image32\n              }\n            }\n            timestamp\n            text\n          }\n        }\n      }\n    `;\n\n    const variables = {\n      channel: this.state.currentChannel || \"\",\n    };\n\n    return (\n      <QueryRenderer<RecentHistoryQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={variables}\n        render={this.renderHistoryResult}\n      />\n    );\n  }\n\n  renderHistoryResult = ({error, props}: RecentHistoryResult) => {\n    if (error) {\n      return this.renderError(error);\n    }\n\n    const channelNames = props ? props.cache.knownChannels : this.knownChannels;\n    const history = props ? props.cache.linesForChannel : this.history;\n\n    return this.renderCurrent(channelNames, history);\n  };\n\n  renderCurrent(\n    channelNames: ReadonlyArray<string> | null,\n    history: ReadonlyArray<ILine> | null\n  ) {\n    if (channelNames) {\n      if (!this.state.currentChannel && channelNames.length > 0) {\n        setTimeout(() => this.setState({currentChannel: channelNames[0]}), 0);\n      }\n      this.knownChannels = channelNames;\n    }\n\n    if (history) {\n      this.history = history;\n    }\n\n    const displayChannelNames = channelNames || [\"...\"];\n    const displayChannel = this.state.currentChannel || \"...\";\n\n    return (\n      <div className=\"pushbot-recent\">\n        <h3>Recent Chatter</h3>\n        <form className=\"pushbot-recent-form form-inline\">\n          <label className=\"mr-md-3\" htmlFor=\"pushbot-recent-channel\">\n            Channel\n          </label>\n          <div className=\"input-group\">\n            <select\n              className=\"pushbot-recent-channel form-control input-group-prepend\"\n              id=\"pushbot-recent-channel\"\n              value={displayChannel}\n              disabled={!channelNames}\n              onChange={this.didChangeChannel}\n            >\n              {displayChannelNames.map(name => {\n                return (\n                  <option key={name} value={name}>\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n            <button\n              className=\"btn btn-secondary pushbot-recent-refresh\"\n              onClick={this.refresh}\n            >\n              <i className=\"fas fa-sync\" aria-hidden /> Refresh\n            </button>\n          </div>\n        </form>\n        <History lines={history} selection={this.state.selection} />\n        <ActionBar\n          environment={this.state.environment}\n          channel={this.state.currentChannel || \"\"}\n          selection={this.state.selection}\n        />\n      </div>\n    );\n  }\n\n  didChangeChannel = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.history = null;\n    this.state.selection.clear();\n    this.setState({currentChannel: event.target.value});\n  };\n\n  refresh = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    this.setState({environment: getEnvironment()});\n  };\n}\n","import React from \"react\";\nimport {createNetworkError} from \"./errors\";\n\nconst COORDINATOR_URL = `${process.env.REACT_APP_AZ_COORDINATOR_URL}`;\n\nexport type ServiceType = \"simple\" | \"oneshot\" | \"timer\" | \"self\";\n\nexport interface IContainer {\n  name?: string;\n  image_name: string;\n  image_tag: string;\n}\n\nexport interface IEnvMap {\n  [varName: string]: string;\n}\n\nexport interface IPortMap {\n  [hostPort: string]: number;\n}\n\nexport interface IVolumeMap {\n  [hostPath: string]: string;\n}\n\ninterface IDesiredUnitCommon {\n  type: ServiceType;\n  secrets: string[];\n  env: IEnvMap;\n  ports: IPortMap;\n  volumes: IVolumeMap;\n  container?: IContainer;\n  calendar?: string;\n}\n\nexport interface IDesiredUnit extends IDesiredUnitCommon {\n  id: number;\n  path: string;\n}\n\nexport interface IDesiredUnitCreate extends IDesiredUnitCommon {\n  path: string;\n}\n\nexport interface IDesiredUnitUpdate extends IDesiredUnitCommon {}\n\nexport interface IDesiredState {\n  units: IDesiredUnit[];\n}\n\nexport interface IActualUnit {\n  path: string;\n}\n\nexport interface IActualState {\n  units: IActualUnit[];\n}\n\nexport interface ISecretsCreate {\n  [secretName: string]: string;\n}\n\nexport type ISecretsDelete = string[];\n\nexport type ISecrets = string[];\n\nexport interface IDelta {\n  units_to_add: IDesiredUnit[];\n  units_to_change: IDesiredUnit[];\n  units_to_restart: IDesiredUnit[];\n  units_to_remove: IActualUnit[];\n  files_to_write: string[];\n}\n\nexport interface ISyncReport {\n  timestamp: number;\n  elapsed: number;\n  message: string;\n}\n\nexport interface ISync {\n  in_progress: boolean;\n  reports: ISyncReport[];\n  errors: string[];\n  delta?: IDelta;\n}\n\nexport class Coordinator {\n  constructor(private readonly token: string) {}\n\n  async getDesiredState(): Promise<IDesiredState> {\n    return this.requestJSON<IDesiredState>(\"GET\", \"/desired\");\n  }\n\n  async createDesiredUnit(unit: IDesiredUnitCreate): Promise<IDesiredUnit> {\n    return this.requestJSON<IDesiredUnit>(\"POST\", \"/desired\", unit);\n  }\n\n  async updateDesiredUnit(\n    id: number,\n    unit: IDesiredUnitUpdate\n  ): Promise<IDesiredUnit> {\n    return this.requestJSON<IDesiredUnit>(\n      \"PUT\",\n      `/desired/${encodeURIComponent(id.toString())}`,\n      unit\n    );\n  }\n\n  async deleteDesiredUnit(id: number): Promise<void> {\n    await this.request(\n      \"DELETE\",\n      `/desired/${encodeURIComponent(id.toString())}`\n    );\n  }\n\n  async getActualUnits(): Promise<IActualState> {\n    return this.requestJSON<IActualState>(\"GET\", \"/actual\");\n  }\n\n  async getSecrets(): Promise<ISecrets> {\n    return this.requestJSON<ISecrets>(\"GET\", \"/secrets\");\n  }\n\n  async createSecrets(secrets: ISecretsCreate): Promise<void> {\n    await this.request(\"POST\", \"/secrets\", secrets);\n  }\n\n  async deleteSecrets(secretNames: ISecretsDelete): Promise<void> {\n    await this.request(\"DELETE\", \"/secrets\", secretNames);\n  }\n\n  async getDiff(): Promise<IDelta> {\n    return this.requestJSON<IDelta>(\"GET\", \"/diff\");\n  }\n\n  async getSync(): Promise<ISync> {\n    return this.requestJSON<ISync>(\"GET\", \"/sync\");\n  }\n\n  async createSync(): Promise<void> {\n    await this.request(\"POST\", \"/sync\");\n  }\n\n  isPresent(): boolean {\n    return true;\n  }\n\n  protected async request(\n    method: string,\n    subPath: string,\n    payload?: any\n  ): Promise<Response> {\n    const url = `${COORDINATOR_URL}${subPath}`;\n    const headers: HeadersInit = {\n      Authorization: `Basic ${btoa(\"token:\" + this.token)}`,\n    };\n\n    const options: RequestInit = {\n      method,\n      headers,\n      credentials: \"include\",\n    };\n\n    if (payload) {\n      headers[\"Content-Type\"] = \"application/json\";\n      options.body = JSON.stringify(payload);\n    }\n\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw await createNetworkError(\n        \"Unable to contact coordinator\",\n        url,\n        response\n      );\n    }\n    return response;\n  }\n\n  protected async requestJSON<R>(\n    method: string,\n    subPath: string,\n    payload?: any\n  ): Promise<R> {\n    const response = await this.request(method, subPath, payload);\n    return response.json() as any;\n  }\n}\n\nclass NullCoordinator extends Coordinator {\n  protected async request(): Promise<any> {\n    throw new Error(\"Coordinator is not available\");\n  }\n\n  isPresent(): boolean {\n    return false;\n  }\n}\n\nexport const nullCoordinator = new NullCoordinator(\"\");\n\nexport const CoordinatorContext = React.createContext<Coordinator>(\n  nullCoordinator\n);\n","import {useContext, useEffect, useState} from \"react\";\n\nimport {Coordinator, CoordinatorContext} from \"./coordinator\";\n\ninterface CoordinatorContainerProps<R> {\n  getter: (c: Coordinator) => Promise<R>;\n  nullValue: R;\n  children: (value: R, isLoading: boolean, refresh: () => void) => JSX.Element;\n}\n\nexport function CoordinatorContainer<R>(props: CoordinatorContainerProps<R>) {\n  const coordinator = useContext(CoordinatorContext);\n  const {getter} = props;\n  const [isLoading, setLoading] = useState(true);\n  const [value, setValue] = useState(props.nullValue);\n  const [latch, setLatch] = useState(0);\n\n  useEffect(() => {\n    let ignore = false;\n\n    (async function() {\n      setLoading(true);\n      const v = await getter(coordinator);\n\n      if (!ignore) {\n        setLoading(false);\n        setValue(v);\n      }\n    })();\n\n    return () => {\n      ignore = true;\n    };\n  }, [coordinator, getter, latch]);\n\n  function refresh() {\n    setLatch(current => current + 1);\n  }\n\n  return props.children(value, isLoading, refresh);\n}\n","import React from \"react\";\n\nexport function Loading() {\n  return (\n    <div className=\"row mt-md-5 pushbot-loading\">\n      <p className=\"mx-auto\">\n        <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n        loading\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport * as path from \"path\";\n\ninterface Props {\n  path: string;\n}\n\nexport function ServicePath(props: Props) {\n  const dirname = path.dirname(props.path);\n  const basename = path.basename(props.path);\n\n  return (\n    <span className=\"text-monospace\">\n      <span className=\"text-muted\">\n        {dirname}\n        {path.sep}\n      </span>\n      <span className=\"font-weight-bold\">{basename}</span>\n    </span>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {IDesiredUnit, IPortMap} from \"../../common/coordinator\";\nimport {ServicePath} from \"./ServicePath\";\n\ninterface ServiceDisplayProps {\n  unit: IDesiredUnit;\n}\n\nfunction plural(count: number, noun: string) {\n  if (count === 1) {\n    return `${count} ${noun}`;\n  } else {\n    return `${count} ${noun}s`;\n  }\n}\n\nfunction ports(p: IPortMap) {\n  const keys = Object.keys(p);\n  if (keys.length === 0) {\n    return null;\n  }\n\n  const mappings: string[] = [];\n  for (const source of Object.keys(p)) {\n    const dest = p[source];\n    mappings.push(`${source} => ${dest}`);\n  }\n  return mappings.join(\", \");\n}\n\nexport function ServiceDisplay(props: ServiceDisplayProps) {\n  const {unit} = props;\n\n  return (\n    <li className=\"list-group-item px-4 rounded pushbot-serviceDisplay\">\n      <div className=\"float-right pushbot-serviceDisplay--controls\">\n        <Link\n          to={`/admin/services/${unit.id}`}\n          className=\"btn btn-secondary d-flex align-items-baseline\"\n        >\n          <i className=\"fas fa-cog mr-2\" />\n          edit\n        </Link>\n      </div>\n      <ServicePath path={unit.path} />\n      <p>\n        type <span className=\"font-weight-bold\">{unit.type}</span>\n        {\" | \"}\n        {plural(Object.keys(unit.env).length, \" environment variable\")}\n        {\" | \"}\n        {plural(unit.secrets.length, \" secret\")}\n        {\" | \"}\n        {plural(Object.keys(unit.volumes).length, \"volume\")} {ports(unit.ports)}\n      </p>\n    </li>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {IDesiredState} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {ServiceDisplay} from \"./ServiceDisplay\";\n\nimport \"./Services.css\";\n\nconst nullDesiredState: IDesiredState = {units: []};\n\nexport function Services() {\n  return (\n    <>\n      <h3>services</h3>\n      <CoordinatorContainer<IDesiredState>\n        getter={c => c.getDesiredState()}\n        nullValue={nullDesiredState}\n      >\n        {(state, isLoading, refresh) => {\n          const list = isLoading ? (\n            <Loading />\n          ) : (\n            state.units.map(unit => (\n              <ServiceDisplay unit={unit} key={unit.id} />\n            ))\n          );\n\n          return (\n            <>\n              <div className=\"my-3 d-flex justify-content-end\">\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={refresh}\n                  disabled={isLoading}\n                >\n                  <i className=\"fas fa-sync-alt mr-2\" />\n                  Refresh\n                </button>\n              </div>\n              {list}\n              <div className=\"my-3 d-flex justify-content-end\">\n                <Link className=\"btn btn-primary\" to=\"/admin/services/create\">\n                  <i className=\"fas fa-plus mr-2\" />\n                  Create\n                </Link>\n              </div>\n            </>\n          );\n        }}\n      </CoordinatorContainer>\n    </>\n  );\n}\n","import React, {useState, useContext, useEffect} from \"react\";\nimport cx from \"classnames\";\n\nimport {isNetworkError, isGraphQLError} from \"./errors\";\n\nexport type Severity = \"info\" | \"success\" | \"danger\";\n\ninterface Notification {\n  id: number;\n  severity: Severity;\n  body: React.ReactNode;\n}\n\nclass NotificationHub {\n  private nextID: number;\n  private notifications: Notification[];\n  private subscribers: ((ns: Notification[]) => any)[];\n\n  constructor() {\n    this.nextID = 0;\n    this.notifications = [];\n    this.subscribers = [];\n  }\n\n  deleteNotification(n: Notification) {\n    this.notifications = this.notifications.filter(each => each !== n);\n    this.notify();\n  }\n\n  addInfo(body: React.ReactNode) {\n    this.add(\"info\", body);\n  }\n\n  addSuccess(body: React.ReactNode) {\n    this.add(\"success\", body);\n  }\n\n  addSuccessMessage(message: string) {\n    this.addSuccess(<p>{message}</p>);\n  }\n\n  addDanger(body: React.ReactNode) {\n    this.add(\"danger\", body);\n  }\n\n  addError(err: Error) {\n    if (isNetworkError(err)) {\n      this.addDanger(\n        <>\n          <h5>Error: {err.message}</h5>\n          <p>\n            {err.requestURL} {err.responseStatus}\n          </p>\n          <pre>{err.responseText}</pre>\n        </>\n      );\n      return;\n    }\n\n    if (isGraphQLError(err)) {\n      this.addDanger(\n        <>\n          <h5>Error: {err.message}</h5>\n          {err.errors.map((each, i) => (\n            <p key={i}>{each}</p>\n          ))}\n        </>\n      );\n      return;\n    }\n\n    this.addDanger(\n      <>\n        <h5>Error: {err.message}</h5>\n        <pre className=\"bg-light px-2 py-1 mt-4\">{err.stack}</pre>\n      </>\n    );\n  }\n\n  onNotification(callback: (ns: Notification[]) => any) {\n    this.subscribers.push(callback);\n    return () => {\n      this.subscribers = this.subscribers.filter(sub => sub === callback);\n    };\n  }\n\n  protected add(severity: Severity, body: React.ReactNode) {\n    const id = this.nextID;\n    this.nextID++;\n    this.notifications.push({id, severity, body});\n    this.notify();\n  }\n\n  protected notify() {\n    const current = [...this.notifications];\n    for (const subscriber of this.subscribers) {\n      subscriber(current);\n    }\n  }\n}\n\nclass DevNull extends NotificationHub {\n  protected add() {}\n\n  onNotification() {\n    return () => {};\n  }\n}\n\nconst nullHub = new DevNull();\n\nexport const NotificationContext = React.createContext<NotificationHub>(\n  nullHub\n);\n\nexport function NotificationsProvider(props: {children: React.ReactNode}) {\n  const [hub] = useState(() => new NotificationHub());\n\n  return (\n    <NotificationContext.Provider value={hub}>\n      {props.children}\n    </NotificationContext.Provider>\n  );\n}\n\nexport function NotificationsView() {\n  const hub = useContext(NotificationContext);\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n\n  useEffect(() => hub.onNotification(setNotifications), [hub]);\n\n  function makeCloser(n: Notification) {\n    return function(evt: React.MouseEvent<HTMLButtonElement>) {\n      evt.preventDefault();\n      hub.deleteNotification(n);\n    };\n  }\n\n  if (notifications.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"px-2 mt-2 mb-3\">\n      {notifications.map(n => (\n        <div key={n.id} className={cx(\"alert\", `alert-${n.severity}`, \"my-2\")}>\n          <button className=\"close\" onClick={makeCloser(n)}>\n            <i className=\"fa far fa-window-close\" />\n          </button>\n          {n.body}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import {useState} from \"react\";\n\nimport {\n  ServiceType as ValidServiceType,\n  IDesiredUnit,\n  IDesiredUnitUpdate,\n  IDesiredUnitCreate,\n  IEnvMap,\n  IPortMap,\n  IVolumeMap,\n  IContainer,\n} from \"../../common/coordinator\";\n\nexport interface ServiceType {\n  name: string;\n\n  valid: boolean;\n  hasAnyContainer: boolean;\n  hasContainerConfig: boolean;\n  hasContainerName: boolean;\n  hasEnvAndSecrets: boolean;\n  hasVolumes: boolean;\n  hasPorts: boolean;\n  hasSchedule: boolean;\n\n  ifInvalid<R>(cb: () => R): R | null;\n  ifAnyContainer<R>(cb: () => R): R | null;\n  ifContainerConfig<R>(cb: () => R): R | null;\n  ifContainerName<R>(cb: () => R): R | null;\n  ifEnvAndSecrets<R>(cb: () => R): R | null;\n  ifVolumes<R>(cb: () => R): R | null;\n  ifPorts<R>(cb: () => R): R | null;\n  ifSchedule<R>(cb: () => R): R | null;\n}\n\ninterface Spec {\n  isInvalid?: boolean;\n  hasContainerConfig?: boolean;\n  hasContainerName?: boolean;\n  hasEnvAndSecrets?: boolean;\n  hasVolumes?: boolean;\n  hasPorts?: boolean;\n  hasSchedule?: boolean;\n}\n\nconst typeMap: Map<string, ServiceType> = new Map();\n\nfunction makeServiceType(typeName: string, config: Spec): ServiceType {\n  function accept<R>(cb: () => R): R {\n    return cb();\n  }\n\n  function skip() {\n    return null;\n  }\n\n  const serviceType = {\n    name: typeName,\n\n    valid: !config.isInvalid,\n    hasAnyContainer: Boolean(\n      config.hasContainerName || config.hasContainerConfig\n    ),\n    hasContainerConfig: Boolean(config.hasContainerConfig),\n    hasContainerName: Boolean(config.hasContainerName),\n    hasEnvAndSecrets: Boolean(config.hasEnvAndSecrets),\n    hasVolumes: Boolean(config.hasVolumes),\n    hasPorts: Boolean(config.hasPorts),\n    hasSchedule: Boolean(config.hasSchedule),\n\n    ifInvalid: config.isInvalid ? accept : skip,\n    ifAnyContainer:\n      config.hasContainerName || config.hasContainerConfig ? accept : skip,\n    ifContainerConfig: config.hasContainerConfig ? accept : skip,\n    ifContainerName: config.hasContainerName ? accept : skip,\n    ifEnvAndSecrets: config.hasEnvAndSecrets ? accept : skip,\n    ifVolumes: config.hasVolumes ? accept : skip,\n    ifPorts: config.hasPorts ? accept : skip,\n    ifSchedule: config.hasSchedule ? accept : skip,\n  };\n\n  if (!config.isInvalid) {\n    typeMap.set(typeName, serviceType);\n  }\n  return serviceType;\n}\n\nexport const typeSimple = makeServiceType(\"simple\", {\n  hasContainerConfig: true,\n  hasContainerName: true,\n  hasEnvAndSecrets: true,\n  hasVolumes: true,\n  hasPorts: true,\n});\n\nexport const typeOneShot = makeServiceType(\"oneshot\", {\n  hasContainerConfig: true,\n  hasEnvAndSecrets: true,\n  hasVolumes: true,\n  hasPorts: true,\n});\n\nexport const typeTimer = makeServiceType(\"timer\", {\n  hasSchedule: true,\n});\n\nexport const typeSelf = makeServiceType(\"self\", {\n  hasEnvAndSecrets: true,\n});\n\nexport const serviceTypes = [typeSimple, typeOneShot, typeTimer, typeSelf];\n\nexport function getServiceType(typeName: string): ServiceType {\n  return typeMap.get(typeName) || makeServiceType(typeName, {isInvalid: true});\n}\n\nexport type UnitAction = \"create\" | \"update\";\n\nexport class DesiredUnitPayload {\n  private original?: IDesiredUnit;\n  path: string;\n  currentType: ServiceType;\n  secrets: string[];\n  env: IEnvMap;\n  ports: IPortMap;\n  volumes: IVolumeMap;\n  containerName: string;\n  containerImageName: string;\n  containerImageTag: string;\n  calendar: string;\n\n  constructor(original?: IDesiredUnit) {\n    this.original = original;\n    this.path = original ? original.path : \"/etc/systemd/system/az-\";\n    this.currentType = original ? getServiceType(original.type) : typeSimple;\n    this.secrets = original ? [...original.secrets] : [];\n    this.env = original ? {...original.env} : {};\n    this.ports = original ? {...original.ports} : {};\n    this.volumes = original ? {...original.volumes} : {};\n    this.containerName =\n      (original && original.container && original.container.name) || \"\";\n    this.containerImageName =\n      (original && original.container && original.container.image_name) ||\n      \"quay.io/smashwilson/az-\";\n    this.containerImageTag =\n      (original && original.container && original.container.image_tag) ||\n      \"latest\";\n\n    this.calendar =\n      original && original.calendar ? original.calendar : \"*-*-* 00:00:00\";\n  }\n\n  private get type(): ValidServiceType {\n    return this.currentType.name as ValidServiceType;\n  }\n\n  private commonValidation(): boolean {\n    function isEmpty(s: string): boolean {\n      return s.length === 0;\n    }\n\n    function hasEmptyKeyOrValue(obj: {[k: string]: string}): boolean {\n      const ks = Object.keys(obj);\n      return ks.some(k => isEmpty(k) || isEmpty(obj[k]));\n    }\n\n    if (!this.currentType.valid) {\n      return false;\n    }\n\n    if (this.currentType.hasContainerName && isEmpty(this.containerName)) {\n      return false;\n    }\n\n    if (this.currentType.hasContainerConfig) {\n      if (isEmpty(this.containerImageName)) {\n        return false;\n      }\n\n      if (isEmpty(this.containerImageTag)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      if (hasEmptyKeyOrValue(this.env)) {\n        return false;\n      }\n\n      if (this.secrets.some(isEmpty)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasPorts) {\n      function isInvalidPortNumber(p: number): boolean {\n        return isNaN(p) || p < 0 || p > 65536;\n      }\n\n      function isInvalidPort(s: string): boolean {\n        const parsed = parseInt(s, 10);\n        return isInvalidPortNumber(parsed);\n      }\n\n      const hostPorts = Object.keys(this.ports);\n      if (hostPorts.some(isInvalidPort)) {\n        return false;\n      }\n\n      if (hostPorts.some(hp => isInvalidPortNumber(this.ports[hp]))) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasVolumes) {\n      if (hasEmptyKeyOrValue(this.volumes)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasSchedule) {\n      if (isEmpty(this.calendar)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isCreate() {\n    return this.original === undefined;\n  }\n\n  isUpdate() {\n    return this.original !== undefined;\n  }\n\n  withAction<R>(cbs: {create: () => R; update: (id: number) => R}): R {\n    if (this.original) {\n      return cbs.update(this.original.id);\n    } else {\n      return cbs.create();\n    }\n  }\n\n  isModified(): boolean {\n    if (!this.original) {\n      return true;\n    }\n\n    if (this.currentType.name !== this.original.type) {\n      return true;\n    }\n\n    if (this.currentType.hasAnyContainer) {\n      if (!this.original.container) {\n        return true;\n      }\n\n      const container = this.original.container;\n\n      if (\n        this.currentType.hasContainerName &&\n        container.name !== this.containerName\n      ) {\n        return true;\n      }\n\n      if (container.image_name !== this.containerImageName) {\n        return true;\n      }\n\n      if (container.image_tag !== this.containerImageTag) {\n        return true;\n      }\n    }\n\n    function arrayChanged<K>(array: K[], original: K[]): boolean {\n      if (array.length !== original.length) {\n        return true;\n      }\n\n      const s = new Set(array);\n      return original.some(o => !s.has(o));\n    }\n\n    function objectChanged<K>(\n      obj: {[k: string]: K},\n      original: {[k: string]: K}\n    ): boolean {\n      const ks = Object.keys(obj);\n      return (\n        arrayChanged(ks, Object.keys(original)) &&\n        ks.some(k => obj[k] !== original[k])\n      );\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      if (arrayChanged(this.secrets, this.original.secrets)) {\n        return true;\n      }\n\n      if (objectChanged(this.env, this.original.env)) {\n        return true;\n      }\n    }\n\n    if (\n      this.currentType.hasPorts &&\n      objectChanged(this.ports, this.original.ports)\n    ) {\n      return true;\n    }\n\n    if (\n      this.currentType.hasVolumes &&\n      objectChanged(this.volumes, this.original.volumes)\n    ) {\n      return true;\n    }\n\n    if (\n      this.currentType.hasSchedule &&\n      this.calendar !== this.original.calendar\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isValid(): boolean {\n    if (!this.commonValidation()) {\n      return false;\n    }\n\n    return this.withAction({\n      create: () => this.path.length !== 0,\n      update: () => this.isModified(),\n    });\n  }\n\n  private getCommonPayload(): IDesiredUnitCreate | IDesiredUnitUpdate {\n    const payload: IDesiredUnitCreate | IDesiredUnitUpdate = {\n      type: this.type,\n      secrets: [],\n      env: {},\n      ports: {},\n      volumes: {},\n    };\n\n    if (this.currentType.hasContainerConfig) {\n      const container: IContainer = {\n        image_name: this.containerImageName,\n        image_tag: this.containerImageTag,\n      };\n      if (this.currentType.hasContainerName) {\n        container.name = this.containerName;\n      }\n      payload.container = container;\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      payload.env = this.env;\n      payload.secrets = this.secrets;\n    }\n\n    if (this.currentType.hasPorts) {\n      payload.ports = this.ports;\n    }\n\n    if (this.currentType.hasVolumes) {\n      payload.volumes = this.volumes;\n    }\n\n    if (this.currentType.hasSchedule) {\n      payload.calendar = this.calendar;\n    }\n\n    return payload;\n  }\n\n  withID<R>(fn: (id: number) => R): R | null {\n    if (this.original) {\n      return fn(this.original.id);\n    }\n\n    return null;\n  }\n\n  getCreatePayload(): IDesiredUnitCreate {\n    return {\n      ...this.getCommonPayload(),\n      path: this.path,\n    };\n  }\n\n  getUpdatePayload(): IDesiredUnitUpdate {\n    return this.getCommonPayload();\n  }\n}\n\nexport function usePayloadState<K extends keyof DesiredUnitPayload>(\n  payload: DesiredUnitPayload,\n  key: K\n): [DesiredUnitPayload[K], (v: DesiredUnitPayload[K]) => void] {\n  const [value, setValue] = useState<DesiredUnitPayload[K]>(payload[key]);\n\n  function setInPayload(v: DesiredUnitPayload[K]): void {\n    payload[key] = v;\n    setValue(v);\n  }\n\n  return [value, setInPayload];\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport cx from \"classnames\";\n\ninterface ToggleableInputProps {\n  value: string;\n  onChange: (newValue: string) => any;\n  controlID?: string;\n  controlClassName?: string;\n}\n\nexport function ToggleableInput(props: ToggleableInputProps) {\n  const [multiLineMode, setMode] = useState<boolean>(\n    props.value.indexOf(\"\\n\") !== -1\n  );\n  const controlRef = useRef<HTMLTextAreaElement & HTMLInputElement>(null);\n\n  const cn = cx(\"form-control\", props.controlClassName);\n\n  useEffect(() => {\n    if (controlRef.current) {\n      controlRef.current.focus();\n    }\n  }, [multiLineMode]);\n\n  if (multiLineMode) {\n    return (\n      <div className=\"input-group\">\n        <textarea\n          ref={controlRef}\n          id={props.controlID}\n          className={cn}\n          onChange={evt => {\n            evt.preventDefault();\n            props.onChange(evt.target.value);\n          }}\n        >\n          {props.value}\n        </textarea>\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-light\"\n            onClick={evt => {\n              evt.preventDefault();\n              setMode(false);\n            }}\n          >\n            <i className=\"fas fa-compress\" />\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"input-group\">\n        <input\n          ref={controlRef}\n          id={props.controlID}\n          type=\"text\"\n          className={cn}\n          onChange={evt => {\n            evt.preventDefault();\n            props.onChange(evt.target.value);\n          }}\n          value={props.value}\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-light\"\n            onClick={evt => {\n              evt.preventDefault();\n              setMode(true);\n            }}\n          >\n            <i className=\"fas fa-expand\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {ToggleableInput} from \"../../common/ToggleableInput\";\n\nlet envVarCounter = 0;\n\ninterface EnvVarEditorProps {\n  value: string;\n  onChangeValue: (newValue: string) => any;\n\n  renderName: (uniqueID: string) => React.ReactNode;\n  renderControls: () => React.ReactNode;\n}\n\nfunction EnvVarEditor(props: EnvVarEditorProps) {\n  const uniqueID = `envVarEditor--${envVarCounter}`;\n  envVarCounter++;\n\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-3\">{props.renderName(uniqueID)}</div>\n      <div className=\"col-sm-8\">\n        <ToggleableInput\n          controlID={uniqueID}\n          controlClassName=\"text-monospace\"\n          value={props.value}\n          onChange={props.onChangeValue}\n        />\n      </div>\n      <div className=\"col-sm-1 d-flex justify-content-end\">\n        {props.renderControls()}\n      </div>\n    </div>\n  );\n}\n\ninterface ExistingEnvVarProps {\n  name: string;\n  value: string;\n  onChange: (newValue: string) => any;\n  onDelete: () => any;\n}\n\nexport function ExistingEnvVarEditor(props: ExistingEnvVarProps) {\n  return (\n    <EnvVarEditor\n      value={props.value}\n      onChangeValue={props.onChange}\n      renderName={uniqueID => (\n        <label htmlFor={uniqueID} className=\"text-monospace\">\n          {props.name}\n        </label>\n      )}\n      renderControls={() => (\n        <button className=\"btn btn-outline-danger\" onClick={props.onDelete}>\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      )}\n    />\n  );\n}\n\ninterface NewEnvVarProps {\n  onAccept: (name: string, value: string) => any;\n}\n\nexport function NewEnvVarEditor(props: NewEnvVarProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [currentName, setName] = useState(\"\");\n  const [currentValue, setValue] = useState(\"\");\n  const nameFieldRef = useRef<HTMLInputElement>(null);\n\n  const canAccept = currentName.length > 0;\n\n  useEffect(() => {\n    if (expanded && nameFieldRef.current) {\n      nameFieldRef.current.focus();\n    }\n  }, [expanded]);\n\n  if (!expanded) {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-3\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(true);\n            }}\n          >\n            <i className=\"far fa-plus-square\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <EnvVarEditor\n      value={currentValue}\n      onChangeValue={v => setValue(v)}\n      renderName={() => (\n        <input\n          ref={nameFieldRef}\n          type=\"text\"\n          className=\"form-control text-monospace\"\n          value={currentName}\n          onChange={evt => setName(evt.target.value)}\n        />\n      )}\n      renderControls={() => (\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canAccept}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onAccept(currentName.toLocaleUpperCase(), currentValue);\n              setName(\"\");\n              setValue(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      )}\n    />\n  );\n}\n","import React from \"react\";\n\nimport {IEnvMap} from \"../../common/coordinator\";\nimport {ExistingEnvVarEditor, NewEnvVarEditor} from \"./EnvVarEditor\";\n\ninterface EnvVarListEditorProps {\n  envVars: IEnvMap;\n  onChange: (name: string, value: string) => any;\n  onDelete: (name: string) => any;\n}\n\nexport function EnvVarListEditor(props: EnvVarListEditorProps) {\n  const varNames = Object.keys(props.envVars);\n  varNames.sort();\n\n  const existingVarEditors = varNames.map(varName => (\n    <ExistingEnvVarEditor\n      key={`envVarEditor-${varName}`}\n      name={varName}\n      value={props.envVars[varName]}\n      onChange={value => props.onChange(varName, value)}\n      onDelete={() => props.onDelete(varName)}\n    />\n  ));\n\n  return (\n    <>\n      {existingVarEditors}\n      <NewEnvVarEditor onAccept={props.onChange} />\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {ToggleableInput} from \"../../common/ToggleableInput\";\n\ninterface ExistingSecretProps {\n  name: string;\n  onDelete: () => any;\n}\n\nexport function ExistingSecretEditor(props: ExistingSecretProps) {\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-3\">\n        <label className=\"text-monospace text-success\">\n          <i className=\"fas fa-lock d-inline mr-2\" />\n          {props.name}\n        </label>\n      </div>\n      <div className=\"col-sm-8\" />\n      <div\n        className=\"col-sm-1 d-flex justify-content-end\"\n        onClick={props.onDelete}\n      >\n        <button className=\"btn btn-outline-danger\">\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\ninterface AddSecretProps {\n  availableSecrets: string[];\n  onAddExisting: (name: string) => any;\n  onCreateNew: (name: string, value: string) => any;\n}\n\ntype DisplayMode = \"collapsed\" | \"existing\" | \"create\";\n\nexport function NewSecretEditor(props: AddSecretProps) {\n  const [displayMode, setDisplayMode] = useState<DisplayMode>(\"collapsed\");\n  const [currentName, setName] = useState(\"\");\n  const [currentValue, setValue] = useState(\"\");\n\n  const canAdd = currentName.length > 0;\n  const canCreate = currentName.length > 0 && currentValue.length > 0;\n  const nameFieldRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (displayMode === \"create\" && nameFieldRef.current) {\n      nameFieldRef.current.focus();\n    }\n  }, [displayMode]);\n\n  if (displayMode === \"collapsed\") {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-3\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setDisplayMode(\"existing\");\n            }}\n          >\n            <i className=\"far fa-plus-square\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (displayMode === \"existing\") {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-10 input-group\">\n          <div className=\"input-group-prepend d-flex align-items-center\">\n            <i className=\"fas fa-lock-open text-success d-inline mr-2\" />\n          </div>\n          <select\n            className=\"form-control text-success\"\n            value={currentName}\n            onChange={evt => setName(evt.target.value)}\n            required={true}\n          >\n            <option value=\"\">Choose an existing secret</option>\n            {props.availableSecrets.map(secretName => (\n              <option key={`secret-${secretName}`} value={secretName}>\n                {secretName}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"col-sm-2 d-flex justify-content-end\">\n          <div className=\"btn-group\">\n            <button\n              className=\"btn btn-outline-success\"\n              disabled={!canAdd}\n              onClick={evt => {\n                evt.preventDefault();\n                props.onAddExisting(currentName.toLocaleUpperCase());\n                setName(\"\");\n                setValue(\"\");\n                setDisplayMode(\"collapsed\");\n              }}\n            >\n              <i className=\"fas fa-plus\" />\n            </button>\n            <button\n              className=\"btn btn-outline-info\"\n              onClick={evt => {\n                evt.preventDefault();\n                setName(\"\");\n                setValue(\"\");\n                setDisplayMode(\"create\");\n              }}\n            >\n              <i className=\"fas fa-pencil-alt\" />\n            </button>\n            <button\n              className=\"btn btn-outline-info\"\n              onClick={evt => {\n                evt.preventDefault();\n                setDisplayMode(\"collapsed\");\n              }}\n            >\n              <i className=\"far fa-minus-square\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend d-flex align-items-center\">\n            <i className=\"fas fa-lock-open text-success d-inline mr-2\" />\n          </div>\n          <input\n            ref={nameFieldRef}\n            type=\"text\"\n            className=\"form-control text-monospace border-success d-inline\"\n            value={currentName}\n            onChange={evt => setName(evt.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-sm-8\">\n        <ToggleableInput\n          controlClassName=\"text-monospace border-success\"\n          value={currentValue}\n          onChange={setValue}\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreateNew(currentName.toLocaleUpperCase(), currentValue);\n              setName(\"\");\n              setValue(\"\");\n              setDisplayMode(\"collapsed\");\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setName(\"\");\n              setValue(\"\");\n              setDisplayMode(\"existing\");\n            }}\n          >\n            <i className=\"fas fa-list\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setDisplayMode(\"collapsed\");\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport {ExistingSecretEditor, NewSecretEditor} from \"./SecretEditor\";\n\ninterface SecretListProps {\n  secrets: string[];\n  availableSecrets: string[];\n  onDelete: (name: string) => any;\n  onAdd: (name: string) => any;\n  onCreate: (name: string, value: string) => any;\n}\n\nexport function SecretListEditor(props: SecretListProps) {\n  const existingSecretEditors = props.secrets.map(name => (\n    <ExistingSecretEditor\n      key={`existingSecret-${name}`}\n      name={name}\n      onDelete={() => props.onDelete(name)}\n    />\n  ));\n\n  return (\n    <>\n      {existingSecretEditors}\n      <NewSecretEditor\n        availableSecrets={props.availableSecrets}\n        onAddExisting={props.onAdd}\n        onCreateNew={props.onCreate}\n      />\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {IVolumeMap} from \"../../common/coordinator\";\n\ninterface VolumeListProps {\n  volumeMap: IVolumeMap;\n  onDelete: (hostPath: string) => any;\n  onCreate: (hostPath: string, containerPath: string) => any;\n}\n\nexport function VolumeListEditor(props: VolumeListProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [hostPath, setHostPath] = useState(\"/etc/ssl/az/\");\n  const [containerPath, setContainerPath] = useState(\"\");\n\n  const hostPathRef = useRef<HTMLInputElement>(null);\n\n  const canCreate = hostPath.length > 0 && containerPath.length > 0;\n\n  useEffect(() => {\n    if (expanded && hostPathRef.current) {\n      hostPathRef.current.focus();\n    }\n  }, [expanded]);\n\n  const hostPaths = Object.keys(props.volumeMap);\n  const existingVolumes = hostPaths.map((hostPath, i) => (\n    <div className=\"form-row\" key={i}>\n      <div className=\"col-sm-5\">\n        host: <span className=\"text-monospace\">{hostPath}</span>\n      </div>\n      <div className=\"col-sm-5\">\n        container:{\" \"}\n        <span className=\"text-monospace\">{props.volumeMap[hostPath]}</span>\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <button\n          className=\"btn btn-outline-danger\"\n          onClick={evt => {\n            evt.preventDefault();\n            props.onDelete(hostPath);\n          }}\n        >\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      </div>\n    </div>\n  ));\n\n  const newVolume = expanded ? (\n    <div className=\"form-row\">\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">host</span>\n        </div>\n        <input\n          ref={hostPathRef}\n          type=\"text\"\n          value={hostPath}\n          onChange={evt => setHostPath(evt.target.value)}\n          className=\"form-control text-monospace\"\n        />\n      </div>\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">container</span>\n        </div>\n        <input\n          type=\"text\"\n          value={containerPath}\n          onChange={evt => setContainerPath(evt.target.value)}\n          className=\"form-control text-monospace\"\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreate(hostPath, containerPath);\n              setHostPath(\"/etc/ssl/az/\");\n              setContainerPath(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <button\n          className=\"btn btn-outline-info\"\n          onClick={evt => {\n            evt.preventDefault();\n            setExpanded(true);\n          }}\n        >\n          <i className=\"far fa-plus-square\" />\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {existingVolumes}\n      {newVolume}\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {IPortMap} from \"../../common/coordinator\";\n\ninterface PortListProps {\n  portMap: IPortMap;\n  onCreate: (hostPort: string, containerPort: number) => any;\n  onDelete: (hostPort: string) => any;\n}\n\nexport function PortListEditor(props: PortListProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [hostPort, setHostPort] = useState(\"\");\n  const [containerPort, setContainerPort] = useState(\"\");\n\n  const hostPortRef = useRef<HTMLInputElement>(null);\n\n  const canCreate = hostPort.length > 0 && containerPort.length > 0;\n\n  useEffect(() => {\n    if (expanded && hostPortRef.current) {\n      hostPortRef.current.focus();\n    }\n  }, [expanded]);\n\n  const hostPorts = Object.keys(props.portMap);\n  const existingPorts =\n    hostPorts.length > 0 ? (\n      <div className=\"form-row mb-2\">\n        <ul className=\"list-group list-group-horizontal\">\n          {hostPorts.map((hostPort, i) => (\n            <li\n              key={`hostPort-${i}`}\n              className=\"list-group-item pushbot-portMapping\"\n            >\n              {hostPort} <i className=\"fas fa-arrow-right mx-2\" />{\" \"}\n              {props.portMap[hostPort]}{\" \"}\n              <button\n                className=\"btn btn-outline-danger ml-3 pushbot-portMapping--deleteButton\"\n                onClick={evt => {\n                  evt.preventDefault();\n                  props.onDelete(hostPort);\n                }}\n              >\n                <i className=\"far fa-trash-alt\" />\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    ) : null;\n\n  const newPort = expanded ? (\n    <div className=\"form-row\">\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">host</span>\n        </div>\n        <input\n          ref={hostPortRef}\n          type=\"number\"\n          value={hostPort}\n          onChange={evt => setHostPort(evt.target.value)}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">container</span>\n        </div>\n        <input\n          type=\"number\"\n          value={containerPort}\n          onChange={evt => setContainerPort(evt.target.value)}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreate(hostPort, parseInt(containerPort, 10));\n              setHostPort(\"\");\n              setContainerPort(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <button\n          className=\"btn btn-outline-info\"\n          onClick={evt => {\n            evt.preventDefault();\n            setExpanded(true);\n          }}\n        >\n          <i className=\"far fa-plus-square\" />\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {existingPorts}\n      {newPort}\n    </>\n  );\n}\n","import React, {useState, useMemo, useContext} from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport cx from \"classnames\";\n\nimport {ISecretsCreate, CoordinatorContext} from \"../../common/coordinator\";\nimport {NotificationContext} from \"../../common/Notifications\";\nimport {PendingDiffContext} from \"../../common/PendingDiff\";\nimport {\n  DesiredUnitPayload,\n  usePayloadState,\n  serviceTypes,\n  getServiceType,\n} from \"./serviceTypes\";\nimport {EnvVarListEditor} from \"./EnvVarListEditor\";\nimport {SecretListEditor} from \"./SecretListEditor\";\nimport {VolumeListEditor} from \"./VolumeListEditor\";\nimport {PortListEditor} from \"./PortListEditor\";\n\ninterface ServiceFormProps {\n  payload: DesiredUnitPayload;\n  knownSecrets: string[];\n}\n\nexport function ServiceForm({payload, knownSecrets}: ServiceFormProps) {\n  const [nextRoute, setNextRoute] = useState<string | null>(null);\n\n  const [currentPath, setPath] = usePayloadState(payload, \"path\");\n  const [currentType, setType] = usePayloadState(payload, \"currentType\");\n  const [currentContainerName, setContainerName] = usePayloadState(\n    payload,\n    \"containerName\"\n  );\n  const [currentContainerImageName, setContainerImageName] = usePayloadState(\n    payload,\n    \"containerImageName\"\n  );\n  const [currentContainerImageTag, setContainerImageTag] = usePayloadState(\n    payload,\n    \"containerImageTag\"\n  );\n  const [currentEnvVars, setEnvVars] = usePayloadState(payload, \"env\");\n  const [currentSecrets, setSecrets] = usePayloadState(payload, \"secrets\");\n  const [currentVolumes, setVolumes] = usePayloadState(payload, \"volumes\");\n  const [currentPorts, setPorts] = usePayloadState(payload, \"ports\");\n  const [currentCalendar, setCalendar] = usePayloadState(payload, \"calendar\");\n\n  const [createdSecrets, setCreatedSecrets] = useState<ISecretsCreate>({});\n\n  function deleteSecret(name: string) {\n    setSecrets(currentSecrets.filter(each => each !== name));\n  }\n\n  function addSecret(name: string) {\n    setSecrets([...currentSecrets, name]);\n  }\n\n  function createSecret(name: string, value: string) {\n    setSecrets([...currentSecrets, name]);\n    setCreatedSecrets({...createdSecrets, [name]: value});\n  }\n\n  function deleteVolume(hostPath: string) {\n    const nextVolumes = {...currentVolumes};\n    delete nextVolumes[hostPath];\n    setVolumes(nextVolumes);\n  }\n\n  function createVolume(hostPath: string, containerPath: string) {\n    setVolumes({\n      ...currentVolumes,\n      [hostPath]: containerPath,\n    });\n  }\n\n  function deletePort(hostPort: string) {\n    const nextPorts = {...currentPorts};\n    delete nextPorts[hostPort];\n    setPorts(nextPorts);\n  }\n\n  function createPort(hostPort: string, containerPort: number) {\n    setPorts({\n      ...currentPorts,\n      [hostPort]: containerPort,\n    });\n  }\n\n  const availableSecrets = useMemo(() => {\n    const used = new Set(currentSecrets);\n    return knownSecrets.filter(each => !used.has(each));\n  }, [knownSecrets, currentSecrets]);\n\n  const {refresh: refreshDiff} = useContext(PendingDiffContext);\n  const coordinator = useContext(CoordinatorContext);\n  const hub = useContext(NotificationContext);\n\n  if (nextRoute) {\n    return <Redirect to={nextRoute} />;\n  }\n\n  async function apply(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n\n      if (Object.keys(createdSecrets).length > 0) {\n        await coordinator.createSecrets(createdSecrets);\n      }\n\n      await payload.withAction({\n        create: () => coordinator.createDesiredUnit(payload.getCreatePayload()),\n        update: (id: number) =>\n          coordinator.updateDesiredUnit(id, payload.getUpdatePayload()),\n      });\n      refreshDiff();\n      setNextRoute(\"/admin/services\");\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  async function deleteService(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n\n      await payload.withID(id => coordinator.deleteDesiredUnit(id));\n\n      refreshDiff();\n      setNextRoute(\"/admin/services\");\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  return (\n    <form className=\"border rounded p-3\">\n      {/* path */}\n      <div className=\"form-row\">\n        <label htmlFor=\"serviceEditor--path\" className=\"col-sm-3\">\n          Path:\n        </label>\n        <div className={cx(\"col-sm-9\", {disabled: payload.isUpdate()})}>\n          <input\n            id=\"serviceEditor--path\"\n            className=\"form-control text-monospace\"\n            type=\"text\"\n            value={currentPath}\n            onChange={evt => setPath(evt.target.value)}\n            readOnly={payload.isUpdate()}\n          />\n        </div>\n      </div>\n\n      {/* type */}\n      <div className=\"form-row\">\n        <label htmlFor=\"serviceEditor--type\" className=\"col-sm-3\">\n          Type:\n        </label>\n        <div className=\"col-sm-2\">\n          <select\n            className=\"form-control\"\n            id=\"serviceEditor--type\"\n            onChange={evt => setType(getServiceType(evt.target.value))}\n          >\n            {serviceTypes.map(tp => (\n              <option selected={tp === currentType} value={tp.name}>\n                {tp.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* invalid type detection */}\n      {currentType.ifInvalid(() => (\n        <div className=\"form-row my-2\">\n          <div className=\"alert alert-danger px-3 col\">\n            <p>\n              Invalid service type:{\" \"}\n              <span className=\"font-weight-bold\">{currentType.name}</span>.\n            </p>\n            <p>Please choose another.</p>\n          </div>\n        </div>\n      ))}\n\n      <hr />\n\n      {currentType.ifAnyContainer(() => (\n        <div className=\"form-row mt-4 mb-2\">\n          <div className=\"col\">\n            <h6 className=\"text-secondary\">Container details</h6>\n          </div>\n        </div>\n      ))}\n\n      {/* container name */}\n      {currentType.ifContainerName(() => (\n        <div className=\"form-row\">\n          <label htmlFor=\"serviceEditor--containerName\" className=\"col-sm-3\">\n            Name:\n          </label>\n          <div className=\"col-sm-9\">\n            <input\n              id=\"serviceEditor--containerName\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerName}\n              onChange={evt => setContainerName(evt.target.value)}\n            />\n          </div>\n        </div>\n      ))}\n\n      {/* container image name and tag */}\n      {currentType.ifContainerConfig(() => (\n        <div className=\"form-row\">\n          <label\n            htmlFor=\"serviceEditor--containerImageName\"\n            className=\"col-sm-3\"\n          >\n            Image:\n          </label>\n          <div className=\"col-sm-5\">\n            <input\n              id=\"serviceEditor--containerImageName\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerImageName}\n              onChange={evt => setContainerImageName(evt.target.value)}\n              placeholder=\"quay.io/smashwilson/az-\"\n            />\n          </div>\n          <div className=\"col-sm-3\">\n            <input\n              id=\"serviceEditor--containerImageTag\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerImageTag}\n              onChange={evt => setContainerImageTag(evt.target.value)}\n              placeholder=\"latest\"\n            />\n          </div>\n        </div>\n      ))}\n\n      {/* environment variables and secrets */}\n      {currentType.ifEnvAndSecrets(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Environment variables</h6>\n            </div>\n          </div>\n          <EnvVarListEditor\n            envVars={currentEnvVars}\n            onChange={(name, value) => {\n              const nextVars = {\n                ...currentEnvVars,\n                [name]: value,\n              };\n              setEnvVars(nextVars);\n            }}\n            onDelete={name => {\n              const nextVars = {...currentEnvVars};\n              delete nextVars[name];\n              setEnvVars(nextVars);\n            }}\n          />\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Secrets</h6>\n            </div>\n          </div>\n          <SecretListEditor\n            availableSecrets={availableSecrets}\n            secrets={currentSecrets}\n            onDelete={deleteSecret}\n            onAdd={addSecret}\n            onCreate={createSecret}\n          />\n        </>\n      ))}\n\n      {/* volumes */}\n      {currentType.ifVolumes(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Volumes</h6>\n            </div>\n          </div>\n          <VolumeListEditor\n            volumeMap={currentVolumes}\n            onCreate={createVolume}\n            onDelete={deleteVolume}\n          />\n        </>\n      ))}\n\n      {/* port mappings */}\n      {currentType.ifPorts(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Port mappings</h6>\n            </div>\n          </div>\n          <PortListEditor\n            portMap={currentPorts}\n            onCreate={createPort}\n            onDelete={deletePort}\n          />\n        </>\n      ))}\n\n      {/* schedule */}\n      {currentType.ifSchedule(() => (\n        <div className=\"form-row\">\n          <label htmlFor=\"serviceEditor--schedule\" className=\"col-sm-3\">\n            Schedule:\n          </label>\n          <div className=\"col-sm-7\">\n            <input\n              id=\"serviceEditor--schedule\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentCalendar}\n              onChange={evt => setCalendar(evt.target.value)}\n            />\n          </div>\n          <div className=\"col-sm-2\">\n            <a\n              target=\"_new\"\n              href=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html#\"\n            >\n              <i className=\"fas fa-book mr-2\" />\n              reference\n            </a>\n          </div>\n        </div>\n      ))}\n\n      <hr />\n\n      {/* controls */}\n      <div className=\"form-row m-3\">\n        {payload.isUpdate() && (\n          <div className=\"col d-flex align-items-baseline\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger\"\n              onClick={deleteService}\n              disabled={payload.isCreate()}\n            >\n              Delete\n            </button>\n          </div>\n        )}\n        <div className=\"col d-flex align-items-baseline justify-content-end\">\n          <div className=\"btn-group\">\n            <Link to=\"/admin/services\" className=\"btn btn-secondary\">\n              Cancel\n            </Link>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={apply}\n              disabled={!payload.isValid()}\n            >\n              {payload.withAction({\n                create: () => \"Create\",\n                update: () => \"Update\",\n              })}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\n\nimport {IDesiredState} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {ServiceForm} from \"./ServiceForm\";\nimport {DesiredUnitPayload} from \"./serviceTypes\";\n\nconst nullDesiredState: IDesiredState = {units: []};\n\ninterface ServiceEditorProps {\n  match: {\n    params: {\n      id: string;\n    };\n  };\n}\n\nexport function ServiceEditor(props: ServiceEditorProps) {\n  return (\n    <CoordinatorContainer<string[]> getter={c => c.getSecrets()} nullValue={[]}>\n      {(knownSecrets, secretsLoading) => {\n        if (props.match.params.id === \"create\") {\n          return (\n            <ServiceForm\n              payload={new DesiredUnitPayload()}\n              knownSecrets={knownSecrets}\n            />\n          );\n        }\n\n        return (\n          <CoordinatorContainer<IDesiredState>\n            getter={c => c.getDesiredState()}\n            nullValue={nullDesiredState}\n          >\n            {(state, stateIsLoading) => {\n              if (stateIsLoading || secretsLoading) {\n                return <Loading />;\n              }\n\n              const original = state.units.find(\n                u => u.id.toString() === props.match.params.id\n              );\n              if (original) {\n                return (\n                  <ServiceForm\n                    payload={new DesiredUnitPayload(original)}\n                    knownSecrets={knownSecrets}\n                  />\n                );\n              }\n\n              return (\n                <div className=\"card bg-danger text-white\">\n                  <div className=\"card-header\">Unknown service ID</div>\n                  <div className=\"card-body\">\n                    <p className=\"card-text\">No service exists with that ID.</p>\n                  </div>\n                </div>\n              );\n            }}\n          </CoordinatorContainer>\n        );\n      }}\n    </CoordinatorContainer>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport cx from \"classnames\";\n\nimport {IDelta, IDesiredUnit} from \"../../common/coordinator\";\nimport {hasPendingDelta} from \"../../common/PendingDiff\";\n\ninterface Tense {\n  create: string;\n  modify: string;\n  restart: string;\n  remove: string;\n  write: string;\n}\n\nexport const futureTense: Tense = {\n  create: \"will create\",\n  modify: \"will modify\",\n  restart: \"will restart\",\n  remove: \"will remove\",\n  write: \"will write\",\n};\n\nexport const pastTense: Tense = {\n  create: \"created\",\n  modify: \"modified\",\n  restart: \"restarted\",\n  remove: \"removed\",\n  write: \"wrote\",\n};\n\ninterface DeltaViewProps {\n  delta: IDelta;\n  headerText: string;\n  emptyText: string;\n  tense: Tense;\n}\n\nexport function DeltaView(props: DeltaViewProps) {\n  if (!hasPendingDelta(props.delta)) {\n    return (\n      <div className=\"card border-success my-3 mx-0\">\n        <div className=\"card-body\">\n          <p className=\"card-text text-success\">\n            <i className=\"fas fa-check-circle mr-3\" />\n            {props.emptyText}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  function createDesiredRow(\n    unit: IDesiredUnit,\n    action: string,\n    textClass: string,\n    iconClass: string\n  ): React.ReactNode {\n    return (\n      <p\n        key={`key-${action}-${unit.id}`}\n        className={cx(\"card-text\", textClass)}\n      >\n        <i className={cx(\"mr-3\", iconClass)} />\n        {action}{\" \"}\n        <Link\n          to={`/admin/services/${encodeURIComponent(unit.id.toString())}`}\n          className={cx(\"font-weight-bold\", textClass)}\n        >\n          {unit.path}\n        </Link>\n      </p>\n    );\n  }\n\n  const changeRows: React.ReactNodeArray = [];\n  for (const unit of props.delta.units_to_add) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.create} unit`,\n        \"text-success\",\n        \"far fa-plus-square\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_change) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.modify} unit`,\n        \"text-info\",\n        \"fas fa-tools\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_restart) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.restart} unit`,\n        \"text-info\",\n        \"fas fa-recycle\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_remove) {\n    changeRows.push(\n      <p key={`remove-${unit.path}`} className=\"card-text text-danger\">\n        <i className=\"mr-3 fas fa-fire\" />\n        {props.tense.remove} unit{\" \"}\n        <span className=\"font-weight-bold\">{unit.path}</span>\n      </p>\n    );\n  }\n  for (const filePath of props.delta.files_to_write) {\n    changeRows.push(\n      <p className=\"card-text text-info\">\n        <i className=\"mr-3 far fa-file-alt\" />\n        {props.tense.write} file{\" \"}\n        <span className=\"font-weight-bold\">{filePath}</span>\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"card bg-light my-3 mx-0\">\n      <h5 className=\"card-header\">{props.headerText}</h5>\n      <div className=\"card-body\">{changeRows}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport {ISyncReport} from \"../../common/coordinator\";\n\nconst timeUnits: (\"h\" | \"m\" | \"s\" | \"ms\")[] = [\"h\", \"m\", \"s\", \"ms\"];\n\nfunction reportDuration(d: moment.Duration): string {\n  for (const timeUnit of timeUnits) {\n    const count = d.get(timeUnit);\n    if (count > 0) {\n      return `${count}${timeUnit}`;\n    }\n  }\n  return \"<1ms\";\n}\n\ninterface SyncReportViewProps {\n  reports: ISyncReport[];\n}\n\nexport function SyncReportView(props: SyncReportViewProps) {\n  const reportRows = props.reports.map((report, index) => {\n    const duration = moment.duration(report.elapsed);\n\n    return (\n      <li className=\"list-group-item row\" key={index}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-1 px-2 border-right d-flex justify-content-end pushbot-syncReport--duration\">\n              {reportDuration(duration)}\n            </div>\n            <div className=\"col-11 text-dark\">{report.message}</div>\n          </div>\n        </div>\n      </li>\n    );\n  });\n\n  return <ul className=\"list-group pushbot-syncReport\">{reportRows}</ul>;\n}\n\ninterface PlaceholderSyncReportView {\n  lastReport?: ISyncReport;\n}\n\nexport function PlaceholderSyncReportView(props: PlaceholderSyncReportView) {\n  const elapsed = props.lastReport\n    ? reportDuration(\n        moment.duration(moment().diff(moment.unix(props.lastReport.timestamp)))\n      )\n    : \"...\";\n\n  return (\n    <li className=\"list-group-item row\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-1 border-right\">{elapsed}</div>\n          <div className=\"col-11\">\n            <i className=\"fas fa-circle-notch fa-spin text-dark\" />\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import React, {useContext} from \"react\";\nimport cx from \"classnames\";\n\nimport {CoordinatorContext, ISync} from \"../../common/coordinator\";\nimport {PendingDiffContext} from \"../../common/PendingDiff\";\nimport {NotificationContext} from \"../../common/Notifications\";\nimport {DeltaView, pastTense, futureTense} from \"./DeltaView\";\nimport {SyncReportView, PlaceholderSyncReportView} from \"./SyncReportView\";\n\ninterface SyncViewProps {\n  lastSync: ISync;\n  refresh: () => void;\n}\n\nexport function SyncView(props: SyncViewProps) {\n  const coordinator = useContext(CoordinatorContext);\n  const pendingDiff = useContext(PendingDiffContext);\n  const hub = useContext(NotificationContext);\n\n  const lastDelta = props.lastSync.delta;\n  const lastReport = props.lastSync.reports[props.lastSync.reports.length - 1];\n  const inProgress = props.lastSync.in_progress;\n\n  async function startSync(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n      await coordinator.createSync();\n      props.refresh();\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  if (inProgress) {\n    setTimeout(() => {\n      props.refresh();\n      pendingDiff.refresh();\n    }, 1000);\n  }\n\n  return (\n    <>\n      <DeltaView\n        delta={pendingDiff.delta}\n        emptyText=\"No changes waiting to be applied.\"\n        headerText=\"changes to apply\"\n        tense={futureTense}\n      />\n      <p className=\"mt-2 mb-4\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={inProgress}\n          onClick={startSync}\n        >\n          <i\n            className={cx(\"fas fa-sync-alt mr-2\", {\n              \"fa-spin\": inProgress,\n            })}\n          />\n          Sync\n        </button>\n      </p>\n      <div className=\"my-3\">\n        <h6>{inProgress ? \"current \" : \"most recent \"} sync</h6>\n        <SyncReportView reports={props.lastSync.reports} />\n        {props.lastSync.in_progress && (\n          <PlaceholderSyncReportView lastReport={lastReport} />\n        )}\n      </div>\n      {lastDelta && (\n        <DeltaView\n          delta={lastDelta}\n          emptyText=\"No changes applied.\"\n          headerText=\"applied changes\"\n          tense={pastTense}\n        />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nimport {ISync} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {SyncView} from \"./SyncView\";\n\nimport \"./Sync.css\";\n\nconst nullSync: ISync = {\n  in_progress: false,\n  reports: [],\n  errors: [],\n};\n\nexport function Sync() {\n  return (\n    <>\n      <h3>sync</h3>\n      <CoordinatorContainer<ISync>\n        getter={c => c.getSync()}\n        nullValue={nullSync}\n      >\n        {(lastSync, isLoading, refresh) => {\n          if (isLoading && lastSync.reports.length === 0) {\n            return <Loading />;\n          } else {\n            return <SyncView lastSync={lastSync} refresh={refresh} />;\n          }\n        }}\n      </CoordinatorContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport memo from \"memoize-one\";\n\nimport {SideNav} from \"./SideNav\";\nimport {Dashboard} from \"./dashboard/Dashboard\";\nimport {People} from \"./people/People\";\nimport {Profile} from \"./profile/Profile\";\nimport {Quotes} from \"./quotes/Quotes\";\nimport {Events} from \"./events/Events\";\nimport {Recent} from \"./recent/Recent\";\nimport {Services} from \"./admin/services/Services\";\nimport {ServiceEditor} from \"./admin/services/ServiceEditor\";\nimport {Sync} from \"./admin/sync/Sync\";\nimport {UserContext, IUser} from \"./common/Role\";\nimport {\n  CoordinatorContext,\n  Coordinator,\n  nullCoordinator,\n} from \"./common/coordinator\";\nimport {PendingDiffProvider} from \"./common/PendingDiff\";\nimport {NotificationsProvider, NotificationsView} from \"./common/Notifications\";\n\ninterface AuthenticatedProps {\n  user: IUser;\n}\n\nconst coordinatorForUser = memo(\n  (user: IUser): Coordinator => {\n    if (user.coordinatorToken) {\n      return new Coordinator(user.coordinatorToken);\n    } else {\n      return nullCoordinator;\n    }\n  },\n  (oldArgs: [IUser], newArgs: [IUser]) => oldArgs[0].id === newArgs[0].id\n);\n\nexport function Authenticated(props: AuthenticatedProps) {\n  const coordinator = coordinatorForUser(props.user);\n\n  return (\n    <UserContext.Provider value={props.user}>\n      <CoordinatorContext.Provider value={coordinator}>\n        <PendingDiffProvider coordinator={coordinator}>\n          <NotificationsProvider>\n            <div className=\"row mt-md-5\">\n              <div className=\"col-md-2\">\n                <SideNav />\n              </div>\n              <div className=\"col-md-8\">\n                <NotificationsView />\n                <Route path=\"/\" component={Dashboard} exact />\n                <Route path=\"/people\" component={People} exact />\n                <Route path=\"/people/:name\" component={Profile} />\n                <Route path=\"/quotes\" component={Quotes} />\n                <Route path=\"/events\" component={Events} />\n                <Route path=\"/recent\" component={Recent} />\n                <Route path=\"/admin/services\" component={Services} exact />\n                <Route path=\"/admin/services/:id\" component={ServiceEditor} />\n                <Route path=\"/admin/sync\" component={Sync} />\n              </div>\n            </div>\n          </NotificationsProvider>\n        </PendingDiffProvider>\n      </CoordinatorContext.Provider>\n    </UserContext.Provider>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport \"./Banner.css\";\n\nconst LOGOUT_URL = `${process.env.REACT_APP_API_BASE_URL}/logout?backTo=true`;\n\ninterface BannerProps {\n  username: string;\n  title: string;\n  avatar: string;\n}\n\nexport const Banner = (props: BannerProps) => {\n  let accountControl = null;\n\n  if (props.username) {\n    let accountElements = [];\n    if (props.title) {\n      accountElements.push(\n        <span key=\"0\" className=\"navbar-text pushbot-navbar-title\">\n          {props.title}\n\n          <i\n            key=\"1\"\n            className=\"far fa-circle pushbot-navbar-separator\"\n            aria-hidden=\"true\"\n          />\n        </span>\n      );\n    }\n    accountElements.push(\n      <Link\n        to={`/people/${props.username}`}\n        key=\"2\"\n        className=\"navbar-text pushbot-navbar-username font-weight-bolder\"\n      >\n        @{props.username}\n      </Link>\n    );\n\n    accountControl = (\n      <>\n        {accountElements}\n        <img className=\"navbar-item pushbot-navbar-avatar\" src={props.avatar} alt=\"\" />\n        <a href={LOGOUT_URL} className=\"navbar-item pushbot-navbar-logout\">\n          <i className=\"fas fa-sign-out-alt\" aria-hidden=\"true\" />\n          Log out\n        </a>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"container-fluid mx-0 px-0\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mx-0\">\n        <button\n          type=\"button\"\n          className=\"navbar-toggler collapsed\"\n          data-toggle=\"collapse\"\n          data-target=\"#bs-example-navbar-collapse-1\"\n          aria-expanded=\"false\"\n        >\n          <span className=\"navbar-toggler-icon\">Toggle navigation</span>\n        </button>\n        <div className=\"navbar-brand flex-grow-1\">pushbot party</div>\n\n        <div\n          className=\"collapse navbar-collapse flex-grow-0\"\n          id=\"bs-example-navbar-collapse-1\"\n        >\n          {accountControl}\n        </div>\n      </nav>\n    </div>\n  );\n};\n","import React, {Component} from \"react\";\n\nimport \"./Login.css\";\n\ninterface LoginProps {\n  authUrl: string;\n}\n\nexport class Login extends Component<LoginProps> {\n  componentDidMount() {\n    document.children[0].classList.add(\"pushbot-login-bg\");\n  }\n\n  render() {\n    return (\n      <div className=\"jumbotron pushbot-login mt-md-5\">\n        <h1>Are there stairs in your house?</h1>\n        <p>\n          <a href={this.props.authUrl} className=\"pushbot-signin-slack\">\n            <img\n              alt=\"Sign in with Slack\"\n              height=\"40\"\n              width=\"172\"\n              src=\"https://platform.slack-edge.com/img/sign_in_with_slack.png\"\n              srcSet=\"https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x\"\n            />\n          </a>\n          so that I may protect you from the\n          <a href=\"https://www.youtube.com/watch?v=7E0ot9iJm_k\">\n            terrible secret of space\n          </a>\n        </p>\n        <p className=\"text-muted\">\n          <em>\n            <small>\n              (Make sure that you choose <strong>#~s</strong> as your Slack\n              team)\n            </small>\n          </em>\n        </p>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    document.children[0].classList.remove(\"pushbot-login-bg\");\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport {getEnvironment, AUTH_URL, QueryResult} from \"./common/Transport\";\nimport {isNetworkError} from \"./common/errors\";\nimport {Authenticated} from \"./Authenticated\";\nimport {Banner} from \"./Banner\";\nimport {Login} from \"./Login\";\n\nimport {AppQuery} from \"./__generated__/AppQuery.graphql\";\n\nimport \"./App.css\";\n\nexport class App extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query AppQuery {\n        users {\n          me {\n            id\n            name\n            avatar {\n              image48\n            }\n            roles {\n              name\n            }\n            coordinatorToken\n          }\n        }\n\n        title: documents(set: \"title\") {\n          mine {\n            text\n            found\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<AppQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = (result: QueryResult<AppQuery>) => {\n    let body = null;\n    let username = \"\";\n    let title = \"\";\n    let avatar = \"\";\n\n    if (isNetworkError(result.error)) {\n      if (result.error.responseStatus === 401) {\n        const backTo = encodeURIComponent(document.location!.pathname);\n        body = <Login authUrl={`${AUTH_URL}?backTo=${backTo}`} />;\n      } else {\n        body = <div>{result.error.message}</div>;\n      }\n    } else if (result.props) {\n      const user = result.props.users.me;\n      username = user.name;\n      if (result.props.title) {\n        title = result.props.title.mine.text;\n      }\n      if (user.avatar && user.avatar.image48) {\n        avatar = user.avatar.image48;\n      }\n\n      body = <Authenticated user={user} />;\n    } else {\n      body = (\n        <div className=\"row mt-md-5 pushbot-loading\">\n          <p className=\"mx-auto\">\n            <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n            loading\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <Router>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <Banner username={username} title={title} avatar={avatar} />\n          </div>\n          {body}\n        </div>\n      </Router>\n    );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootswatch/dist/spacelab/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport \"jquery\";\nimport \"popper.js\";\nimport \"bootstrap\";\nimport \"@fortawesome/fontawesome-free\";\nimport \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type AppQueryVariables = {};\nexport type AppQueryResponse = {\n    readonly users: {\n        readonly me: {\n            readonly id: string;\n            readonly name: string;\n            readonly avatar: {\n                readonly image48: string | null;\n            };\n            readonly roles: ReadonlyArray<{\n                readonly name: string;\n            }>;\n            readonly coordinatorToken: string | null;\n        };\n    };\n    readonly title: {\n        readonly mine: {\n            readonly text: string;\n            readonly found: boolean;\n        };\n    } | null;\n};\nexport type AppQuery = {\n    readonly response: AppQueryResponse;\n    readonly variables: AppQueryVariables;\n};\n\n\n\n/*\nquery AppQuery {\n  users {\n    me {\n      id\n      name\n      avatar {\n        image48\n      }\n      roles {\n        name\n      }\n      coordinatorToken\n    }\n  }\n  title: documents(set: \"title\") {\n    mine {\n      text\n      found\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"name\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"users\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"UserSet\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"me\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"User\",\n      \"plural\": false,\n      \"selections\": [\n        (v0/*: any*/),\n        (v1/*: any*/),\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"avatar\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"Avatar\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"image48\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        },\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"roles\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"Role\",\n          \"plural\": true,\n          \"selections\": [\n            (v1/*: any*/)\n          ]\n        },\n        {\n          \"kind\": \"ScalarField\",\n          \"alias\": null,\n          \"name\": \"coordinatorToken\",\n          \"args\": null,\n          \"storageKey\": null\n        }\n      ]\n    }\n  ]\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv4 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv5 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"found\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"AppQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      (v2/*: any*/),\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"title\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"mine\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v4/*: any*/),\n              (v5/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"AppQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      (v2/*: any*/),\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"title\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"mine\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v4/*: any*/),\n              (v5/*: any*/),\n              (v0/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"AppQuery\",\n    \"id\": null,\n    \"text\": \"query AppQuery {\\n  users {\\n    me {\\n      id\\n      name\\n      avatar {\\n        image48\\n      }\\n      roles {\\n        name\\n      }\\n      coordinatorToken\\n    }\\n  }\\n  title: documents(set: \\\"title\\\") {\\n    mine {\\n      text\\n      found\\n      id\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '836730f8aa29cc2eba77f30e5f879f96';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RecentChannelQueryVariables = {};\nexport type RecentChannelQueryResponse = {\n    readonly cache: {\n        readonly knownChannels: ReadonlyArray<string>;\n    };\n};\nexport type RecentChannelQuery = {\n    readonly response: RecentChannelQueryResponse;\n    readonly variables: RecentChannelQueryVariables;\n};\n\n\n\n/*\nquery RecentChannelQuery {\n  cache {\n    knownChannels\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"cache\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Cache\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"knownChannels\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RecentChannelQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RecentChannelQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RecentChannelQuery\",\n    \"id\": null,\n    \"text\": \"query RecentChannelQuery {\\n  cache {\\n    knownChannels\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = 'b33c5ca20b56c7400e6a375a0e5965ed';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RecentHistoryQueryVariables = {\n    readonly channel: string;\n};\nexport type RecentHistoryQueryResponse = {\n    readonly cache: {\n        readonly knownChannels: ReadonlyArray<string>;\n        readonly linesForChannel: ReadonlyArray<{\n            readonly id: string | null;\n            readonly speaker: {\n                readonly id: string;\n                readonly name: string;\n                readonly avatar: {\n                    readonly image32: string | null;\n                };\n            } | null;\n            readonly timestamp: string;\n            readonly text: string;\n        }> | null;\n    };\n};\nexport type RecentHistoryQuery = {\n    readonly response: RecentHistoryQueryResponse;\n    readonly variables: RecentHistoryQueryVariables;\n};\n\n\n\n/*\nquery RecentHistoryQuery(\n  $channel: String!\n) {\n  cache {\n    knownChannels\n    linesForChannel(channel: $channel) {\n      id\n      speaker {\n        id\n        name\n        avatar {\n          image32\n        }\n      }\n      timestamp\n      text\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"channel\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  }\n],\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"cache\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Cache\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"knownChannels\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"linesForChannel\",\n        \"storageKey\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"channel\",\n            \"variableName\": \"channel\"\n          }\n        ],\n        \"concreteType\": \"Line\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"speaker\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              (v1/*: any*/),\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"name\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"avatar\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"Avatar\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"image32\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"timestamp\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"text\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RecentHistoryQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v2/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RecentHistoryQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RecentHistoryQuery\",\n    \"id\": null,\n    \"text\": \"query RecentHistoryQuery(\\n  $channel: String!\\n) {\\n  cache {\\n    knownChannels\\n    linesForChannel(channel: $channel) {\\n      id\\n      speaker {\\n        id\\n        name\\n        avatar {\\n          image32\\n        }\\n      }\\n      timestamp\\n      text\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '4638d70a91379c9d2ce46aefaca2f3d9';\nexport default node;\n"],"sourceRoot":""}