{"version":3,"sources":["__generated__/PeopleQuery.graphql.ts","__generated__/ProfileQuery.graphql.ts","__generated__/RandomQuoteQuery.graphql.ts","__generated__/QuotePageQuery.graphql.ts","__generated__/EventsQuery.graphql.ts","__generated__/ActionBarSubmitMutation.graphql.ts","__generated__/RecentChannelQuery.graphql.ts","__generated__/RecentHistoryQuery.graphql.ts","__generated__/RandomMemoryListQuery.graphql.ts","__generated__/MatchingMemoryPage_rem.graphql.ts","__generated__/MatchingMemoryPageQuery.graphql.ts","__generated__/MatchingMemoryListQuery.graphql.ts","__generated__/RemEntryQuery.graphql.ts","__generated__/AppQuery.graphql.ts","common/errors.ts","common/Transport.ts","common/Role.tsx","common/PendingDiff.tsx","SideNav.tsx","dashboard/Dashboard.tsx","people/Person.tsx","people/People.tsx","common/Chart.tsx","profile/Profile.tsx","quotes/queryMode.ts","quotes/Quote.tsx","quotes/RandomQuote.tsx","quotes/QuotePage.tsx","quotes/Quotes.tsx","events/FeedForm.tsx","events/Events.tsx","recent/queryTypes.ts","recent/selection.ts","recent/Line.tsx","recent/History.tsx","recent/ActionBar.tsx","recent/Recent.tsx","rem/RemForm.tsx","common/Notifications.tsx","common/Loading.tsx","rem/RandomMemoryList.tsx","rem/MatchingMemoryPage.tsx","rem/MatchingMemoryList.tsx","rem/Rem.tsx","common/urlSearch.ts","rem/RemEntry.tsx","common/coordinator.ts","common/CoordinatorContainer.tsx","admin/services/ServicePath.tsx","admin/services/ServiceDisplay.tsx","admin/services/Services.tsx","admin/services/serviceTypes.ts","common/ToggleableInput.tsx","admin/services/EnvVarEditor.tsx","admin/services/EnvVarListEditor.tsx","admin/services/SecretEditor.tsx","admin/services/SecretListEditor.tsx","admin/services/VolumeListEditor.tsx","admin/services/PortListEditor.tsx","admin/services/ServiceForm.tsx","admin/services/ServiceEditor.tsx","admin/sync/DeltaView.tsx","admin/sync/SyncReportView.tsx","admin/sync/SyncView.tsx","admin/sync/Sync.tsx","Authenticated.tsx","Banner.tsx","Login.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["node","v0","v1","v2","v3","v4","v5","v6","v7","v8","hash","v9","v10","v11","NETWORK_ERROR_MARKER","Symbol","GRAPHQL_ERROR_MARKER","isNetworkError","err","marker","createNetworkError","message","url","response","a","Error","requestURL","responseStatus","status","text","responseText","createGraphQLError","errors","API_URL","process","AUTH_URL","request","variables","fetch","method","headers","credentials","body","JSON","stringify","query","ok","json","payload","source","RecordSource","network","Network","create","getEnvironment","store","Store","Environment","UserContext","React","createContext","Role","props","user","useContext","roles","some","role","name","children","nullDelta","units_to_add","units_to_change","units_to_restart","units_to_remove","files_to_write","hasPendingDelta","delta","arr","length","PendingDiffContext","refresh","PendingDiffProvider","useState","setDelta","latch","setLatch","useEffect","ignore","coordinator","getDiff","catch","pendingDiff","current","Provider","value","Pill","className","to","exact","activeClassName","SideNav","showBadge","Dashboard","Person","presence","avatar","avatarURL","image48","presenceIcon","src","alt","aria-hidden","title","People","environment","renderResult","error","collateUsers","map","key","this","render","titles","titlesByUsername","all","edges","subject","userData","users","sort","b","localeCompare","Component","Chartist","plugins","ctHtmlLabels","chart","on","context","type","element","empty","_node","innerHTML","Chart","refElement","ref","c","options","Bar","data","detach","Profile","emoji","image192","renderReactionsReceivedChart","renderReactionsGivenChart","match","params","renderTitles","renderQuoteRank","EmojiConverter","img_sets","apple","sheet","use_sheet","include_title","username","decodeURIComponent","titleCriteria","renderReactionChart","topReactionsGiven","topReactionsReceived","results","labels","each","replace_colons","series","count","low","axisY","onlyInteger","t","titleFrom","quotes","rank","test","CONTAINING","when","cases","containing","default","label","BY","by","ABOUT","about","modes","Quote","RandomQuote","lastQuote","quoteText","documents","random","onClick","another","setState","state","QuotePage","lastTotal","lastResults","renderDocuments","pageInfo","criteria","mode","speakers","people","mentions","total","document","id","more","plural","Quotes","didChangeMode","event","find","target","writeSearch","didChangeQuery","didChangePeople","URLSearchParams","window","location","search","has","get","changes","previous","readSearch","Object","assign","set","nextSearch","toString","nextURL","protocol","host","pathname","history","replaceState","href","forceUpdate","showPeople","onChange","index","placeholder","split","person","replace","trim","filter","FeedForm","copied","btnClass","btnMessage","feedURL","readOnly","onCopy","disabled","ready","Events","result","renderResultBody","Boolean","calendarURL","rel","ALL","Selection","isSelecting","ids","subs","Set","cb","push","dispose","indexOf","splice","sub","line","wasSelected","add","didChange","delete","clear","Array","from","size","Line","didMouseDown","button","preventDefault","selection","toggle","startSelecting","didMouseMove","select","onDidChange","kind","ts","moment","parseInt","timestamp","sameSpeaker","speaker","lineClasses","isSelected","speakerBanner","image32","join","onMouseDown","onMouseMove","format","History","bottom","didMouseUp","stopSelecting","didMouseOut","addEventListener","scrollIntoView","removeEventListener","lines","renderLoading","renderLines","onMouseOut","i","ActionBar","didSubmitQuote","didSubmitLim","didClear","submit","bind","textClassNames","clearBtn","disable","isEmpty","describe","channel","mutation","getLineIDs","commitMutation","onCompleted","Recent","knownChannels","renderChannelResult","renderError","channelNames","cache","renderCurrent","renderHistoryResult","linesForChannel","didChangeChannel","currentChannel","renderChannelQuery","renderHistoryQuery","setTimeout","displayChannelNames","displayChannel","htmlFor","RemForm","evt","NotificationHub","nextID","notifications","subscribers","n","notify","addSuccess","addDanger","isGraphQLError","stack","callback","severity","subscriber","nullHub","NotificationContext","NotificationsProvider","hub","NotificationsView","setNotifications","makeCloser","deleteNotification","onNotification","cx","Loading","RandomMemoryList","env","RandomMemoryResults","retry","addError","rem","edge","cursor","encodeURIComponent","MatchingMemoryPage","createPaginationContainer","pageSize","relay","hasMore","isLoading","direction","getConnectionFromProps","getVariables","_props","fragmentVariables","pattern","MatchingMemoryList","MatchingMemoryResults","Rem","parameterName","next","nextParams","useQueryParameter","setQuery","RemEntry","RemEntryWrapper","RemEntryResult","tweet","exec","tweetId","style","maxWidth","COORDINATOR_URL","Coordinator","token","requestJSON","unit","secrets","secretNames","subPath","Authorization","btoa","nullCoordinator","CoordinatorContext","CoordinatorContainer","getter","setLoading","nullValue","setValue","v","ServicePath","dirname","path","basename","noun","ServiceDisplay","keys","volumes","p","mappings","dest","ports","nullDesiredState","units","Services","getDesiredState","list","typeMap","Map","makeServiceType","typeName","config","accept","skip","serviceType","valid","isInvalid","hasAnyContainer","hasContainerName","hasContainerConfig","hasEnvAndSecrets","hasVolumes","hasPorts","hasSchedule","ifInvalid","ifAnyContainer","ifContainerConfig","ifContainerName","ifEnvAndSecrets","ifVolumes","ifPorts","ifSchedule","typeSimple","typeOneShot","typeTimer","typeSelf","serviceTypes","getServiceType","DesiredUnitPayload","original","currentType","containerName","containerImageName","containerImageTag","calendar","container","image_name","image_tag","s","hasEmptyKeyOrValue","obj","k","isInvalidPortNumber","isNaN","hostPorts","parsed","hp","undefined","cbs","update","arrayChanged","array","o","objectChanged","ks","commonValidation","withAction","isModified","fn","getCommonPayload","usePayloadState","ToggleableInput","multiLineMode","setMode","controlRef","useRef","cn","controlClassName","focus","controlID","envVarCounter","EnvVarEditor","uniqueID","renderName","onChangeValue","renderControls","ExistingEnvVarEditor","onDelete","NewEnvVarEditor","expanded","setExpanded","currentName","setName","currentValue","nameFieldRef","canAccept","onAccept","toLocaleUpperCase","EnvVarListEditor","varNames","envVars","existingVarEditors","varName","ExistingSecretEditor","NewSecretEditor","displayMode","setDisplayMode","canAdd","canCreate","required","availableSecrets","secretName","onAddExisting","onCreateNew","SecretListEditor","existingSecretEditors","onAdd","onCreate","VolumeListEditor","hostPath","setHostPath","containerPath","setContainerPath","hostPathRef","existingVolumes","volumeMap","newVolume","PortListEditor","hostPort","setHostPort","containerPort","setContainerPort","hostPortRef","portMap","existingPorts","newPort","ServiceForm","knownSecrets","nextRoute","setNextRoute","currentPath","setPath","setType","currentContainerName","setContainerName","currentContainerImageName","setContainerImageName","currentContainerImageTag","setContainerImageTag","currentEnvVars","setEnvVars","currentSecrets","setSecrets","currentVolumes","setVolumes","currentPorts","setPorts","currentCalendar","setCalendar","createdSecrets","setCreatedSecrets","deleteSecret","addSecret","createSecret","deleteVolume","nextVolumes","createVolume","deletePort","nextPorts","createPort","useMemo","used","refreshDiff","createSecrets","createDesiredUnit","getCreatePayload","updateDesiredUnit","getUpdatePayload","withID","deleteDesiredUnit","isUpdate","tp","selected","nextVars","isCreate","isValid","ServiceEditor","getSecrets","secretsLoading","stateIsLoading","reqID","u","futureTense","modify","restart","remove","write","pastTense","DeltaView","emptyText","createDesiredRow","action","textClass","iconClass","changeRows","tense","filePath","headerText","timeUnits","reportDuration","d","timeUnit","FieldsView","fields","SyncReportView","reportRows","reports","report","duration","elapsed","PlaceholderSyncReportView","lastReport","diff","unix","SyncView","lastDelta","lastSync","inProgress","in_progress","createSync","nullSync","Sync","getSync","coordinatorForUser","memo","coordinatorToken","newArgs","lastArgs","Authenticated","component","LOGOUT_URL","Banner","accountControl","accountElements","data-toggle","data-target","aria-expanded","Login","classList","authUrl","height","width","srcSet","App","backTo","me","mine","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.23c54d0d.chunk.js","sourcesContent":["/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Presence = \"ACTIVE\" | \"AWAY\" | \"UNKNOWN\" | \"%future added value\";\nexport type PeopleQueryVariables = {};\nexport type PeopleQueryResponse = {\n    readonly users: {\n        readonly all: ReadonlyArray<{\n            readonly name: string;\n            readonly presence: Presence;\n            readonly avatar: {\n                readonly image48: string | null;\n            };\n            readonly status: {\n                readonly message: string | null;\n                readonly emoji: string | null;\n            };\n        }>;\n    };\n    readonly titles: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly text: string;\n                    readonly subject: string | null;\n                };\n            }>;\n        };\n    } | null;\n};\nexport type PeopleQuery = {\n    readonly response: PeopleQueryResponse;\n    readonly variables: PeopleQueryVariables;\n};\n\n\n\n/*\nquery PeopleQuery {\n  users {\n    all {\n      name\n      presence\n      avatar {\n        image48\n      }\n      status {\n        message\n        emoji\n      }\n      id\n    }\n  }\n  titles: documents(set: \"title\") {\n    all(criteria: {}) {\n      edges {\n        node {\n          text\n          subject\n          id\n        }\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"name\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"presence\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"avatar\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"Avatar\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"image48\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n},\nv3 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"status\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"Status\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"message\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"emoji\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n},\nv4 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv5 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"criteria\",\n    \"value\": {}\n  }\n],\nv6 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv7 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"subject\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv8 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"PeopleQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": \"all(criteria:{})\",\n            \"args\": (v5/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v6/*: any*/),\n                      (v7/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"PeopleQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v8/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": \"all(criteria:{})\",\n            \"args\": (v5/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v6/*: any*/),\n                      (v7/*: any*/),\n                      (v8/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"PeopleQuery\",\n    \"id\": null,\n    \"text\": \"query PeopleQuery {\\n  users {\\n    all {\\n      name\\n      presence\\n      avatar {\\n        image48\\n      }\\n      status {\\n        message\\n        emoji\\n      }\\n      id\\n    }\\n  }\\n  titles: documents(set: \\\"title\\\") {\\n    all(criteria: {}) {\\n      edges {\\n        node {\\n          text\\n          subject\\n          id\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '28094ab31a64fbe177811308b6004e81';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Criteria = {\n    readonly query?: string | null;\n    readonly subject?: string | null;\n    readonly speakers?: ReadonlyArray<string> | null;\n    readonly mentions?: ReadonlyArray<string> | null;\n};\nexport type ProfileQueryVariables = {\n    name: string;\n    titleCriteria: Criteria;\n};\nexport type ProfileQueryResponse = {\n    readonly users: {\n        readonly current: {\n            readonly avatar: {\n                readonly image192: string | null;\n            };\n            readonly topReactionsReceived: ReadonlyArray<{\n                readonly count: number;\n                readonly emoji: {\n                    readonly name: string;\n                    readonly url: string | null;\n                };\n            }>;\n            readonly topReactionsGiven: ReadonlyArray<{\n                readonly count: number;\n                readonly emoji: {\n                    readonly name: string;\n                    readonly url: string | null;\n                };\n            }>;\n        } | null;\n    };\n    readonly titles: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly text: string;\n                };\n            }>;\n        };\n    } | null;\n    readonly quotes: {\n        readonly rank: number;\n    } | null;\n};\nexport type ProfileQuery = {\n    readonly response: ProfileQueryResponse;\n    readonly variables: ProfileQueryVariables;\n};\n\n\n\n/*\nquery ProfileQuery(\n  $name: String!\n  $titleCriteria: Criteria!\n) {\n  users {\n    current: withName(name: $name) {\n      avatar {\n        image192\n      }\n      topReactionsReceived(limit: 10) {\n        count\n        emoji {\n          name\n          url\n        }\n      }\n      topReactionsGiven(limit: 10) {\n        count\n        emoji {\n          name\n          url\n        }\n      }\n      id\n    }\n  }\n  titles: documents(set: \"title\") {\n    all(first: 100, criteria: $titleCriteria) {\n      edges {\n        node {\n          text\n          id\n        }\n      }\n    }\n  }\n  quotes: documents(set: \"quote\") {\n    rank(speaker: $name)\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"titleCriteria\",\n    \"type\": \"Criteria!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"name\"\n  }\n],\nv2 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"avatar\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"Avatar\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"image192\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 10\n  }\n],\nv4 = [\n  {\n    \"kind\": \"ScalarField\",\n    \"alias\": null,\n    \"name\": \"count\",\n    \"args\": null,\n    \"storageKey\": null\n  },\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"emoji\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Emoji\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"name\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"url\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n],\nv5 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"topReactionsReceived\",\n  \"storageKey\": \"topReactionsReceived(limit:10)\",\n  \"args\": (v3/*: any*/),\n  \"concreteType\": \"EmojiCount\",\n  \"plural\": true,\n  \"selections\": (v4/*: any*/)\n},\nv6 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"topReactionsGiven\",\n  \"storageKey\": \"topReactionsGiven(limit:10)\",\n  \"args\": (v3/*: any*/),\n  \"concreteType\": \"EmojiCount\",\n  \"plural\": true,\n  \"selections\": (v4/*: any*/)\n},\nv7 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv8 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"criteria\",\n    \"variableName\": \"titleCriteria\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 100\n  }\n],\nv9 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv10 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": \"quotes\",\n  \"name\": \"documents\",\n  \"storageKey\": \"documents(set:\\\"quote\\\")\",\n  \"args\": [\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"set\",\n      \"value\": \"quote\"\n    }\n  ],\n  \"concreteType\": \"DocumentSet\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"rank\",\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"speaker\",\n          \"variableName\": \"name\"\n        }\n      ],\n      \"storageKey\": null\n    }\n  ]\n},\nv11 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"ProfileQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": \"current\",\n            \"name\": \"withName\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": (v8/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v9/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      (v10/*: any*/)\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"ProfileQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"users\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"UserSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": \"current\",\n            \"name\": \"withName\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v11/*: any*/)\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"titles\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"all\",\n            \"storageKey\": null,\n            \"args\": (v8/*: any*/),\n            \"concreteType\": \"DocumentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"DocumentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Document\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v9/*: any*/),\n                      (v11/*: any*/)\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      (v10/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"ProfileQuery\",\n    \"id\": null,\n    \"text\": \"query ProfileQuery(\\n  $name: String!\\n  $titleCriteria: Criteria!\\n) {\\n  users {\\n    current: withName(name: $name) {\\n      avatar {\\n        image192\\n      }\\n      topReactionsReceived(limit: 10) {\\n        count\\n        emoji {\\n          name\\n          url\\n        }\\n      }\\n      topReactionsGiven(limit: 10) {\\n        count\\n        emoji {\\n          name\\n          url\\n        }\\n      }\\n      id\\n    }\\n  }\\n  titles: documents(set: \\\"title\\\") {\\n    all(first: 100, criteria: $titleCriteria) {\\n      edges {\\n        node {\\n          text\\n          id\\n        }\\n      }\\n    }\\n  }\\n  quotes: documents(set: \\\"quote\\\") {\\n    rank(speaker: $name)\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '6909612b595759bd5819ae0b5de00978';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RandomQuoteQueryVariables = {};\nexport type RandomQuoteQueryResponse = {\n    readonly documents: {\n        readonly random: {\n            readonly found: boolean;\n            readonly text: string;\n        };\n    } | null;\n};\nexport type RandomQuoteQuery = {\n    readonly response: RandomQuoteQueryResponse;\n    readonly variables: RandomQuoteQueryVariables;\n};\n\n\n\n/*\nquery RandomQuoteQuery {\n  documents(set: \"quote\") {\n    random(criteria: {}) {\n      found\n      text\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"quote\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"criteria\",\n    \"value\": {}\n  }\n],\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"found\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv3 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RandomQuoteQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"quote\\\")\",\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"random\",\n            \"storageKey\": \"random(criteria:{})\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RandomQuoteQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"quote\\\")\",\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"random\",\n            \"storageKey\": \"random(criteria:{})\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"id\",\n                \"args\": null,\n                \"storageKey\": null\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RandomQuoteQuery\",\n    \"id\": null,\n    \"text\": \"query RandomQuoteQuery {\\n  documents(set: \\\"quote\\\") {\\n    random(criteria: {}) {\\n      found\\n      text\\n      id\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = 'b00c2b7f51b5eafc60256f9ab7e571dd';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type Criteria = {\n    readonly query?: string | null;\n    readonly subject?: string | null;\n    readonly speakers?: ReadonlyArray<string> | null;\n    readonly mentions?: ReadonlyArray<string> | null;\n};\nexport type QuotePageQueryVariables = {\n    c: Criteria;\n};\nexport type QuotePageQueryResponse = {\n    readonly documents: {\n        readonly all: {\n            readonly edges: ReadonlyArray<{\n                readonly node: {\n                    readonly id: string | null;\n                    readonly text: string;\n                };\n            }>;\n            readonly pageInfo: {\n                readonly count: number;\n                readonly hasNextPage: boolean;\n            };\n        };\n    } | null;\n};\nexport type QuotePageQuery = {\n    readonly response: QuotePageQueryResponse;\n    readonly variables: QuotePageQueryVariables;\n};\n\n\n\n/*\nquery QuotePageQuery(\n  $c: Criteria!\n) {\n  documents(set: \"quote\") {\n    all(criteria: $c, first: 20) {\n      edges {\n        node {\n          id\n          text\n        }\n      }\n      pageInfo {\n        count\n        hasNextPage\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"c\",\n    \"type\": \"Criteria!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"documents\",\n    \"storageKey\": \"documents(set:\\\"quote\\\")\",\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"set\",\n        \"value\": \"quote\"\n      }\n    ],\n    \"concreteType\": \"DocumentSet\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"all\",\n        \"storageKey\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"criteria\",\n            \"variableName\": \"c\"\n          },\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"first\",\n            \"value\": 20\n          }\n        ],\n        \"concreteType\": \"DocumentConnection\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"edges\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"DocumentEdge\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"node\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"Document\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"id\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"text\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"pageInfo\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"PageInfo\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"count\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"hasNextPage\",\n                \"args\": null,\n                \"storageKey\": null\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"QuotePageQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"QuotePageQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"QuotePageQuery\",\n    \"id\": null,\n    \"text\": \"query QuotePageQuery(\\n  $c: Criteria!\\n) {\\n  documents(set: \\\"quote\\\") {\\n    all(criteria: $c, first: 20) {\\n      edges {\\n        node {\\n          id\\n          text\\n        }\\n      }\\n      pageInfo {\\n        count\\n        hasNextPage\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '6e063f623999a0dc41b92fe0b238d3ed';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type EventsQueryVariables = {};\nexport type EventsQueryResponse = {\n    readonly calendarURL: string;\n};\nexport type EventsQuery = {\n    readonly response: EventsQueryResponse;\n    readonly variables: EventsQueryVariables;\n};\n\n\n\n/*\nquery EventsQuery {\n  calendarURL\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"ScalarField\",\n    \"alias\": null,\n    \"name\": \"calendarURL\",\n    \"args\": null,\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"EventsQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"EventsQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"EventsQuery\",\n    \"id\": null,\n    \"text\": \"query EventsQuery {\\n  calendarURL\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '388cd7e5bbbedc329dded72e8648dbf6';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type ActionBarSubmitMutationVariables = {\n    set: string;\n    channel: string;\n    lines: ReadonlyArray<string>;\n};\nexport type ActionBarSubmitMutationResponse = {\n    readonly createDocument: {\n        readonly id: string | null;\n    };\n};\nexport type ActionBarSubmitMutation = {\n    readonly response: ActionBarSubmitMutationResponse;\n    readonly variables: ActionBarSubmitMutationVariables;\n};\n\n\n\n/*\nmutation ActionBarSubmitMutation(\n  $set: String!\n  $channel: String!\n  $lines: [ID!]!\n) {\n  createDocument(set: $set, channel: $channel, lines: $lines) {\n    id\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"set\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"channel\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"lines\",\n    \"type\": \"[ID!]!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"createDocument\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"channel\",\n        \"variableName\": \"channel\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"lines\",\n        \"variableName\": \"lines\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"set\",\n        \"variableName\": \"set\"\n      }\n    ],\n    \"concreteType\": \"Document\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"ActionBarSubmitMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"ActionBarSubmitMutation\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"mutation\",\n    \"name\": \"ActionBarSubmitMutation\",\n    \"id\": null,\n    \"text\": \"mutation ActionBarSubmitMutation(\\n  $set: String!\\n  $channel: String!\\n  $lines: [ID!]!\\n) {\\n  createDocument(set: $set, channel: $channel, lines: $lines) {\\n    id\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '6207ead903199684c65e05bfe37267af';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RecentChannelQueryVariables = {};\nexport type RecentChannelQueryResponse = {\n    readonly cache: {\n        readonly knownChannels: ReadonlyArray<string>;\n    };\n};\nexport type RecentChannelQuery = {\n    readonly response: RecentChannelQueryResponse;\n    readonly variables: RecentChannelQueryVariables;\n};\n\n\n\n/*\nquery RecentChannelQuery {\n  cache {\n    knownChannels\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"cache\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Cache\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"knownChannels\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RecentChannelQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RecentChannelQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RecentChannelQuery\",\n    \"id\": null,\n    \"text\": \"query RecentChannelQuery {\\n  cache {\\n    knownChannels\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = 'b33c5ca20b56c7400e6a375a0e5965ed';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RecentHistoryQueryVariables = {\n    channel: string;\n};\nexport type RecentHistoryQueryResponse = {\n    readonly cache: {\n        readonly knownChannels: ReadonlyArray<string>;\n        readonly linesForChannel: ReadonlyArray<{\n            readonly id: string | null;\n            readonly speaker: {\n                readonly id: string;\n                readonly name: string;\n                readonly avatar: {\n                    readonly image32: string | null;\n                };\n            } | null;\n            readonly timestamp: string;\n            readonly text: string;\n        }> | null;\n    };\n};\nexport type RecentHistoryQuery = {\n    readonly response: RecentHistoryQueryResponse;\n    readonly variables: RecentHistoryQueryVariables;\n};\n\n\n\n/*\nquery RecentHistoryQuery(\n  $channel: String!\n) {\n  cache {\n    knownChannels\n    linesForChannel(channel: $channel) {\n      id\n      speaker {\n        id\n        name\n        avatar {\n          image32\n        }\n      }\n      timestamp\n      text\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"channel\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  }\n],\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"cache\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Cache\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"knownChannels\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"linesForChannel\",\n        \"storageKey\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"channel\",\n            \"variableName\": \"channel\"\n          }\n        ],\n        \"concreteType\": \"Line\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"speaker\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              (v1/*: any*/),\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"name\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"avatar\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"Avatar\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"image32\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"timestamp\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"text\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RecentHistoryQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v2/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RecentHistoryQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RecentHistoryQuery\",\n    \"id\": null,\n    \"text\": \"query RecentHistoryQuery(\\n  $channel: String!\\n) {\\n  cache {\\n    knownChannels\\n    linesForChannel(channel: $channel) {\\n      id\\n      speaker {\\n        id\\n        name\\n        avatar {\\n          image32\\n        }\\n      }\\n      timestamp\\n      text\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '4638d70a91379c9d2ce46aefaca2f3d9';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RandomMemoryListQueryVariables = {};\nexport type RandomMemoryListQueryResponse = {\n    readonly rem: {\n        readonly search: {\n            readonly edges: ReadonlyArray<{\n                readonly cursor: string;\n                readonly node: {\n                    readonly key: string;\n                };\n            }>;\n        };\n    };\n};\nexport type RandomMemoryListQuery = {\n    readonly response: RandomMemoryListQueryResponse;\n    readonly variables: RandomMemoryListQueryVariables;\n};\n\n\n\n/*\nquery RandomMemoryListQuery {\n  rem {\n    search(first: 10, orderField: RANDOM) {\n      edges {\n        cursor\n        node {\n          key\n        }\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"rem\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Rem\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"search\",\n        \"storageKey\": \"search(first:10,orderField:\\\"RANDOM\\\")\",\n        \"args\": [\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"first\",\n            \"value\": 10\n          },\n          {\n            \"kind\": \"Literal\",\n            \"name\": \"orderField\",\n            \"value\": \"RANDOM\"\n          }\n        ],\n        \"concreteType\": \"MemoryConnection\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"edges\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"MemoryEdge\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"cursor\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"node\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"Memory\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"key\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RandomMemoryListQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RandomMemoryListQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RandomMemoryListQuery\",\n    \"id\": null,\n    \"text\": \"query RandomMemoryListQuery {\\n  rem {\\n    search(first: 10, orderField: RANDOM) {\\n      edges {\\n        cursor\\n        node {\\n          key\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = 'a26dba46981838ebae9dea0fa627b50c';\nexport default node;\n","/* tslint:disable */\n\nimport { ReaderFragment } from \"relay-runtime\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type MatchingMemoryPage_rem = {\n    readonly search: {\n        readonly pageInfo: {\n            readonly count: number;\n            readonly hasPreviousPage: boolean;\n            readonly hasNextPage: boolean;\n        };\n        readonly edges: ReadonlyArray<{\n            readonly cursor: string;\n            readonly node: {\n                readonly key: string;\n            };\n        }>;\n    };\n    readonly \" $refType\": \"MatchingMemoryPage_rem\";\n};\nexport type MatchingMemoryPage_rem$data = MatchingMemoryPage_rem;\nexport type MatchingMemoryPage_rem$key = {\n    readonly \" $data\"?: MatchingMemoryPage_rem$data;\n    readonly \" $fragmentRefs\": FragmentRefs<\"MatchingMemoryPage_rem\">;\n};\n\n\n\nconst node: ReaderFragment = {\n  \"kind\": \"Fragment\",\n  \"name\": \"MatchingMemoryPage_rem\",\n  \"type\": \"Rem\",\n  \"metadata\": {\n    \"connection\": [\n      {\n        \"count\": \"count\",\n        \"cursor\": \"cursor\",\n        \"direction\": \"forward\",\n        \"path\": [\n          \"search\"\n        ]\n      }\n    ]\n  },\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"pattern\",\n      \"type\": \"String!\",\n      \"defaultValue\": null\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"count\",\n      \"type\": \"Int!\",\n      \"defaultValue\": null\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"cursor\",\n      \"type\": \"String\",\n      \"defaultValue\": null\n    }\n  ],\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": \"search\",\n      \"name\": \"__MatchingMemoryPage_search_connection\",\n      \"storageKey\": null,\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"query\",\n          \"variableName\": \"pattern\"\n        }\n      ],\n      \"concreteType\": \"MemoryConnection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"pageInfo\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"PageInfo\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"count\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"hasPreviousPage\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"hasNextPage\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"endCursor\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        },\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"edges\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"MemoryEdge\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"cursor\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"node\",\n              \"storageKey\": null,\n              \"args\": null,\n              \"concreteType\": \"Memory\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"key\",\n                  \"args\": null,\n                  \"storageKey\": null\n                },\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"__typename\",\n                  \"args\": null,\n                  \"storageKey\": null\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n};\n(node as any).hash = '3d967b0051bc3ecfaa0ee5a7c22d8066';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type MatchingMemoryPageQueryVariables = {\n    pattern: string;\n    count: number;\n    cursor?: string | null;\n};\nexport type MatchingMemoryPageQueryResponse = {\n    readonly rem: {\n        readonly \" $fragmentRefs\": FragmentRefs<\"MatchingMemoryPage_rem\">;\n    };\n};\nexport type MatchingMemoryPageQuery = {\n    readonly response: MatchingMemoryPageQueryResponse;\n    readonly variables: MatchingMemoryPageQueryVariables;\n};\n\n\n\n/*\nquery MatchingMemoryPageQuery(\n  $pattern: String!\n  $count: Int!\n  $cursor: String\n) {\n  rem {\n    ...MatchingMemoryPage_rem_3tPC4q\n  }\n}\n\nfragment MatchingMemoryPage_rem_3tPC4q on Rem {\n  search(query: $pattern, first: $count, after: $cursor) {\n    pageInfo {\n      count\n      hasPreviousPage\n      hasNextPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        key\n        __typename\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"pattern\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"count\",\n    \"type\": \"Int!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"cursor\",\n    \"type\": \"String\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"after\",\n    \"variableName\": \"cursor\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"first\",\n    \"variableName\": \"count\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"query\",\n    \"variableName\": \"pattern\"\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"MatchingMemoryPageQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"rem\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"MatchingMemoryPage_rem\",\n            \"args\": [\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"count\",\n                \"variableName\": \"count\"\n              },\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"cursor\",\n                \"variableName\": \"cursor\"\n              },\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"pattern\",\n                \"variableName\": \"pattern\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"MatchingMemoryPageQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"rem\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"search\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"MemoryConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"pageInfo\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"PageInfo\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"count\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"hasPreviousPage\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"hasNextPage\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"endCursor\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              },\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"MemoryEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"cursor\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Memory\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"key\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"__typename\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"LinkedHandle\",\n            \"alias\": null,\n            \"name\": \"search\",\n            \"args\": (v1/*: any*/),\n            \"handle\": \"connection\",\n            \"key\": \"MatchingMemoryPage_search\",\n            \"filters\": [\n              \"query\"\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"MatchingMemoryPageQuery\",\n    \"id\": null,\n    \"text\": \"query MatchingMemoryPageQuery(\\n  $pattern: String!\\n  $count: Int!\\n  $cursor: String\\n) {\\n  rem {\\n    ...MatchingMemoryPage_rem_3tPC4q\\n  }\\n}\\n\\nfragment MatchingMemoryPage_rem_3tPC4q on Rem {\\n  search(query: $pattern, first: $count, after: $cursor) {\\n    pageInfo {\\n      count\\n      hasPreviousPage\\n      hasNextPage\\n      endCursor\\n    }\\n    edges {\\n      cursor\\n      node {\\n        key\\n        __typename\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = 'c72c7b136364a39649e5c22f5505f92c';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type MatchingMemoryListQueryVariables = {\n    pattern: string;\n};\nexport type MatchingMemoryListQueryResponse = {\n    readonly rem: {\n        readonly \" $fragmentRefs\": FragmentRefs<\"MatchingMemoryPage_rem\">;\n    };\n};\nexport type MatchingMemoryListQuery = {\n    readonly response: MatchingMemoryListQueryResponse;\n    readonly variables: MatchingMemoryListQueryVariables;\n};\n\n\n\n/*\nquery MatchingMemoryListQuery(\n  $pattern: String!\n) {\n  rem {\n    ...MatchingMemoryPage_rem_2QeWhh\n  }\n}\n\nfragment MatchingMemoryPage_rem_2QeWhh on Rem {\n  search(query: $pattern, first: 10) {\n    pageInfo {\n      count\n      hasPreviousPage\n      hasNextPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        key\n        __typename\n      }\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"pattern\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 10\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"query\",\n    \"variableName\": \"pattern\"\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"MatchingMemoryListQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"rem\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"MatchingMemoryPage_rem\",\n            \"args\": [\n              {\n                \"kind\": \"Literal\",\n                \"name\": \"count\",\n                \"value\": 10\n              },\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"pattern\",\n                \"variableName\": \"pattern\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"MatchingMemoryListQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"rem\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Rem\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"search\",\n            \"storageKey\": null,\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"MemoryConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"pageInfo\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"PageInfo\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"count\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"hasPreviousPage\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"hasNextPage\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"endCursor\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              },\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"MemoryEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"cursor\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Memory\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"key\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"__typename\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"LinkedHandle\",\n            \"alias\": null,\n            \"name\": \"search\",\n            \"args\": (v1/*: any*/),\n            \"handle\": \"connection\",\n            \"key\": \"MatchingMemoryPage_search\",\n            \"filters\": [\n              \"query\"\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"MatchingMemoryListQuery\",\n    \"id\": null,\n    \"text\": \"query MatchingMemoryListQuery(\\n  $pattern: String!\\n) {\\n  rem {\\n    ...MatchingMemoryPage_rem_2QeWhh\\n  }\\n}\\n\\nfragment MatchingMemoryPage_rem_2QeWhh on Rem {\\n  search(query: $pattern, first: 10) {\\n    pageInfo {\\n      count\\n      hasPreviousPage\\n      hasNextPage\\n      endCursor\\n    }\\n    edges {\\n      cursor\\n      node {\\n        key\\n        __typename\\n      }\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '405496b6cc0f599796dd82aa790721ea';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type RemEntryQueryVariables = {\n    key: string;\n};\nexport type RemEntryQueryResponse = {\n    readonly rem: {\n        readonly get: {\n            readonly key: string;\n            readonly value: string;\n        } | null;\n    };\n};\nexport type RemEntryQuery = {\n    readonly response: RemEntryQueryResponse;\n    readonly variables: RemEntryQueryVariables;\n};\n\n\n\n/*\nquery RemEntryQuery(\n  $key: String!\n) {\n  rem {\n    get(key: $key) {\n      key\n      value\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"key\",\n    \"type\": \"String!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"rem\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Rem\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"get\",\n        \"storageKey\": null,\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"key\",\n            \"variableName\": \"key\"\n          }\n        ],\n        \"concreteType\": \"Memory\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"key\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"value\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RemEntryQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"RemEntryQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"RemEntryQuery\",\n    \"id\": null,\n    \"text\": \"query RemEntryQuery(\\n  $key: String!\\n) {\\n  rem {\\n    get(key: $key) {\\n      key\\n      value\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '9c103e4e1e7fbb32ec3431e467783435';\nexport default node;\n","/* tslint:disable */\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type AppQueryVariables = {};\nexport type AppQueryResponse = {\n    readonly users: {\n        readonly me: {\n            readonly id: string;\n            readonly name: string;\n            readonly avatar: {\n                readonly image48: string | null;\n            };\n            readonly roles: ReadonlyArray<{\n                readonly name: string;\n            }>;\n            readonly coordinatorToken: string | null;\n        };\n    };\n    readonly title: {\n        readonly mine: {\n            readonly text: string;\n            readonly found: boolean;\n        };\n    } | null;\n};\nexport type AppQuery = {\n    readonly response: AppQueryResponse;\n    readonly variables: AppQueryVariables;\n};\n\n\n\n/*\nquery AppQuery {\n  users {\n    me {\n      id\n      name\n      avatar {\n        image48\n      }\n      roles {\n        name\n      }\n      coordinatorToken\n    }\n  }\n  title: documents(set: \"title\") {\n    mine {\n      text\n      found\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"name\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"users\",\n  \"storageKey\": null,\n  \"args\": null,\n  \"concreteType\": \"UserSet\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"me\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"User\",\n      \"plural\": false,\n      \"selections\": [\n        (v0/*: any*/),\n        (v1/*: any*/),\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"avatar\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"Avatar\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"image48\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        },\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"roles\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"Role\",\n          \"plural\": true,\n          \"selections\": [\n            (v1/*: any*/)\n          ]\n        },\n        {\n          \"kind\": \"ScalarField\",\n          \"alias\": null,\n          \"name\": \"coordinatorToken\",\n          \"args\": null,\n          \"storageKey\": null\n        }\n      ]\n    }\n  ]\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"set\",\n    \"value\": \"title\"\n  }\n],\nv4 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv5 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"found\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"AppQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      (v2/*: any*/),\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"title\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"mine\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v4/*: any*/),\n              (v5/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"AppQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      (v2/*: any*/),\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"title\",\n        \"name\": \"documents\",\n        \"storageKey\": \"documents(set:\\\"title\\\")\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"DocumentSet\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"mine\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"Document\",\n            \"plural\": false,\n            \"selections\": [\n              (v4/*: any*/),\n              (v5/*: any*/),\n              (v0/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"AppQuery\",\n    \"id\": null,\n    \"text\": \"query AppQuery {\\n  users {\\n    me {\\n      id\\n      name\\n      avatar {\\n        image48\\n      }\\n      roles {\\n        name\\n      }\\n      coordinatorToken\\n    }\\n  }\\n  title: documents(set: \\\"title\\\") {\\n    mine {\\n      text\\n      found\\n      id\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n(node as any).hash = '836730f8aa29cc2eba77f30e5f879f96';\nexport default node;\n","const NETWORK_ERROR_MARKER = Symbol(\"is-network-error\");\nconst GRAPHQL_ERROR_MARKER = Symbol(\"is-graphql-error\");\n\nexport interface NetworkError extends Error {\n  requestURL: string;\n  responseStatus: number;\n  responseText: string;\n  marker: typeof NETWORK_ERROR_MARKER;\n}\n\nexport interface GraphQLError extends Error {\n  requestURL: string;\n  errors: string[];\n  marker: typeof GRAPHQL_ERROR_MARKER;\n}\n\nexport function isNetworkError(err: Error | null): err is NetworkError {\n  return err ? (err as NetworkError).marker === NETWORK_ERROR_MARKER : false;\n}\n\nexport function isGraphQLError(err: Error | null): err is GraphQLError {\n  return err ? (err as GraphQLError).marker === GRAPHQL_ERROR_MARKER : false;\n}\n\nexport async function createNetworkError(\n  message: string,\n  url: string,\n  response: Response\n) {\n  const err = new Error(message) as NetworkError;\n  err.requestURL = url;\n  err.responseStatus = response.status;\n  err.responseText = await response.text();\n  err.marker = NETWORK_ERROR_MARKER;\n  return err as NetworkError;\n}\n\nexport function createGraphQLError(\n  message: string,\n  url: string,\n  errors: string[]\n) {\n  const err = new Error(message) as GraphQLError;\n  err.requestURL = url;\n  err.errors = [...errors];\n  return err;\n}\n","import {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  OperationType,\n  RequestParameters,\n  Variables,\n} from \"relay-runtime\";\n\nimport {createNetworkError, createGraphQLError} from \"./errors\";\n\nconst API_URL = `${process.env.REACT_APP_API_BASE_URL}/graphql`;\nexport const AUTH_URL = `${process.env.REACT_APP_API_BASE_URL}/auth/${process.env.REACT_APP_API_AUTH_TYPE}`;\n\nexport interface QueryResult<T extends OperationType> {\n  error: Error | null;\n  props: T[\"response\"] | null;\n  retry: (() => void) | null;\n}\n\nasync function fetchQuery(\n  request: RequestParameters,\n  variables: Variables\n): Promise<any> {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      query: request.text,\n      variables,\n    }),\n  });\n\n  if (response.ok) {\n    const payload = await response.json();\n    if (payload.errors) {\n      throw createGraphQLError(\n        `API server responded with GraphQL errors`,\n        API_URL,\n        payload.errors\n      );\n    }\n    return payload;\n  } else {\n    throw await createNetworkError(\n      `API server responded with ${response.status}`,\n      API_URL,\n      response\n    );\n  }\n}\n\nconst source = new RecordSource();\nconst network = Network.create(fetchQuery);\n\nexport function getEnvironment(): Environment {\n  const store = new Store(source);\n\n  return new Environment({\n    network,\n    store,\n  });\n}\n","import React, {useContext} from \"react\";\n\nimport {IUser as IRealUser} from \"./userTypes\";\nexport type IUser = IRealUser;\n\nexport const UserContext = React.createContext<IUser | null>(null);\n\ninterface RoleProps {\n  name: string;\n  children: JSX.Element;\n}\n\nexport const Role = (props: RoleProps) => {\n  const user = useContext(UserContext);\n  if (!user) return null;\n\n  const match = user.roles.some(role => role.name === props.name);\n  if (!match) return null;\n\n  return props.children;\n};\n","import React, {useState, useEffect} from \"react\";\n\nimport {Coordinator, IDelta} from \"./coordinator\";\n\nconst nullDelta: IDelta = {\n  units_to_add: [],\n  units_to_change: [],\n  units_to_restart: [],\n  units_to_remove: [],\n  files_to_write: [],\n};\n\nexport function hasPendingDelta(delta: IDelta) {\n  return [\n    delta.units_to_add,\n    delta.units_to_change,\n    delta.units_to_remove,\n    delta.units_to_restart,\n    delta.units_to_remove,\n    delta.files_to_write,\n  ].some(arr => arr.length > 0);\n}\n\nexport interface PendingDiff {\n  delta: IDelta;\n  refresh: () => void;\n}\n\nexport const PendingDiffContext = React.createContext<PendingDiff>({\n  delta: nullDelta,\n  refresh: () => {},\n});\n\ninterface PendingDiffProps {\n  coordinator: Coordinator;\n  children: JSX.Element;\n}\n\nexport function PendingDiffProvider(props: PendingDiffProps) {\n  const [delta, setDelta] = useState<IDelta>(nullDelta);\n  const [latch, setLatch] = useState(0);\n\n  useEffect(() => {\n    let ignore = false;\n\n    (async function() {\n      const delta = await props.coordinator.getDiff().catch(() => nullDelta);\n      if (!ignore) {\n        setDelta(delta);\n      }\n    })();\n\n    return () => {\n      ignore = true;\n    };\n  }, [props.coordinator, latch]);\n\n  const pendingDiff = {\n    delta,\n    refresh: () => setLatch(current => current + 1),\n  };\n\n  return (\n    <PendingDiffContext.Provider value={pendingDiff}>\n      {props.children}\n    </PendingDiffContext.Provider>\n  );\n}\n","import React, {useContext} from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport {Role} from \"./common/Role\";\nimport {PendingDiffContext, hasPendingDelta} from \"./common/PendingDiff\";\n\ninterface PillProps {\n  to: string;\n  exact?: boolean;\n  children: React.ReactNode;\n}\n\nfunction Pill(props: PillProps) {\n  return (\n    <li role=\"presentation\" className=\"nav-item\">\n      <NavLink\n        to={props.to}\n        exact={props.exact}\n        className=\"nav-link\"\n        activeClassName={\"active\"}\n      >\n        {props.children}\n      </NavLink>\n    </li>\n  );\n}\n\nexport const SideNav = () => {\n  const showBadge = hasPendingDelta(useContext(PendingDiffContext).delta);\n\n  return (\n    <ul className=\"nav nav-pills flex-column\">\n      <Pill to=\"/\" exact>\n        dashboard\n      </Pill>\n      <Pill to=\"/people\">dramatis personae</Pill>\n      <Pill to=\"/recent\">recent chatter</Pill>\n      <hr />\n      <Pill to=\"/quotes\">quotes</Pill>\n      <Pill to=\"/rem\">rem</Pill>\n      <Pill to=\"/events\">events</Pill>\n      <Role name=\"admin\">\n        <>\n          <hr />\n          <p className=\"bg-warning text-white font-weight-bold p-2 rounded text-center\">\n            <i className=\"fas fa-id-badge mr-2\" />\n            admin only\n          </p>\n          <Pill to=\"/admin/services\">services</Pill>\n          <Pill to=\"/admin/sync\">\n            sync{\" \"}\n            {showBadge && (\n              <span className=\"badge badge-info float-right\">pending</span>\n            )}\n          </Pill>\n        </>\n      </Role>\n    </ul>\n  );\n};\n","import React from \"react\";\n\nexport const Dashboard = () => (\n  <div className=\"card bg-light border border-info rounded\">\n    <div className=\"card-body\">\n      <h3 className=\"card-title\">Why hello there.</h3>\n      <p className=\"card-text\">\n        {\"Pretend there's something awesome written here.\"}\n      </p>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport interface User {\n  readonly name: string;\n  readonly presence: string;\n  readonly avatar: {image48: string | null};\n  readonly status: {readonly message: string | null};\n}\n\ninterface PersonProps {\n  user: User;\n  title: string;\n}\n\nexport function Person(props: PersonProps) {\n  const {name, presence, avatar, status} = props.user;\n  const avatarURL = avatar.image48;\n  const presenceIcon =\n    presence === \"ACTIVE\"\n      ? \"pushbot-status-active fa-dot-circle\"\n      : \"pushbot-status-inactive fa-circle\";\n  const {message} = status;\n\n  return (\n    <div className=\"pushbot-person row\">\n      <div className=\"col-xs-1 px-2\">\n        <img src={avatarURL!} className=\"rounded\" alt=\"\" />\n      </div>\n      <div className=\"col-xs-11 px-2\">\n        <p>\n          <i\n            className={`far pushbot-status mr-2 ${presenceIcon}`}\n            aria-hidden=\"true\"\n          />\n          <Link to={`/people/${name}`} className=\"pushbot-person-name mr-2\">\n            {name}\n          </Link>\n          <span className=\"pushbot-person-title font-weight-bold\">\n            {props.title}\n          </span>\n        </p>\n        <p className=\"pushbot-person-status-message font-italic font-weight-light\">\n          {message}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {User, Person} from \"./Person\";\n\nimport {PeopleQuery} from \"../__generated__/PeopleQuery.graphql\";\n\nimport \"./People.css\";\n\nexport class People extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query PeopleQuery {\n        users {\n          all {\n            name\n            presence\n\n            avatar {\n              image48\n            }\n\n            status {\n              message\n              emoji\n            }\n          }\n        }\n\n        titles: documents(set: \"title\") {\n          all(criteria: {}) {\n            edges {\n              node {\n                text\n                subject\n              }\n            }\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<PeopleQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QueryResult<PeopleQuery>) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    return (\n      <div>\n        <h3>Dramatis Personae</h3>\n        <blockquote className=\"blockquote text-right\">\n          Maybe the <em>real</em> lab was the friends we made along the way.\n        </blockquote>\n        <ul className=\"list-group\">\n          {this.collateUsers(props).map(({user, title}) => {\n            return (\n              <li key={user.name} className=\"list-group-item\">\n                <Person user={user} title={title} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  };\n\n  collateUsers(\n    props: QueryResult<PeopleQuery>[\"props\"]\n  ): {user: User; title: string}[] {\n    if (!props) {\n      return [];\n    }\n\n    const titles = props.titles;\n    if (!titles) {\n      return [];\n    }\n\n    const titlesByUsername: {[username: string]: string} = {};\n    for (const title of titles.all.edges) {\n      if (title.node.subject) {\n        titlesByUsername[title.node.subject] = title.node.text;\n      }\n    }\n\n    const userData = props.users.all.map(user => {\n      return {user, title: titlesByUsername[user.name] || \"\"};\n    });\n\n    userData.sort((a, b) => a.user.name.localeCompare(b.user.name));\n\n    return userData;\n  }\n}\n","import React, {Component} from \"react\";\nimport Chartist from \"chartist\";\n\nChartist.plugins = Chartist.plugins || {};\nChartist.plugins.ctHtmlLabels = function() {\n  return function(chart: any) {\n    chart.on(\"draw\", function(context: any) {\n      if (context.type === \"label\") {\n        context.element.empty()._node.innerHTML = context.text;\n      }\n    });\n  };\n};\n\ninterface ChartProps {\n  data: Chartist.IChartistData;\n  options: Chartist.IBarChartOptions;\n}\n\nexport class Chart extends Component<ChartProps> {\n  private refElement?: HTMLElement | null;\n  private chart?: Chartist.IChartistBarChart;\n\n  render() {\n    return (\n      <div\n        className=\"ct-chart ct-golden-section\"\n        ref={c => {\n          this.refElement = c;\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    const options = this.props.options || {};\n    options.plugins = [Chartist.plugins.ctHtmlLabels()];\n\n    this.chart = new Chartist.Bar(this.refElement, this.props.data, options);\n  }\n\n  componentWillUnmount() {\n    this.chart && this.chart.detach();\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport EmojiConverter from \"emoji-js\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {Chart} from \"../common/Chart\";\nimport {ProfileQuery} from \"../__generated__/ProfileQuery.graphql\";\n\nimport \"./Profile.css\";\n\ninterface ProfileProps {\n  match: {\n    params: {\n      name: string;\n    };\n  };\n}\n\ntype User = NonNullable<ProfileQuery[\"response\"][\"users\"][\"current\"]>;\n\ntype EmojiCount = User[\"topReactionsGiven\"] | User[\"topReactionsReceived\"];\n\nexport class Profile extends Component<ProfileProps> {\n  private environment: Environment;\n  private emoji: EmojiConverter;\n\n  constructor(props: ProfileProps) {\n    super(props);\n\n    this.environment = getEnvironment();\n    this.emoji = new EmojiConverter();\n\n    this.emoji.img_sets.apple.sheet = \"/sheet_apple_64.png\";\n    this.emoji.use_sheet = true;\n    this.emoji.include_title = true;\n  }\n\n  render() {\n    const query = graphql`\n      query ProfileQuery($name: String!, $titleCriteria: Criteria!) {\n        users {\n          current: withName(name: $name) {\n            avatar {\n              image192\n            }\n\n            topReactionsReceived(limit: 10) {\n              count\n              emoji {\n                name\n                url\n              }\n            }\n\n            topReactionsGiven(limit: 10) {\n              count\n              emoji {\n                name\n                url\n              }\n            }\n          }\n        }\n\n        titles: documents(set: \"title\") {\n          all(first: 100, criteria: $titleCriteria) {\n            edges {\n              node {\n                text\n              }\n            }\n          }\n        }\n\n        quotes: documents(set: \"quote\") {\n          rank(speaker: $name)\n        }\n      }\n    `;\n\n    const username = decodeURIComponent(this.props.match.params.name);\n    const variables = {\n      name: username,\n      titleCriteria: {subject: username},\n    };\n\n    return (\n      <QueryRenderer<ProfileQuery>\n        environment={this.environment}\n        query={query}\n        variables={variables}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QueryResult<ProfileQuery>) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    if (!props) {\n      return (\n        <div className=\"pushbot-loading\">\n          <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n          sluuuuurp\n        </div>\n      );\n    }\n\n    const user = props.users.current;\n    if (!user) {\n      return null;\n    }\n\n    const avatar = user.avatar.image192 || \"\";\n\n    return (\n      <div className=\"pushbot-profile row\">\n        <div className=\"col-md-6\">\n          <img\n            className=\"pushbot-profile-avatar img-responsive img-rounded\"\n            src={avatar}\n            alt=\"\"\n          />\n          {this.renderReactionsReceivedChart(user)}\n          {this.renderReactionsGivenChart(user)}\n        </div>\n        <div className=\"col-md-6\">\n          <h1 className=\"pushbot-profile-username\">\n            @{this.props.match.params.name}\n          </h1>\n          {this.renderTitles(props)}\n          {this.renderQuoteRank(props)}\n        </div>\n      </div>\n    );\n  };\n\n  renderReactionsGivenChart(user: User) {\n    return this.renderReactionChart(\n      user.topReactionsGiven,\n      \"Emoji reactions given\"\n    );\n  }\n\n  renderReactionsReceivedChart(user: User) {\n    return this.renderReactionChart(\n      user.topReactionsReceived,\n      \"Emoji reactions received\"\n    );\n  }\n\n  renderReactionChart(results: EmojiCount, name: string) {\n    const data = {\n      labels: results.map(each => {\n        if (each.emoji.url) {\n          return `<img class=\"emoji\" alt=\"${each.emoji.name}\" src=\"${each.emoji.url}\" title=\"${each.emoji.name}\">`;\n        }\n\n        return this.emoji.replace_colons(`:${each.emoji.name}:`);\n      }),\n      series: [results.map(each => each.count)],\n    };\n\n    const options = {\n      low: 0,\n      axisY: {\n        onlyInteger: true,\n      },\n    };\n\n    return (\n      <p className=\"pushbot-profile-reaction-chart\">\n        <h4>{name}</h4>\n        <Chart data={data} options={options} />\n      </p>\n    );\n  }\n\n  renderTitles(props: NonNullable<QueryResult<ProfileQuery>[\"props\"]>) {\n    const edges = props.titles ? props.titles.all.edges : [];\n    if (edges.length === 0) {\n      return (\n        <p className=\"pushbot-profile-titles-empty\">\n          No titles yet. Set one with{\" \"}\n          <code>\n            !settitle {decodeURIComponent(this.props.match.params.name)}: ...\n          </code>\n          .\n        </p>\n      );\n    }\n\n    return (\n      <p className=\"pushbot-profile-titles\">\n        {edges.map(t => this.titleFrom(t.node.text))}\n      </p>\n    );\n  }\n\n  renderQuoteRank(props: NonNullable<QueryResult<ProfileQuery>[\"props\"]>) {\n    if (!props.quotes) {\n      return (\n        <p className=\"pushbot-profile-quoterank\">\n          You have not yet been immortalized in the quotefile.\n        </p>\n      );\n    }\n\n    const rank = props.quotes.rank;\n    return (\n      <p className=\"pushbot-profile-quoterank\">\n        Rank #{rank} in the quotefile.\n      </p>\n    );\n  }\n\n  titleFrom(title: string) {\n    if (/^https?:/.test(title)) {\n      return (\n        <img\n          className=\"pushbot-profile-title img-responsive\"\n          alt=\"\"\n          src={title}\n        />\n      );\n    }\n\n    return <span className=\"pushbot-profile-title\">{title}</span>;\n  }\n}\n","export interface QueryModeCases<R> {\n  containing?(): R;\n  by?(): R;\n  about?(): R;\n  default?(): R;\n}\n\nexport interface QueryMode {\n  when<R>(cases: QueryModeCases<R>): R | null;\n  label: string;\n}\n\nexport const CONTAINING: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.containing || cases.default || (() => null))();\n  },\n\n  label: \"containing\",\n};\n\nexport const BY: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.by || cases.default || (() => null))();\n  },\n\n  label: \"by\",\n};\n\nexport const ABOUT: QueryMode = {\n  when<R>(cases: QueryModeCases<R>): R | null {\n    return (cases.about || cases.default || (() => null))();\n  },\n\n  label: \"about\",\n};\n\nexport const modes: QueryMode[] = [CONTAINING, BY, ABOUT];\n","import React from \"react\";\n\ninterface QuoteProps {\n  text: string;\n}\n\nexport function Quote(props: QuoteProps) {\n  return (\n    <blockquote className=\"mx-md-2 pushbot-quote\">\n      <p>{props.text}</p>\n    </blockquote>\n  );\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {RandomQuoteQuery, RandomQuoteResult} from \"./queryTypes\";\nimport {Quote} from \"./Quote\";\n\ninterface RandomQuoteState {\n  environment: Environment;\n}\n\nexport class RandomQuote extends Component<{}, RandomQuoteState> {\n  private lastQuote: string | null;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.lastQuote = null;\n    this.state = {\n      environment: getEnvironment(),\n    };\n  }\n\n  render() {\n    const query = graphql`\n      query RandomQuoteQuery {\n        documents(set: \"quote\") {\n          random(criteria: {}) {\n            found\n            text\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<RandomQuoteQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: RandomQuoteResult) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    const quoteText = props ? props.documents!.random.text : this.lastQuote;\n\n    if (!quoteText) {\n      return null;\n    }\n\n    this.lastQuote = quoteText;\n\n    return (\n      <div className=\"pushbot-random-quote card border-0\">\n        <div className=\"card-body\">\n          <p className=\"card-text\">\n            Type a search term above to find specific quotes. In the meantime,\n            enjoy this random quote.\n          </p>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-sm\"\n            onClick={this.another}\n          >\n            <i className=\"fas fa-sync\" aria-hidden=\"true\" />\n            Another\n          </button>\n        </div>\n        <Quote text={quoteText} />\n      </div>\n    );\n  };\n\n  another = () => {\n    this.setState({\n      environment: getEnvironment(),\n    });\n  };\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {Quote} from \"./Quote\";\nimport {getEnvironment} from \"../common/Transport\";\nimport {QueryMode} from \"./queryMode\";\nimport {QuotePageQuery, QuotePageResult, IQuotes} from \"./queryTypes\";\n\ninterface QuotePageProps {\n  query: string;\n  people: string[];\n  mode: QueryMode;\n}\n\nexport class QuotePage extends Component<QuotePageProps> {\n  private environment: Environment;\n  private lastTotal: number | null;\n  private lastResults: IQuotes | null;\n\n  constructor(props: QuotePageProps) {\n    super(props);\n    this.environment = getEnvironment();\n    this.lastTotal = null;\n    this.lastResults = null;\n  }\n\n  render() {\n    const query = graphql`\n      query QuotePageQuery($c: Criteria!) {\n        documents(set: \"quote\") {\n          all(criteria: $c, first: 20) {\n            edges {\n              node {\n                id\n                text\n              }\n            }\n\n            pageInfo {\n              count\n              hasNextPage\n            }\n          }\n        }\n      }\n    `;\n\n    const criteria: any = {query: this.props.query};\n    this.props.mode.when({\n      by: () => {\n        criteria.speakers = this.props.people;\n      },\n      about: () => {\n        criteria.mentions = this.props.people;\n      },\n    });\n\n    const variables = {\n      c: criteria,\n    };\n\n    return (\n      <QueryRenderer<QuotePageQuery>\n        environment={this.environment}\n        query={query}\n        variables={variables}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = ({error, props}: QuotePageResult) => {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    if (!props && !this.lastResults) {\n      return (\n        <div className=\"pushbot-loading\">\n          <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n          performing query\n        </div>\n      );\n    } else if (!props && this.lastResults && this.lastTotal) {\n      return this.renderDocuments(this.lastTotal, this.lastResults);\n    } else if (props) {\n      this.lastTotal = props.documents!.all.pageInfo.count;\n      this.lastResults = props.documents!.all.edges;\n\n      return this.renderDocuments(this.lastTotal, this.lastResults);\n    }\n  };\n\n  renderDocuments(total: number, documents: IQuotes) {\n    const quotes = documents.map(document => {\n      return <Quote key={document.node.id!} text={document.node.text} />;\n    });\n\n    const more = documents.length < total ? \"the first of\" : \"\";\n    const plural = total === 1 ? `matching quote` : `matching quotes`;\n\n    return (\n      <div className=\"pushbot-results card border-0\">\n        <div className=\"card-body\">\n          <p>\n            Showing {more} <strong>{total}</strong> {plural}.\n          </p>\n        </div>\n        {quotes}\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\n\nimport {QueryMode, CONTAINING, BY, ABOUT, modes} from \"./queryMode\";\nimport {RandomQuote} from \"./RandomQuote\";\nimport {QuotePage} from \"./QuotePage\";\n\nimport \"./Quotes.css\";\n\ninterface Search {\n  query: string;\n  people: string;\n  mode: QueryMode;\n}\n\nexport class Quotes extends Component {\n  readSearch(): Search {\n    const params = new URLSearchParams(window.location.search);\n\n    let mode = CONTAINING;\n    let people = \"\";\n    if (params.has(\"by\")) {\n      mode = BY;\n      people = params.get(\"by\")!;\n    } else if (params.has(\"about\")) {\n      mode = ABOUT;\n      people = params.get(\"about\")!;\n    }\n\n    return {\n      query: params.get(\"q\") || \"\",\n      people,\n      mode,\n    };\n  }\n\n  writeSearch(changes: Partial<Search>) {\n    const previous = this.readSearch();\n    const current = Object.assign(previous, changes);\n\n    const params = new URLSearchParams();\n\n    current.mode.when({\n      by: () => params.set(\"by\", current.people),\n      about: () => params.set(\"about\", current.people),\n    });\n    if (current.query.length) {\n      params.set(\"q\", current.query);\n    }\n\n    const nextSearch = params.toString();\n    const nextURL =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname +\n      (nextSearch.length > 0 ? \"?\" + nextSearch : \"\") +\n      window.location.hash;\n\n    if (window.history.replaceState) {\n      window.history.replaceState({}, \"\", nextURL);\n    } else {\n      window.location.href = nextURL;\n    }\n    this.forceUpdate();\n  }\n\n  render() {\n    const search = this.readSearch();\n    const showPeople = search.mode.when({\n      containing: () => false,\n      by: () => true,\n      about: () => true,\n    });\n\n    return (\n      <div>\n        <form\n          className={`pushbot-quote-form form-inline pushbot-mode-${search.mode.label}`}\n        >\n          <select\n            className=\"pushbot-quote-mode form-control\"\n            value={search.mode.label}\n            onChange={this.didChangeMode}\n          >\n            {modes.map((mode, index) => {\n              return (\n                <option key={index} value={mode.label}>\n                  {mode.label}\n                </option>\n              );\n            })}\n          </select>\n          {showPeople && (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"pushbot-quote-people\"\n              placeholder=\"fenris, iguanaditty\"\n              value={search.people}\n              onChange={this.didChangePeople}\n            />\n          )}\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"pushbot-quote-query\"\n            placeholder='\"query\"'\n            value={search.query}\n            onChange={this.didChangeQuery}\n          />\n        </form>\n        {this.renderResult(search)}\n      </div>\n    );\n  }\n\n  renderResult(search: Search) {\n    const people = search.people\n      .split(/[,+;]|\\s/)\n      .map(person => person.replace(/^@/, \"\"))\n      .map(person => person.trim())\n      .filter(person => person.length > 0);\n\n    const noQuery = search.mode.when({\n      containing: () => search.query.length === 0,\n      by: () => people.length === 0,\n      about: () => people.length === 0,\n    });\n\n    if (noQuery) {\n      return <RandomQuote />;\n    } else {\n      return (\n        <QuotePage mode={search.mode} people={people} query={search.query} />\n      );\n    }\n  }\n\n  didChangeMode = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const mode = modes.find(mode => mode.label === event.target.value);\n    this.writeSearch({mode});\n  };\n\n  didChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.writeSearch({query: event.target.value});\n  };\n\n  didChangePeople = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.writeSearch({people: event.target.value});\n  };\n}\n","import React, {Component} from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\ninterface FeedFormProps {\n  ready: boolean;\n  feedURL: string;\n}\n\ninterface FeedFormState {\n  copied: boolean;\n}\n\nexport class FeedForm extends Component<FeedFormProps, FeedFormState> {\n  state = {\n    copied: false,\n  };\n\n  render() {\n    const btnClass = this.state.copied\n      ? \"btn btn-success\"\n      : \"btn btn-secondary\";\n    const btnMessage = this.state.copied ? \"Copied\" : \"Copy\";\n\n    return (\n      <p className=\"form-inline\">\n        <input\n          type=\"text\"\n          id=\"pushbot-events-feedurl\"\n          className=\"form-control\"\n          value={this.props.feedURL}\n          readOnly\n        />\n        <CopyToClipboard\n          text={this.props.feedURL}\n          onCopy={() => this.setState({copied: true})}\n        >\n          <button className={btnClass} disabled={!this.props.ready}>\n            {btnMessage}\n          </button>\n        </CopyToClipboard>\n      </p>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {FeedForm} from \"./FeedForm\";\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\n\nimport {EventsQuery} from \"../__generated__/EventsQuery.graphql\";\n\nimport \"./Events.css\";\n\nexport class Events extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query EventsQuery {\n        calendarURL\n      }\n    `;\n\n    return (\n      <QueryRenderer<EventsQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = (result: QueryResult<EventsQuery>) => {\n    return (\n      <div>\n        <h3>Goings On and Happenings</h3>\n        {this.renderResultBody(result)}\n      </div>\n    );\n  };\n\n  renderResultBody({error, props}: QueryResult<EventsQuery>) {\n    if (error) {\n      return <div>{error.message}</div>;\n    }\n\n    const ready = Boolean(props);\n    const feedURL = props ? props.calendarURL : \"...\";\n\n    return (\n      <div>\n        <p>\n          Keep up with #~s events planned in the <code>#events</code> channel\n          with your own, personal iCal feed.\n        </p>\n        <FeedForm ready={ready} feedURL={feedURL} />\n        <p>\n          Subscribe to this URL with any compatible calendar software, including{\" \"}\n          <a\n            href=\"https://calendar.google.com/calendar/r/settings/addbyurl\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Google calendar\n          </a>\n          .\n        </p>\n      </div>\n    );\n  }\n}\n","import {QueryResult} from \"../common/Transport\";\n\nimport {\n  RecentChannelQuery as ORecentChannelQuery,\n  RecentChannelQueryVariables as ORecentChannelQueryVariables,\n  RecentChannelQueryResponse as ORecentChannelQueryResponse,\n} from \"../__generated__/RecentChannelQuery.graphql\";\n\nimport {\n  RecentHistoryQuery as ORecentHistoryQuery,\n  RecentHistoryQueryVariables as ORecentHistoryQueryVariables,\n  RecentHistoryQueryResponse as ORecentHistoryQueryResponse,\n} from \"../__generated__/RecentHistoryQuery.graphql\";\n\nexport type RecentChannelQuery = ORecentChannelQuery;\nexport type RecentChannelQueryVariables = ORecentChannelQueryVariables;\nexport type RecentChannelQueryResponse = ORecentChannelQueryResponse;\nexport type RecentChannelResult = QueryResult<RecentChannelQuery>;\n\nexport type RecentHistoryQuery = ORecentHistoryQuery;\nexport type RecentHistoryQueryVariables = ORecentHistoryQueryVariables;\nexport type RecentHistoryQueryResponse = ORecentHistoryQueryResponse;\nexport type RecentHistoryResult = QueryResult<RecentHistoryQuery>;\n\nexport type ILine = NonNullable<\n  RecentHistoryQueryResponse[\"cache\"][\"linesForChannel\"]\n>[0];\n\nexport const ALL = Symbol(\"all\");\n\nexport type IChange = ILine | typeof ALL;\n\nexport interface IDisposable {\n  dispose(): void;\n}\n","import {IChange, ILine, IDisposable, ALL} from \"./queryTypes\";\n\nexport class Selection {\n  public isSelecting: boolean;\n  private ids: Set<string>;\n  private subs: ((arg: IChange) => any)[];\n\n  constructor() {\n    this.ids = new Set();\n    this.isSelecting = false;\n    this.subs = [];\n  }\n\n  onDidChange(cb: (arg: IChange) => any): IDisposable {\n    this.subs.push(cb);\n    return {\n      dispose: () => {\n        const index = this.subs.indexOf(cb);\n        this.subs.splice(index, 1);\n      },\n    };\n  }\n\n  didChange(payload: IChange) {\n    for (const sub of this.subs) {\n      sub(payload);\n    }\n  }\n\n  isSelected(line: ILine): boolean {\n    return this.ids.has(line.id!);\n  }\n\n  select(line: ILine): boolean {\n    const wasSelected = this.ids.has(line.id!);\n    this.ids.add(line.id!);\n    if (!wasSelected) this.didChange(line);\n    return !wasSelected;\n  }\n\n  startSelecting() {\n    this.isSelecting = true;\n  }\n\n  stopSelecting() {\n    this.isSelecting = false;\n  }\n\n  toggle(line: ILine) {\n    if (!this.ids.delete(line.id!)) {\n      this.ids.add(line.id!);\n    }\n    this.didChange(line);\n  }\n\n  clear() {\n    this.ids.clear();\n    this.didChange(ALL);\n  }\n\n  getLineIDs(): string[] {\n    return Array.from(this.ids);\n  }\n\n  isEmpty(): boolean {\n    return this.ids.size === 0;\n  }\n\n  describe(): string {\n    if (this.ids.size === 0) {\n      return \"nothing selected\";\n    } else if (this.ids.size === 1) {\n      return \"1 line selected\";\n    } else {\n      return `${this.ids.size} lines selected`;\n    }\n  }\n}\n","import React, {Component} from \"react\";\nimport moment from \"moment\";\n\nimport {ILine, IDisposable, ALL} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\n\ninterface LineProps {\n  previous?: ILine;\n  line: ILine;\n  selection: Selection;\n}\n\nexport class Line extends Component<LineProps> {\n  private sub?: IDisposable;\n\n  componentDidMount() {\n    this.sub = this.props.selection.onDidChange(kind => {\n      if (kind === ALL) this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.sub && this.sub.dispose();\n  }\n\n  render() {\n    const {line, previous} = this.props;\n    const ts = moment(parseInt(line.timestamp));\n    const sameSpeaker = previous && previous.speaker!.id === line.speaker!.id;\n\n    const lineClasses = [\"pushbot-line\"];\n    if (this.props.selection.isSelected(line))\n      lineClasses.push(\"pushbot-line-selected\");\n\n    let speakerBanner = null;\n    if (!sameSpeaker) {\n      speakerBanner = (\n        <div className=\"pushbot-speaker-banner\">\n          <span className=\"pushbot-line-avatar\">\n            <img src={line.speaker!.avatar!.image32!} alt=\"\" />\n          </span>\n          <span className=\"pushbot-line-name\">{line.speaker!.name}</span>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className={lineClasses.join(\" \")}\n        onMouseDown={this.didMouseDown}\n        onMouseMove={this.didMouseMove}\n      >\n        {speakerBanner}\n        <span className=\"pushbot-line-timestamp\">{ts.format(\"h:mm:ss\")}</span>\n        <span className=\"pushbot-line-text\">{line.text}</span>\n      </div>\n    );\n  }\n\n  didMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (event.button !== 0) return;\n\n    event.preventDefault();\n    this.props.selection.toggle(this.props.line);\n    this.props.selection.startSelecting();\n    this.forceUpdate();\n  };\n\n  didMouseMove = (event: React.MouseEvent) => {\n    if (!this.props.selection.isSelecting) return;\n\n    event.preventDefault();\n    if (this.props.selection.select(this.props.line)) {\n      this.forceUpdate();\n    }\n  };\n}\n","import React, {Component} from \"react\";\n\nimport {ILine} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {Line} from \"./Line\";\n\ninterface HistoryProps {\n  lines: ReadonlyArray<ILine> | null;\n  selection: Selection;\n}\n\nexport class History extends Component<HistoryProps> {\n  private bottom?: HTMLElement | null;\n\n  componentDidMount() {\n    window.addEventListener(\"mouseup\", this.didMouseUp);\n\n    this.bottom && this.bottom.scrollIntoView();\n  }\n\n  componentDidUpdate() {\n    this.bottom && this.bottom.scrollIntoView();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\", this.didMouseUp);\n  }\n\n  render() {\n    if (this.props.lines === null) {\n      return this.renderLoading();\n    } else {\n      return this.renderLines();\n    }\n  }\n\n  renderLoading() {\n    return (\n      <div className=\"pushbot-history border pushbot-loading\">\n        <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n        loading\n      </div>\n    );\n  }\n\n  renderLines() {\n    return (\n      <div\n        className=\"pushbot-history border pushbot-history-loaded\"\n        onMouseOut={this.didMouseOut}\n      >\n        {this.props.lines!.map((line, i) => {\n          return (\n            <Line\n              key={line.id!}\n              line={line}\n              previous={this.props.lines![i - 1]}\n              selection={this.props.selection}\n            />\n          );\n        })}\n        <div\n          ref={element => {\n            this.bottom = element;\n          }}\n        />\n      </div>\n    );\n  }\n\n  didMouseUp = () => {\n    this.props.selection.stopSelecting();\n  };\n\n  didMouseOut = () => {\n    this.props.selection.stopSelecting();\n  };\n}\n","import React, {Component} from \"react\";\nimport {Environment, commitMutation} from \"relay-runtime\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {IDisposable} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {Role} from \"../common/Role\";\n\ninterface ActionBarProps {\n  environment: Environment;\n  channel: string;\n  selection: Selection;\n}\n\nexport class ActionBar extends Component<ActionBarProps> {\n  private sub?: IDisposable;\n  private didSubmitQuote: () => void;\n  private didSubmitLim: () => void;\n\n  constructor(props: ActionBarProps) {\n    super(props);\n\n    this.didSubmitQuote = this.submit.bind(this, \"quote\");\n    this.didSubmitLim = this.submit.bind(this, \"lim\");\n  }\n\n  componentDidMount() {\n    this.sub = this.props.selection.onDidChange(() => this.forceUpdate());\n  }\n\n  componentWillUnmount() {\n    this.sub && this.sub.dispose();\n  }\n\n  render() {\n    const textClassNames = [\"text-muted\"];\n    let clearBtn = null;\n    let disable = true;\n    if (this.props.selection.isEmpty()) {\n      textClassNames.push(\"pushbot-empty\");\n    } else {\n      disable = false;\n      clearBtn = (\n        <button className=\"btn btn-link\" onClick={this.didClear}>\n          clear\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"pushbot-recent-actions\">\n        <p className={textClassNames.join(\" \")}>\n          {this.props.selection.describe()}\n          {clearBtn}\n        </p>\n        <div className=\"btn-group pushbot-recent-actions\">\n          <Role name=\"quote pontiff\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={disable}\n              onClick={this.didSubmitQuote}\n            >\n              Quote\n            </button>\n          </Role>\n          <Role name=\"poet laureate\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={disable}\n              onClick={this.didSubmitLim}\n            >\n              Limerick\n            </button>\n          </Role>\n        </div>\n      </div>\n    );\n  }\n\n  didClear = () => {\n    this.props.selection.clear();\n  };\n\n  submit(set: string) {\n    if (!this.props.channel) return;\n\n    const mutation = graphql`\n      mutation ActionBarSubmitMutation(\n        $set: String!\n        $channel: String!\n        $lines: [ID!]!\n      ) {\n        createDocument(set: $set, channel: $channel, lines: $lines) {\n          id\n        }\n      }\n    `;\n\n    const variables = {\n      set,\n      channel: this.props.channel,\n      lines: this.props.selection.getLineIDs(),\n    };\n\n    commitMutation(this.props.environment, {\n      mutation,\n      variables,\n      onCompleted: () => this.props.selection.clear(),\n    });\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {Environment} from \"relay-runtime\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {\n  ILine,\n  RecentChannelQuery,\n  RecentChannelResult,\n  RecentHistoryQuery,\n  RecentHistoryResult,\n} from \"./queryTypes\";\nimport {Selection} from \"./selection\";\nimport {History} from \"./History\";\nimport {ActionBar} from \"./ActionBar\";\n\nimport \"./Recent.css\";\n\ninterface RecentState {\n  environment: Environment;\n  currentChannel: string | null;\n  selection: Selection;\n}\n\nexport class Recent extends Component<{}, RecentState> {\n  private knownChannels: ReadonlyArray<string> | null;\n  private history: ReadonlyArray<ILine> | null;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.knownChannels = null;\n    this.history = null;\n\n    this.state = {\n      environment: getEnvironment(),\n      currentChannel: null,\n      selection: new Selection(),\n    };\n    this.didChangeChannel = this.didChangeChannel.bind(this);\n  }\n\n  render() {\n    if (this.knownChannels === null) {\n      return this.renderChannelQuery();\n    }\n\n    return this.renderHistoryQuery();\n  }\n\n  renderError(error: Error) {\n    return (\n      <div className=\"pushbot-recent pushbot-recent-error\">\n        <h3>Recent Chatter</h3>\n        <form className=\"pushbot-recent-form form-inline\">\n          <select\n            className=\"pushbot-recent-channel form-control\"\n            value=\"...\"\n            disabled\n          >\n            <option value=\"...\">...</option>\n          </select>\n        </form>\n        <div className=\"pushbot-error-message\">{error.message}</div>\n      </div>\n    );\n  }\n\n  renderChannelQuery() {\n    const query = graphql`\n      query RecentChannelQuery {\n        cache {\n          knownChannels\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<RecentChannelQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={{}}\n        render={this.renderChannelResult}\n      />\n    );\n  }\n\n  renderChannelResult = ({error, props}: RecentChannelResult) => {\n    if (error) {\n      return this.renderError(error);\n    }\n\n    const channelNames = props ? props.cache.knownChannels : this.knownChannels;\n    return this.renderCurrent(channelNames || [], null);\n  };\n\n  renderHistoryQuery() {\n    const query = graphql`\n      query RecentHistoryQuery($channel: String!) {\n        cache {\n          knownChannels\n          linesForChannel(channel: $channel) {\n            id\n            speaker {\n              id\n              name\n              avatar {\n                image32\n              }\n            }\n            timestamp\n            text\n          }\n        }\n      }\n    `;\n\n    const variables = {\n      channel: this.state.currentChannel || \"\",\n    };\n\n    return (\n      <QueryRenderer<RecentHistoryQuery>\n        environment={this.state.environment}\n        query={query}\n        variables={variables}\n        render={this.renderHistoryResult}\n      />\n    );\n  }\n\n  renderHistoryResult = ({error, props}: RecentHistoryResult) => {\n    if (error) {\n      return this.renderError(error);\n    }\n\n    const channelNames = props ? props.cache.knownChannels : this.knownChannels;\n    const history = props ? props.cache.linesForChannel : this.history;\n\n    return this.renderCurrent(channelNames, history);\n  };\n\n  renderCurrent(\n    channelNames: ReadonlyArray<string> | null,\n    history: ReadonlyArray<ILine> | null\n  ) {\n    if (channelNames) {\n      if (!this.state.currentChannel && channelNames.length > 0) {\n        setTimeout(() => this.setState({currentChannel: channelNames[0]}), 0);\n      }\n      this.knownChannels = channelNames;\n    }\n\n    if (history) {\n      this.history = history;\n    }\n\n    const displayChannelNames = channelNames || [\"...\"];\n    const displayChannel = this.state.currentChannel || \"...\";\n\n    return (\n      <div className=\"pushbot-recent\">\n        <h3>Recent Chatter</h3>\n        <form className=\"pushbot-recent-form form-inline\">\n          <label className=\"mr-md-3\" htmlFor=\"pushbot-recent-channel\">\n            Channel\n          </label>\n          <div className=\"input-group\">\n            <select\n              className=\"pushbot-recent-channel form-control input-group-prepend\"\n              id=\"pushbot-recent-channel\"\n              value={displayChannel}\n              disabled={!channelNames}\n              onChange={this.didChangeChannel}\n            >\n              {displayChannelNames.map(name => {\n                return (\n                  <option key={name} value={name}>\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n            <button\n              className=\"btn btn-secondary pushbot-recent-refresh\"\n              onClick={this.refresh}\n            >\n              <i className=\"fas fa-sync\" aria-hidden /> Refresh\n            </button>\n          </div>\n        </form>\n        <History lines={history} selection={this.state.selection} />\n        <ActionBar\n          environment={this.state.environment}\n          channel={this.state.currentChannel || \"\"}\n          selection={this.state.selection}\n        />\n      </div>\n    );\n  }\n\n  didChangeChannel = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.history = null;\n    this.state.selection.clear();\n    this.setState({currentChannel: event.target.value});\n  };\n\n  refresh = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    this.setState({environment: getEnvironment()});\n  };\n}\n","import React from \"react\";\n\ninterface Props {\n  query: string;\n  onChange: (q: string) => void;\n}\n\nexport function RemForm(props: Props) {\n  function queryChange(evt: React.ChangeEvent<HTMLInputElement>) {\n    props.onChange(evt.target.value);\n  }\n\n  return (\n    <form className=\"form-inline mt-2 mb-3\">\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text\">containing</div>\n        </div>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          value={props.query}\n          onChange={queryChange}\n        />\n      </div>\n    </form>\n  );\n}\n","import React, {useState, useContext, useEffect} from \"react\";\nimport cx from \"classnames\";\n\nimport {isNetworkError, isGraphQLError} from \"./errors\";\n\nexport type Severity = \"info\" | \"success\" | \"danger\";\n\ninterface Notification {\n  id: number;\n  severity: Severity;\n  body: React.ReactNode;\n}\n\nclass NotificationHub {\n  private nextID: number;\n  private notifications: Notification[];\n  private subscribers: ((ns: Notification[]) => any)[];\n\n  constructor() {\n    this.nextID = 0;\n    this.notifications = [];\n    this.subscribers = [];\n  }\n\n  deleteNotification(n: Notification) {\n    this.notifications = this.notifications.filter(each => each !== n);\n    this.notify();\n  }\n\n  addInfo(body: React.ReactNode) {\n    this.add(\"info\", body);\n  }\n\n  addSuccess(body: React.ReactNode) {\n    this.add(\"success\", body);\n  }\n\n  addSuccessMessage(message: string) {\n    this.addSuccess(<p>{message}</p>);\n  }\n\n  addDanger(body: React.ReactNode) {\n    this.add(\"danger\", body);\n  }\n\n  addError(err: Error) {\n    if (isNetworkError(err)) {\n      this.addDanger(\n        <>\n          <h5>Error: {err.message}</h5>\n          <p>\n            {err.requestURL} {err.responseStatus}\n          </p>\n          <pre>{err.responseText}</pre>\n        </>\n      );\n      return;\n    }\n\n    if (isGraphQLError(err)) {\n      this.addDanger(\n        <>\n          <h5>Error: {err.message}</h5>\n          {err.errors.map((each, i) => (\n            <p key={i}>{each}</p>\n          ))}\n        </>\n      );\n      return;\n    }\n\n    this.addDanger(\n      <>\n        <h5>Error: {err.message}</h5>\n        <pre className=\"bg-light px-2 py-1 mt-4\">{err.stack}</pre>\n      </>\n    );\n  }\n\n  onNotification(callback: (ns: Notification[]) => any) {\n    this.subscribers.push(callback);\n    return () => {\n      this.subscribers = this.subscribers.filter(sub => sub === callback);\n    };\n  }\n\n  protected add(severity: Severity, body: React.ReactNode) {\n    const id = this.nextID;\n    this.nextID++;\n    this.notifications.push({id, severity, body});\n    this.notify();\n  }\n\n  protected notify() {\n    const current = [...this.notifications];\n    for (const subscriber of this.subscribers) {\n      subscriber(current);\n    }\n  }\n}\n\nclass DevNull extends NotificationHub {\n  protected add() {}\n\n  onNotification() {\n    return () => {};\n  }\n}\n\nconst nullHub = new DevNull();\n\nexport const NotificationContext = React.createContext<NotificationHub>(\n  nullHub\n);\n\nexport function NotificationsProvider(props: {children: React.ReactNode}) {\n  const [hub] = useState(() => new NotificationHub());\n\n  return (\n    <NotificationContext.Provider value={hub}>\n      {props.children}\n    </NotificationContext.Provider>\n  );\n}\n\nexport function NotificationsView() {\n  const hub = useContext(NotificationContext);\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n\n  useEffect(() => hub.onNotification(setNotifications), [hub]);\n\n  function makeCloser(n: Notification) {\n    return function(evt: React.MouseEvent<HTMLButtonElement>) {\n      evt.preventDefault();\n      hub.deleteNotification(n);\n    };\n  }\n\n  if (notifications.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"px-2 mt-2 mb-3\">\n      {notifications.map(n => (\n        <div key={n.id} className={cx(\"alert\", `alert-${n.severity}`, \"my-2\")}>\n          <button className=\"close\" onClick={makeCloser(n)}>\n            <i className=\"fa far fa-window-close\" />\n          </button>\n          {n.body}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Loading() {\n  return (\n    <div className=\"row mt-md-5 pushbot-loading\">\n      <p className=\"mx-auto\">\n        <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n        loading\n      </p>\n    </div>\n  );\n}\n","import React, {useContext} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {Link} from \"react-router-dom\";\n\nimport {getEnvironment} from \"../common/Transport\";\nimport {NotificationContext} from \"../common/Notifications\";\nimport {Loading} from \"../common/Loading\";\nimport {RandomMemoryListQuery, RandomMemoryListResult} from \"./memoryTypes\";\n\nexport function RandomMemoryList() {\n  const env = getEnvironment();\n\n  const query = graphql`\n    query RandomMemoryListQuery {\n      rem {\n        search(first: 10, orderField: RANDOM) {\n          edges {\n            cursor\n            node {\n              key\n            }\n          }\n        }\n      }\n    }\n  `;\n\n  return (\n    <QueryRenderer<RandomMemoryListQuery>\n      environment={env}\n      query={query}\n      variables={{}}\n      render={result => <RandomMemoryResults {...result} />}\n    />\n  );\n}\n\nfunction RandomMemoryResults({error, props, retry}: RandomMemoryListResult) {\n  const hub = useContext(NotificationContext);\n\n  if (error !== null) {\n    hub.addError(error);\n    return <div className=\"alert alert-danger\">Unable to perform query.</div>;\n  }\n\n  if (props === null) {\n    return <Loading />;\n  }\n\n  function another() {\n    return retry && retry();\n  }\n\n  const results = props.rem.search.edges.map(edge => (\n    <li key={edge.cursor} className=\"list-group-item\">\n      <Link to={`/rem/${encodeURIComponent(edge.node.key)}`}>\n        {edge.node.key}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div className=\"card card-light\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">\n          Type above to search known memory keys. Here's a random sample of\n          what's available:\n        </p>\n        <p className=\"card-text mt-1 mb-3\">\n          <button className=\"btn btn-secondary\" onClick={another}>\n            <i className=\"fas fa-sync mr-2\" aria-hidden=\"true\" />\n            Another\n          </button>\n        </p>\n        <ul className=\"card-text list-group\">{results}</ul>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {createPaginationContainer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {Link} from \"react-router-dom\";\n\nimport {MatchingMemoryPageRem} from \"./memoryTypes\";\n\ninterface Props {\n  relay: {\n    hasMore(): boolean;\n    isLoading(): boolean;\n    loadMore(): any;\n  };\n  rem: MatchingMemoryPageRem;\n}\n\nfunction MemoryPageView(props: Props) {\n  function loadNextPage() {\n    if (props.relay.hasMore() && !props.relay.isLoading()) {\n      return;\n    }\n  }\n\n  const pageSize = props.rem.search.edges.length;\n  const count = props.rem.search.pageInfo.count;\n\n  return (\n    <>\n      <p className=\"my-2\">\n        Showing {pageSize} result{pageSize === 1 ? \"\" : \"s\"}\n        {count > pageSize ? `out of ${count}` : \"\"}.\n      </p>\n      <ul className=\"list-group\">\n        {props.rem.search.edges.map(edge => (\n          <li key={edge.cursor} className=\"list-group-item\">\n            <Link to={`/rem/${encodeURIComponent(edge.node.key)}`}>\n              {edge.node.key}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <div className=\"my-2\">\n        {props.relay.hasMore() && (\n          <button className=\"btn btn-info\" onClick={loadNextPage}>\n            Next page\n          </button>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport const MatchingMemoryPage = createPaginationContainer(\n  MemoryPageView,\n  {\n    rem: graphql`\n      fragment MatchingMemoryPage_rem on Rem\n        @argumentDefinitions(\n          pattern: {type: \"String!\"}\n          count: {type: \"Int!\"}\n          cursor: {type: \"String\"}\n        ) {\n        search(query: $pattern, first: $count, after: $cursor)\n          @connection(key: \"MatchingMemoryPage_search\") {\n          pageInfo {\n            count\n            hasPreviousPage\n            hasNextPage\n          }\n\n          edges {\n            cursor\n            node {\n              key\n            }\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.rem && props.rem.search;\n    },\n    getVariables(_props, {count, cursor}, fragmentVariables) {\n      return {\n        pattern: fragmentVariables.pattern,\n        count,\n        cursor,\n      };\n    },\n    query: graphql`\n      query MatchingMemoryPageQuery(\n        $pattern: String!\n        $count: Int!\n        $cursor: String\n      ) {\n        rem {\n          ...MatchingMemoryPage_rem\n            @arguments(pattern: $pattern, count: $count, cursor: $cursor)\n        }\n      }\n    `,\n  }\n);\n","import React, {useContext} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {NotificationContext} from \"../common/Notifications\";\nimport {Loading} from \"../common/Loading\";\nimport {MatchingMemoryListQuery} from \"../__generated__/MatchingMemoryListQuery.graphql\";\nimport {MatchingMemoryPage} from \"./MatchingMemoryPage\";\n\ntype Result = QueryResult<MatchingMemoryListQuery>;\n\ninterface Props {\n  query: string;\n}\n\nexport function MatchingMemoryList(props: Props) {\n  const env = getEnvironment();\n\n  const query = graphql`\n    query MatchingMemoryListQuery($pattern: String!) {\n      rem {\n        ...MatchingMemoryPage_rem @arguments(pattern: $pattern, count: 10)\n      }\n    }\n  `;\n\n  const variables = {\n    pattern: props.query,\n  };\n\n  return (\n    <QueryRenderer<MatchingMemoryListQuery>\n      environment={env}\n      query={query}\n      variables={variables}\n      render={results => <MatchingMemoryResults {...results} />}\n    />\n  );\n}\n\nfunction MatchingMemoryResults(results: Result) {\n  const hub = useContext(NotificationContext);\n\n  if (results.error) {\n    hub.addError(results.error);\n    return <div className=\"alert alert-danger\">Unable to perform query.</div>;\n  }\n\n  if (!results.props) {\n    return <Loading />;\n  }\n\n  return <MatchingMemoryPage rem={results.props.rem} />;\n}\n","import React from \"react\";\n\nimport {useQueryParameter} from \"../common/urlSearch\";\nimport {RemForm} from \"./RemForm\";\nimport {RandomMemoryList} from \"./RandomMemoryList\";\nimport {MatchingMemoryList} from \"./MatchingMemoryList\";\n\nexport function Rem() {\n  const [query, setQuery] = useQueryParameter(\"q\");\n\n  return (\n    <>\n      <h3>rem</h3>\n      <RemForm query={query} onChange={setQuery} />\n      {query === \"\" ? (\n        <RandomMemoryList />\n      ) : (\n        <MatchingMemoryList query={query} />\n      )}\n    </>\n  );\n}\n","import {useState} from \"react\";\n\nexport function useQueryParameter(\n  parameterName: string\n): [string, (v: string) => void] {\n  const [, setLatch] = useState(0);\n\n  const params = new URLSearchParams(window.location.search);\n  const current = params.get(parameterName) || \"\";\n\n  function setNext(next: string) {\n    const nextParams = new URLSearchParams();\n    if (next.length > 0) {\n      nextParams.set(parameterName, next);\n    }\n\n    const nextSearch = nextParams.toString();\n    const nextURL =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname +\n      (nextSearch.length > 0 ? \"?\" + nextSearch : \"\") +\n      window.location.hash;\n\n    if (window.history.replaceState) {\n      window.history.replaceState({}, \"\", nextURL);\n    } else {\n      window.location.href = nextURL;\n    }\n    setLatch(latch => latch + 1);\n  }\n\n  return [current, setNext];\n}\n","import React, {useContext} from \"react\";\nimport {QueryRenderer} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {Link} from \"react-router-dom\";\nimport {TwitterTweetEmbed} from \"react-twitter-embed\";\n\nimport {getEnvironment, QueryResult} from \"../common/Transport\";\nimport {NotificationContext} from \"../common/Notifications\";\nimport {Loading} from \"../common/Loading\";\nimport {RemEntryQuery} from \"../__generated__/RemEntryQuery.graphql\";\n\ntype RemEntryQueryResult = QueryResult<RemEntryQuery>;\n\ninterface Props {\n  match: {\n    params: {\n      key: string;\n    };\n  };\n}\n\nexport function RemEntry(props: Props) {\n  const env = getEnvironment();\n\n  const query = graphql`\n    query RemEntryQuery($key: String!) {\n      rem {\n        get(key: $key) {\n          key\n          value\n        }\n      }\n    }\n  `;\n\n  const variables = {key: decodeURIComponent(props.match.params.key)};\n\n  return (\n    <QueryRenderer<RemEntryQuery>\n      environment={env}\n      query={query}\n      variables={variables}\n      render={results => <RemEntryWrapper {...results} />}\n    />\n  );\n}\n\nfunction RemEntryWrapper(results: RemEntryQueryResult) {\n  return (\n    <>\n      <h3>rem</h3>\n      <p className=\"my-2\">\n        <Link to=\"/rem\">\n          <i className=\"fas fa-angle-double-left mr-2\" />\n          rem search\n        </Link>\n      </p>\n      <RemEntryResult {...results} />\n    </>\n  );\n}\n\nfunction RemEntryResult(results: RemEntryQueryResult) {\n  const hub = useContext(NotificationContext);\n\n  if (results.error) {\n    hub.addError(results.error);\n    return <div className=\"alert alert-danger\">Unable to perform query.</div>;\n  }\n\n  if (!results.props) {\n    return <Loading />;\n  }\n\n  const {get} = results.props.rem;\n  if (!get) {\n    return <div className=\"alert alert-danger\">Key not found.</div>;\n  }\n\n  const {key, value} = get;\n\n  const tweet = /^http(?:s)?:\\/\\/twitter\\.com\\/[^/]+\\/status\\/(\\d+)/.exec(\n    value\n  );\n  if (tweet) {\n    return (\n      <div className=\"container-fluid\">\n        <h2 className=\"my-5 text-center\">{key}</h2>\n        <div className=\"d-flex justify-content-center\">\n          <TwitterTweetEmbed tweetId={tweet[1]} />\n        </div>\n      </div>\n    );\n  }\n\n  if (/^http(?:s)?:\\/\\//.test(value)) {\n    return (\n      <div className=\"container-fluid\">\n        <h2 className=\"my-5 text-center\">{key}</h2>\n        <img\n          className=\"d-block mx-auto\"\n          style={{maxWidth: \"100%\"}}\n          src={value}\n          alt=\"\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"row my-5\">\n      <h2 className=\"col-3 text-muted text-right\">{key}</h2>\n      <h2 className=\"col-9 font-weight-bolder\">{value}</h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {createNetworkError} from \"./errors\";\n\nconst COORDINATOR_URL = `${process.env.REACT_APP_AZ_COORDINATOR_URL}`;\n\nexport type ServiceType = \"simple\" | \"oneshot\" | \"timer\" | \"self\";\n\nexport interface IContainer {\n  name?: string;\n  image_name: string;\n  image_tag: string;\n}\n\nexport interface IEnvMap {\n  [varName: string]: string;\n}\n\nexport interface IPortMap {\n  [hostPort: string]: number;\n}\n\nexport interface IVolumeMap {\n  [hostPath: string]: string;\n}\n\ninterface IDesiredUnitCommon {\n  type: ServiceType;\n  secrets: string[];\n  env: IEnvMap;\n  ports: IPortMap;\n  volumes: IVolumeMap;\n  container?: IContainer;\n  calendar?: string;\n}\n\nexport interface IDesiredUnit extends IDesiredUnitCommon {\n  id: number;\n  path: string;\n}\n\nexport interface IDesiredUnitCreate extends IDesiredUnitCommon {\n  path: string;\n}\n\nexport interface IDesiredUnitUpdate extends IDesiredUnitCommon {}\n\nexport interface IDesiredState {\n  units: IDesiredUnit[];\n}\n\nexport interface IActualUnit {\n  path: string;\n}\n\nexport interface IActualState {\n  units: IActualUnit[];\n}\n\nexport interface ISecretsCreate {\n  [secretName: string]: string;\n}\n\nexport type ISecretsDelete = string[];\n\nexport type ISecrets = string[];\n\nexport interface IDelta {\n  units_to_add: IDesiredUnit[];\n  units_to_change: IDesiredUnit[];\n  units_to_restart: IDesiredUnit[];\n  units_to_remove: IActualUnit[];\n  files_to_write: string[];\n}\n\nexport interface ISyncReport {\n  timestamp: number;\n  elapsed: number;\n  message: string;\n  fields: {[fieldName: string]: any};\n}\n\nexport interface ISync {\n  in_progress: boolean;\n  reports: ISyncReport[];\n  errors: string[];\n  delta?: IDelta;\n}\n\nexport class Coordinator {\n  constructor(private readonly token: string) {}\n\n  async getDesiredState(): Promise<IDesiredState> {\n    return this.requestJSON<IDesiredState>(\"GET\", \"/desired\");\n  }\n\n  async createDesiredUnit(unit: IDesiredUnitCreate): Promise<IDesiredUnit> {\n    return this.requestJSON<IDesiredUnit>(\"POST\", \"/desired\", unit);\n  }\n\n  async updateDesiredUnit(\n    id: number,\n    unit: IDesiredUnitUpdate\n  ): Promise<IDesiredUnit> {\n    return this.requestJSON<IDesiredUnit>(\n      \"PUT\",\n      `/desired/${encodeURIComponent(id.toString())}`,\n      unit\n    );\n  }\n\n  async deleteDesiredUnit(id: number): Promise<void> {\n    await this.request(\n      \"DELETE\",\n      `/desired/${encodeURIComponent(id.toString())}`\n    );\n  }\n\n  async getActualUnits(): Promise<IActualState> {\n    return this.requestJSON<IActualState>(\"GET\", \"/actual\");\n  }\n\n  async getSecrets(): Promise<ISecrets> {\n    return this.requestJSON<ISecrets>(\"GET\", \"/secrets\");\n  }\n\n  async createSecrets(secrets: ISecretsCreate): Promise<void> {\n    await this.request(\"POST\", \"/secrets\", secrets);\n  }\n\n  async deleteSecrets(secretNames: ISecretsDelete): Promise<void> {\n    await this.request(\"DELETE\", \"/secrets\", secretNames);\n  }\n\n  async getDiff(): Promise<IDelta> {\n    return this.requestJSON<IDelta>(\"GET\", \"/diff\");\n  }\n\n  async getSync(): Promise<ISync> {\n    return this.requestJSON<ISync>(\"GET\", \"/sync\");\n  }\n\n  async createSync(): Promise<void> {\n    await this.request(\"POST\", \"/sync\");\n  }\n\n  isPresent(): boolean {\n    return true;\n  }\n\n  protected async request(\n    method: string,\n    subPath: string,\n    payload?: any\n  ): Promise<Response> {\n    const url = `${COORDINATOR_URL}${subPath}`;\n    const headers: HeadersInit = {\n      Authorization: `Basic ${btoa(\"token:\" + this.token)}`,\n    };\n\n    const options: RequestInit = {\n      method,\n      headers,\n      credentials: \"include\",\n    };\n\n    if (payload) {\n      headers[\"Content-Type\"] = \"application/json\";\n      options.body = JSON.stringify(payload);\n    }\n\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw await createNetworkError(\n        \"Unable to contact coordinator\",\n        url,\n        response\n      );\n    }\n    return response;\n  }\n\n  protected async requestJSON<R>(\n    method: string,\n    subPath: string,\n    payload?: any\n  ): Promise<R> {\n    const response = await this.request(method, subPath, payload);\n    return response.json() as any;\n  }\n}\n\nclass NullCoordinator extends Coordinator {\n  protected async request(): Promise<any> {\n    throw new Error(\"Coordinator is not available\");\n  }\n\n  isPresent(): boolean {\n    return false;\n  }\n}\n\nexport const nullCoordinator = new NullCoordinator(\"\");\n\nexport const CoordinatorContext = React.createContext<Coordinator>(\n  nullCoordinator\n);\n","import {useContext, useEffect, useState} from \"react\";\n\nimport {Coordinator, CoordinatorContext} from \"./coordinator\";\n\ninterface CoordinatorContainerProps<R> {\n  getter: (c: Coordinator) => Promise<R>;\n  nullValue: R;\n  children: (value: R, isLoading: boolean, refresh: () => void) => JSX.Element;\n}\n\nexport function CoordinatorContainer<R>(props: CoordinatorContainerProps<R>) {\n  const coordinator = useContext(CoordinatorContext);\n  const {getter} = props;\n  const [isLoading, setLoading] = useState(true);\n  const [value, setValue] = useState(props.nullValue);\n  const [latch, setLatch] = useState(0);\n\n  useEffect(() => {\n    let ignore = false;\n\n    (async function() {\n      setLoading(true);\n      const v = await getter(coordinator);\n\n      if (!ignore) {\n        setLoading(false);\n        setValue(v);\n      }\n    })();\n\n    return () => {\n      ignore = true;\n    };\n  }, [coordinator, getter, latch]);\n\n  function refresh() {\n    setLatch(current => current + 1);\n  }\n\n  return props.children(value, isLoading, refresh);\n}\n","import React from \"react\";\nimport * as path from \"path\";\n\ninterface Props {\n  path: string;\n}\n\nexport function ServicePath(props: Props) {\n  const dirname = path.dirname(props.path);\n  const basename = path.basename(props.path);\n\n  return (\n    <span className=\"text-monospace\">\n      <span className=\"text-muted\">\n        {dirname}\n        {path.sep}\n      </span>\n      <span className=\"font-weight-bold\">{basename}</span>\n    </span>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {IDesiredUnit, IPortMap} from \"../../common/coordinator\";\nimport {ServicePath} from \"./ServicePath\";\n\ninterface ServiceDisplayProps {\n  unit: IDesiredUnit;\n}\n\nfunction plural(count: number, noun: string) {\n  if (count === 1) {\n    return `${count} ${noun}`;\n  } else {\n    return `${count} ${noun}s`;\n  }\n}\n\nfunction ports(p: IPortMap) {\n  const keys = Object.keys(p);\n  if (keys.length === 0) {\n    return null;\n  }\n\n  const mappings: string[] = [];\n  for (const source of Object.keys(p)) {\n    const dest = p[source];\n    mappings.push(`${source} => ${dest}`);\n  }\n  return mappings.join(\", \");\n}\n\nexport function ServiceDisplay(props: ServiceDisplayProps) {\n  const {unit} = props;\n\n  return (\n    <li className=\"list-group-item px-4 rounded pushbot-serviceDisplay\">\n      <div className=\"float-right pushbot-serviceDisplay--controls\">\n        <Link\n          to={`/admin/services/${unit.id}`}\n          className=\"btn btn-secondary d-flex align-items-baseline\"\n        >\n          <i className=\"fas fa-cog mr-2\" />\n          edit\n        </Link>\n      </div>\n      <ServicePath path={unit.path} />\n      <p>\n        type <span className=\"font-weight-bold\">{unit.type}</span>\n        {\" | \"}\n        {plural(Object.keys(unit.env).length, \" environment variable\")}\n        {\" | \"}\n        {plural(unit.secrets.length, \" secret\")}\n        {\" | \"}\n        {plural(Object.keys(unit.volumes).length, \"volume\")} {ports(unit.ports)}\n      </p>\n    </li>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {IDesiredState} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {ServiceDisplay} from \"./ServiceDisplay\";\n\nimport \"./Services.css\";\n\nconst nullDesiredState: IDesiredState = {units: []};\n\nexport function Services() {\n  return (\n    <>\n      <h3>services</h3>\n      <CoordinatorContainer<IDesiredState>\n        getter={c => c.getDesiredState()}\n        nullValue={nullDesiredState}\n      >\n        {(state, isLoading, refresh) => {\n          const list = isLoading ? (\n            <Loading />\n          ) : (\n            state.units.map(unit => (\n              <ServiceDisplay unit={unit} key={unit.id} />\n            ))\n          );\n\n          return (\n            <>\n              <div className=\"my-3 d-flex justify-content-end\">\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={refresh}\n                  disabled={isLoading}\n                >\n                  <i className=\"fas fa-sync-alt mr-2\" />\n                  Refresh\n                </button>\n              </div>\n              {list}\n              <div className=\"my-3 d-flex justify-content-end\">\n                <Link className=\"btn btn-primary\" to=\"/admin/services/create\">\n                  <i className=\"fas fa-plus mr-2\" />\n                  Create\n                </Link>\n              </div>\n            </>\n          );\n        }}\n      </CoordinatorContainer>\n    </>\n  );\n}\n","import {useState} from \"react\";\n\nimport {\n  ServiceType as ValidServiceType,\n  IDesiredUnit,\n  IDesiredUnitUpdate,\n  IDesiredUnitCreate,\n  IEnvMap,\n  IPortMap,\n  IVolumeMap,\n  IContainer,\n} from \"../../common/coordinator\";\n\nexport interface ServiceType {\n  name: string;\n\n  valid: boolean;\n  hasAnyContainer: boolean;\n  hasContainerConfig: boolean;\n  hasContainerName: boolean;\n  hasEnvAndSecrets: boolean;\n  hasVolumes: boolean;\n  hasPorts: boolean;\n  hasSchedule: boolean;\n\n  ifInvalid<R>(cb: () => R): R | null;\n  ifAnyContainer<R>(cb: () => R): R | null;\n  ifContainerConfig<R>(cb: () => R): R | null;\n  ifContainerName<R>(cb: () => R): R | null;\n  ifEnvAndSecrets<R>(cb: () => R): R | null;\n  ifVolumes<R>(cb: () => R): R | null;\n  ifPorts<R>(cb: () => R): R | null;\n  ifSchedule<R>(cb: () => R): R | null;\n}\n\ninterface Spec {\n  isInvalid?: boolean;\n  hasContainerConfig?: boolean;\n  hasContainerName?: boolean;\n  hasEnvAndSecrets?: boolean;\n  hasVolumes?: boolean;\n  hasPorts?: boolean;\n  hasSchedule?: boolean;\n}\n\nconst typeMap: Map<string, ServiceType> = new Map();\n\nfunction makeServiceType(typeName: string, config: Spec): ServiceType {\n  function accept<R>(cb: () => R): R {\n    return cb();\n  }\n\n  function skip() {\n    return null;\n  }\n\n  const serviceType = {\n    name: typeName,\n\n    valid: !config.isInvalid,\n    hasAnyContainer: Boolean(\n      config.hasContainerName || config.hasContainerConfig\n    ),\n    hasContainerConfig: Boolean(config.hasContainerConfig),\n    hasContainerName: Boolean(config.hasContainerName),\n    hasEnvAndSecrets: Boolean(config.hasEnvAndSecrets),\n    hasVolumes: Boolean(config.hasVolumes),\n    hasPorts: Boolean(config.hasPorts),\n    hasSchedule: Boolean(config.hasSchedule),\n\n    ifInvalid: config.isInvalid ? accept : skip,\n    ifAnyContainer:\n      config.hasContainerName || config.hasContainerConfig ? accept : skip,\n    ifContainerConfig: config.hasContainerConfig ? accept : skip,\n    ifContainerName: config.hasContainerName ? accept : skip,\n    ifEnvAndSecrets: config.hasEnvAndSecrets ? accept : skip,\n    ifVolumes: config.hasVolumes ? accept : skip,\n    ifPorts: config.hasPorts ? accept : skip,\n    ifSchedule: config.hasSchedule ? accept : skip,\n  };\n\n  if (!config.isInvalid) {\n    typeMap.set(typeName, serviceType);\n  }\n  return serviceType;\n}\n\nexport const typeSimple = makeServiceType(\"simple\", {\n  hasContainerConfig: true,\n  hasContainerName: true,\n  hasEnvAndSecrets: true,\n  hasVolumes: true,\n  hasPorts: true,\n});\n\nexport const typeOneShot = makeServiceType(\"oneshot\", {\n  hasContainerConfig: true,\n  hasEnvAndSecrets: true,\n  hasVolumes: true,\n  hasPorts: true,\n});\n\nexport const typeTimer = makeServiceType(\"timer\", {\n  hasSchedule: true,\n});\n\nexport const typeSelf = makeServiceType(\"self\", {\n  hasEnvAndSecrets: true,\n});\n\nexport const serviceTypes = [typeSimple, typeOneShot, typeTimer, typeSelf];\n\nexport function getServiceType(typeName: string): ServiceType {\n  return typeMap.get(typeName) || makeServiceType(typeName, {isInvalid: true});\n}\n\nexport type UnitAction = \"create\" | \"update\";\n\nexport class DesiredUnitPayload {\n  private original?: IDesiredUnit;\n  path: string;\n  currentType: ServiceType;\n  secrets: string[];\n  env: IEnvMap;\n  ports: IPortMap;\n  volumes: IVolumeMap;\n  containerName: string;\n  containerImageName: string;\n  containerImageTag: string;\n  calendar: string;\n\n  constructor(original?: IDesiredUnit) {\n    this.original = original;\n    this.path = original ? original.path : \"/etc/systemd/system/az-\";\n    this.currentType = original ? getServiceType(original.type) : typeSimple;\n    this.secrets = original ? [...original.secrets] : [];\n    this.env = original ? {...original.env} : {};\n    this.ports = original ? {...original.ports} : {};\n    this.volumes = original ? {...original.volumes} : {};\n    this.containerName =\n      (original && original.container && original.container.name) || \"\";\n    this.containerImageName =\n      (original && original.container && original.container.image_name) ||\n      \"quay.io/smashwilson/az-\";\n    this.containerImageTag =\n      (original && original.container && original.container.image_tag) ||\n      \"latest\";\n\n    this.calendar =\n      original && original.calendar ? original.calendar : \"*-*-* 00:00:00\";\n  }\n\n  private get type(): ValidServiceType {\n    return this.currentType.name as ValidServiceType;\n  }\n\n  private commonValidation(): boolean {\n    function isEmpty(s: string): boolean {\n      return s.length === 0;\n    }\n\n    function hasEmptyKeyOrValue(obj: {[k: string]: string}): boolean {\n      const ks = Object.keys(obj);\n      return ks.some(k => isEmpty(k) || isEmpty(obj[k]));\n    }\n\n    if (!this.currentType.valid) {\n      return false;\n    }\n\n    if (this.currentType.hasContainerName && isEmpty(this.containerName)) {\n      return false;\n    }\n\n    if (this.currentType.hasContainerConfig) {\n      if (isEmpty(this.containerImageName)) {\n        return false;\n      }\n\n      if (isEmpty(this.containerImageTag)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      if (hasEmptyKeyOrValue(this.env)) {\n        return false;\n      }\n\n      if (this.secrets.some(isEmpty)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasPorts) {\n      function isInvalidPortNumber(p: number): boolean {\n        return isNaN(p) || p < 0 || p > 65536;\n      }\n\n      function isInvalidPort(s: string): boolean {\n        const parsed = parseInt(s, 10);\n        return isInvalidPortNumber(parsed);\n      }\n\n      const hostPorts = Object.keys(this.ports);\n      if (hostPorts.some(isInvalidPort)) {\n        return false;\n      }\n\n      if (hostPorts.some(hp => isInvalidPortNumber(this.ports[hp]))) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasVolumes) {\n      if (hasEmptyKeyOrValue(this.volumes)) {\n        return false;\n      }\n    }\n\n    if (this.currentType.hasSchedule) {\n      if (isEmpty(this.calendar)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isCreate() {\n    return this.original === undefined;\n  }\n\n  isUpdate() {\n    return this.original !== undefined;\n  }\n\n  withAction<R>(cbs: {create: () => R; update: (id: number) => R}): R {\n    if (this.original) {\n      return cbs.update(this.original.id);\n    } else {\n      return cbs.create();\n    }\n  }\n\n  isModified(): boolean {\n    if (!this.original) {\n      return true;\n    }\n\n    if (this.currentType.name !== this.original.type) {\n      return true;\n    }\n\n    if (this.currentType.hasAnyContainer) {\n      if (!this.original.container) {\n        return true;\n      }\n\n      const container = this.original.container;\n\n      if (\n        this.currentType.hasContainerName &&\n        container.name !== this.containerName\n      ) {\n        return true;\n      }\n\n      if (container.image_name !== this.containerImageName) {\n        return true;\n      }\n\n      if (container.image_tag !== this.containerImageTag) {\n        return true;\n      }\n    }\n\n    function arrayChanged<K>(array: K[], original: K[]): boolean {\n      if (array.length !== original.length) {\n        return true;\n      }\n\n      const s = new Set(array);\n      return original.some(o => !s.has(o));\n    }\n\n    function objectChanged<K>(\n      obj: {[k: string]: K},\n      original: {[k: string]: K}\n    ): boolean {\n      const ks = Object.keys(obj);\n      return (\n        arrayChanged(ks, Object.keys(original)) &&\n        ks.some(k => obj[k] !== original[k])\n      );\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      if (arrayChanged(this.secrets, this.original.secrets)) {\n        return true;\n      }\n\n      if (objectChanged(this.env, this.original.env)) {\n        return true;\n      }\n    }\n\n    if (\n      this.currentType.hasPorts &&\n      objectChanged(this.ports, this.original.ports)\n    ) {\n      return true;\n    }\n\n    if (\n      this.currentType.hasVolumes &&\n      objectChanged(this.volumes, this.original.volumes)\n    ) {\n      return true;\n    }\n\n    if (\n      this.currentType.hasSchedule &&\n      this.calendar !== this.original.calendar\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isValid(): boolean {\n    if (!this.commonValidation()) {\n      return false;\n    }\n\n    return this.withAction({\n      create: () => this.path.length !== 0,\n      update: () => this.isModified(),\n    });\n  }\n\n  private getCommonPayload(): IDesiredUnitCreate | IDesiredUnitUpdate {\n    const payload: IDesiredUnitCreate | IDesiredUnitUpdate = {\n      type: this.type,\n      secrets: [],\n      env: {},\n      ports: {},\n      volumes: {},\n    };\n\n    if (this.currentType.hasContainerConfig) {\n      const container: IContainer = {\n        image_name: this.containerImageName,\n        image_tag: this.containerImageTag,\n      };\n      if (this.currentType.hasContainerName) {\n        container.name = this.containerName;\n      }\n      payload.container = container;\n    }\n\n    if (this.currentType.hasEnvAndSecrets) {\n      payload.env = this.env;\n      payload.secrets = this.secrets;\n    }\n\n    if (this.currentType.hasPorts) {\n      payload.ports = this.ports;\n    }\n\n    if (this.currentType.hasVolumes) {\n      payload.volumes = this.volumes;\n    }\n\n    if (this.currentType.hasSchedule) {\n      payload.calendar = this.calendar;\n    }\n\n    return payload;\n  }\n\n  withID<R>(fn: (id: number) => R): R | null {\n    if (this.original) {\n      return fn(this.original.id);\n    }\n\n    return null;\n  }\n\n  getCreatePayload(): IDesiredUnitCreate {\n    return {\n      ...this.getCommonPayload(),\n      path: this.path,\n    };\n  }\n\n  getUpdatePayload(): IDesiredUnitUpdate {\n    return this.getCommonPayload();\n  }\n}\n\nexport function usePayloadState<K extends keyof DesiredUnitPayload>(\n  payload: DesiredUnitPayload,\n  key: K\n): [DesiredUnitPayload[K], (v: DesiredUnitPayload[K]) => void] {\n  const [value, setValue] = useState<DesiredUnitPayload[K]>(payload[key]);\n\n  function setInPayload(v: DesiredUnitPayload[K]): void {\n    payload[key] = v;\n    setValue(v);\n  }\n\n  return [value, setInPayload];\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport cx from \"classnames\";\n\ninterface ToggleableInputProps {\n  value: string;\n  onChange: (newValue: string) => any;\n  controlID?: string;\n  controlClassName?: string;\n}\n\nexport function ToggleableInput(props: ToggleableInputProps) {\n  const [multiLineMode, setMode] = useState<boolean>(\n    props.value.indexOf(\"\\n\") !== -1\n  );\n  const controlRef = useRef<HTMLTextAreaElement & HTMLInputElement>(null);\n\n  const cn = cx(\"form-control\", props.controlClassName);\n\n  useEffect(() => {\n    if (controlRef.current) {\n      controlRef.current.focus();\n    }\n  }, [multiLineMode]);\n\n  if (multiLineMode) {\n    return (\n      <div className=\"input-group\">\n        <textarea\n          ref={controlRef}\n          id={props.controlID}\n          className={cn}\n          onChange={evt => {\n            evt.preventDefault();\n            props.onChange(evt.target.value);\n          }}\n        >\n          {props.value}\n        </textarea>\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-light\"\n            onClick={evt => {\n              evt.preventDefault();\n              setMode(false);\n            }}\n          >\n            <i className=\"fas fa-compress\" />\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"input-group\">\n        <input\n          ref={controlRef}\n          id={props.controlID}\n          type=\"text\"\n          className={cn}\n          onChange={evt => {\n            evt.preventDefault();\n            props.onChange(evt.target.value);\n          }}\n          value={props.value}\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-light\"\n            onClick={evt => {\n              evt.preventDefault();\n              setMode(true);\n            }}\n          >\n            <i className=\"fas fa-expand\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {ToggleableInput} from \"../../common/ToggleableInput\";\n\nlet envVarCounter = 0;\n\ninterface EnvVarEditorProps {\n  value: string;\n  onChangeValue: (newValue: string) => any;\n\n  renderName: (uniqueID: string) => React.ReactNode;\n  renderControls: () => React.ReactNode;\n}\n\nfunction EnvVarEditor(props: EnvVarEditorProps) {\n  const uniqueID = `envVarEditor--${envVarCounter}`;\n  envVarCounter++;\n\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-3\">{props.renderName(uniqueID)}</div>\n      <div className=\"col-sm-8\">\n        <ToggleableInput\n          controlID={uniqueID}\n          controlClassName=\"text-monospace\"\n          value={props.value}\n          onChange={props.onChangeValue}\n        />\n      </div>\n      <div className=\"col-sm-1 d-flex justify-content-end\">\n        {props.renderControls()}\n      </div>\n    </div>\n  );\n}\n\ninterface ExistingEnvVarProps {\n  name: string;\n  value: string;\n  onChange: (newValue: string) => any;\n  onDelete: () => any;\n}\n\nexport function ExistingEnvVarEditor(props: ExistingEnvVarProps) {\n  return (\n    <EnvVarEditor\n      value={props.value}\n      onChangeValue={props.onChange}\n      renderName={uniqueID => (\n        <label htmlFor={uniqueID} className=\"text-monospace\">\n          {props.name}\n        </label>\n      )}\n      renderControls={() => (\n        <button className=\"btn btn-outline-danger\" onClick={props.onDelete}>\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      )}\n    />\n  );\n}\n\ninterface NewEnvVarProps {\n  onAccept: (name: string, value: string) => any;\n}\n\nexport function NewEnvVarEditor(props: NewEnvVarProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [currentName, setName] = useState(\"\");\n  const [currentValue, setValue] = useState(\"\");\n  const nameFieldRef = useRef<HTMLInputElement>(null);\n\n  const canAccept = currentName.length > 0;\n\n  useEffect(() => {\n    if (expanded && nameFieldRef.current) {\n      nameFieldRef.current.focus();\n    }\n  }, [expanded]);\n\n  if (!expanded) {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-3\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(true);\n            }}\n          >\n            <i className=\"far fa-plus-square\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <EnvVarEditor\n      value={currentValue}\n      onChangeValue={v => setValue(v)}\n      renderName={() => (\n        <input\n          ref={nameFieldRef}\n          type=\"text\"\n          className=\"form-control text-monospace\"\n          value={currentName}\n          onChange={evt => setName(evt.target.value)}\n        />\n      )}\n      renderControls={() => (\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canAccept}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onAccept(currentName.toLocaleUpperCase(), currentValue);\n              setName(\"\");\n              setValue(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      )}\n    />\n  );\n}\n","import React from \"react\";\n\nimport {IEnvMap} from \"../../common/coordinator\";\nimport {ExistingEnvVarEditor, NewEnvVarEditor} from \"./EnvVarEditor\";\n\ninterface EnvVarListEditorProps {\n  envVars: IEnvMap;\n  onChange: (name: string, value: string) => any;\n  onDelete: (name: string) => any;\n}\n\nexport function EnvVarListEditor(props: EnvVarListEditorProps) {\n  const varNames = Object.keys(props.envVars);\n  varNames.sort();\n\n  const existingVarEditors = varNames.map(varName => (\n    <ExistingEnvVarEditor\n      key={`envVarEditor-${varName}`}\n      name={varName}\n      value={props.envVars[varName]}\n      onChange={value => props.onChange(varName, value)}\n      onDelete={() => props.onDelete(varName)}\n    />\n  ));\n\n  return (\n    <>\n      {existingVarEditors}\n      <NewEnvVarEditor onAccept={props.onChange} />\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {ToggleableInput} from \"../../common/ToggleableInput\";\n\ninterface ExistingSecretProps {\n  name: string;\n  onDelete: () => any;\n}\n\nexport function ExistingSecretEditor(props: ExistingSecretProps) {\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-3\">\n        <label className=\"text-monospace text-success\">\n          <i className=\"fas fa-lock d-inline mr-2\" />\n          {props.name}\n        </label>\n      </div>\n      <div className=\"col-sm-8\" />\n      <div\n        className=\"col-sm-1 d-flex justify-content-end\"\n        onClick={props.onDelete}\n      >\n        <button className=\"btn btn-outline-danger\">\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\ninterface AddSecretProps {\n  availableSecrets: string[];\n  onAddExisting: (name: string) => any;\n  onCreateNew: (name: string, value: string) => any;\n}\n\ntype DisplayMode = \"collapsed\" | \"existing\" | \"create\";\n\nexport function NewSecretEditor(props: AddSecretProps) {\n  const [displayMode, setDisplayMode] = useState<DisplayMode>(\"collapsed\");\n  const [currentName, setName] = useState(\"\");\n  const [currentValue, setValue] = useState(\"\");\n\n  const canAdd = currentName.length > 0;\n  const canCreate = currentName.length > 0 && currentValue.length > 0;\n  const nameFieldRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (displayMode === \"create\" && nameFieldRef.current) {\n      nameFieldRef.current.focus();\n    }\n  }, [displayMode]);\n\n  if (displayMode === \"collapsed\") {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-3\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setDisplayMode(\"existing\");\n            }}\n          >\n            <i className=\"far fa-plus-square\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (displayMode === \"existing\") {\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-sm-10 input-group\">\n          <div className=\"input-group-prepend d-flex align-items-center\">\n            <i className=\"fas fa-lock-open text-success d-inline mr-2\" />\n          </div>\n          <select\n            className=\"form-control text-success\"\n            value={currentName}\n            onChange={evt => setName(evt.target.value)}\n            required={true}\n          >\n            <option value=\"\">Choose an existing secret</option>\n            {props.availableSecrets.map(secretName => (\n              <option key={`secret-${secretName}`} value={secretName}>\n                {secretName}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"col-sm-2 d-flex justify-content-end\">\n          <div className=\"btn-group\">\n            <button\n              className=\"btn btn-outline-success\"\n              disabled={!canAdd}\n              onClick={evt => {\n                evt.preventDefault();\n                props.onAddExisting(currentName.toLocaleUpperCase());\n                setName(\"\");\n                setValue(\"\");\n                setDisplayMode(\"collapsed\");\n              }}\n            >\n              <i className=\"fas fa-plus\" />\n            </button>\n            <button\n              className=\"btn btn-outline-info\"\n              onClick={evt => {\n                evt.preventDefault();\n                setName(\"\");\n                setValue(\"\");\n                setDisplayMode(\"create\");\n              }}\n            >\n              <i className=\"fas fa-pencil-alt\" />\n            </button>\n            <button\n              className=\"btn btn-outline-info\"\n              onClick={evt => {\n                evt.preventDefault();\n                setDisplayMode(\"collapsed\");\n              }}\n            >\n              <i className=\"far fa-minus-square\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend d-flex align-items-center\">\n            <i className=\"fas fa-lock-open text-success d-inline mr-2\" />\n          </div>\n          <input\n            ref={nameFieldRef}\n            type=\"text\"\n            className=\"form-control text-monospace border-success d-inline\"\n            value={currentName}\n            onChange={evt => setName(evt.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"col-sm-8\">\n        <ToggleableInput\n          controlClassName=\"text-monospace border-success\"\n          value={currentValue}\n          onChange={setValue}\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreateNew(currentName.toLocaleUpperCase(), currentValue);\n              setName(\"\");\n              setValue(\"\");\n              setDisplayMode(\"collapsed\");\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setName(\"\");\n              setValue(\"\");\n              setDisplayMode(\"existing\");\n            }}\n          >\n            <i className=\"fas fa-list\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setDisplayMode(\"collapsed\");\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport {ExistingSecretEditor, NewSecretEditor} from \"./SecretEditor\";\n\ninterface SecretListProps {\n  secrets: string[];\n  availableSecrets: string[];\n  onDelete: (name: string) => any;\n  onAdd: (name: string) => any;\n  onCreate: (name: string, value: string) => any;\n}\n\nexport function SecretListEditor(props: SecretListProps) {\n  const existingSecretEditors = props.secrets.map(name => (\n    <ExistingSecretEditor\n      key={`existingSecret-${name}`}\n      name={name}\n      onDelete={() => props.onDelete(name)}\n    />\n  ));\n\n  return (\n    <>\n      {existingSecretEditors}\n      <NewSecretEditor\n        availableSecrets={props.availableSecrets}\n        onAddExisting={props.onAdd}\n        onCreateNew={props.onCreate}\n      />\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {IVolumeMap} from \"../../common/coordinator\";\n\ninterface VolumeListProps {\n  volumeMap: IVolumeMap;\n  onDelete: (hostPath: string) => any;\n  onCreate: (hostPath: string, containerPath: string) => any;\n}\n\nexport function VolumeListEditor(props: VolumeListProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [hostPath, setHostPath] = useState(\"/etc/ssl/az/\");\n  const [containerPath, setContainerPath] = useState(\"\");\n\n  const hostPathRef = useRef<HTMLInputElement>(null);\n\n  const canCreate = hostPath.length > 0 && containerPath.length > 0;\n\n  useEffect(() => {\n    if (expanded && hostPathRef.current) {\n      hostPathRef.current.focus();\n    }\n  }, [expanded]);\n\n  const hostPaths = Object.keys(props.volumeMap);\n  const existingVolumes = hostPaths.map((hostPath, i) => (\n    <div className=\"form-row\" key={i}>\n      <div className=\"col-sm-5\">\n        host: <span className=\"text-monospace\">{hostPath}</span>\n      </div>\n      <div className=\"col-sm-5\">\n        container:{\" \"}\n        <span className=\"text-monospace\">{props.volumeMap[hostPath]}</span>\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <button\n          className=\"btn btn-outline-danger\"\n          onClick={evt => {\n            evt.preventDefault();\n            props.onDelete(hostPath);\n          }}\n        >\n          <i className=\"far fa-trash-alt text-danger\" />\n        </button>\n      </div>\n    </div>\n  ));\n\n  const newVolume = expanded ? (\n    <div className=\"form-row\">\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">host</span>\n        </div>\n        <input\n          ref={hostPathRef}\n          type=\"text\"\n          value={hostPath}\n          onChange={evt => setHostPath(evt.target.value)}\n          className=\"form-control text-monospace\"\n        />\n      </div>\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">container</span>\n        </div>\n        <input\n          type=\"text\"\n          value={containerPath}\n          onChange={evt => setContainerPath(evt.target.value)}\n          className=\"form-control text-monospace\"\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreate(hostPath, containerPath);\n              setHostPath(\"/etc/ssl/az/\");\n              setContainerPath(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <button\n          className=\"btn btn-outline-info\"\n          onClick={evt => {\n            evt.preventDefault();\n            setExpanded(true);\n          }}\n        >\n          <i className=\"far fa-plus-square\" />\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {existingVolumes}\n      {newVolume}\n    </>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {IPortMap} from \"../../common/coordinator\";\n\ninterface PortListProps {\n  portMap: IPortMap;\n  onCreate: (hostPort: string, containerPort: number) => any;\n  onDelete: (hostPort: string) => any;\n}\n\nexport function PortListEditor(props: PortListProps) {\n  const [expanded, setExpanded] = useState(false);\n  const [hostPort, setHostPort] = useState(\"\");\n  const [containerPort, setContainerPort] = useState(\"\");\n\n  const hostPortRef = useRef<HTMLInputElement>(null);\n\n  const canCreate = hostPort.length > 0 && containerPort.length > 0;\n\n  useEffect(() => {\n    if (expanded && hostPortRef.current) {\n      hostPortRef.current.focus();\n    }\n  }, [expanded]);\n\n  const hostPorts = Object.keys(props.portMap);\n  const existingPorts =\n    hostPorts.length > 0 ? (\n      <div className=\"form-row mb-2\">\n        <ul className=\"list-group list-group-horizontal\">\n          {hostPorts.map((hostPort, i) => (\n            <li\n              key={`hostPort-${i}`}\n              className=\"list-group-item pushbot-portMapping\"\n            >\n              {hostPort} <i className=\"fas fa-arrow-right mx-2\" />{\" \"}\n              {props.portMap[hostPort]}{\" \"}\n              <button\n                className=\"btn btn-outline-danger ml-3 pushbot-portMapping--deleteButton\"\n                onClick={evt => {\n                  evt.preventDefault();\n                  props.onDelete(hostPort);\n                }}\n              >\n                <i className=\"far fa-trash-alt\" />\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    ) : null;\n\n  const newPort = expanded ? (\n    <div className=\"form-row\">\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">host</span>\n        </div>\n        <input\n          ref={hostPortRef}\n          type=\"number\"\n          value={hostPort}\n          onChange={evt => setHostPort(evt.target.value)}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"col-sm-5 input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">container</span>\n        </div>\n        <input\n          type=\"number\"\n          value={containerPort}\n          onChange={evt => setContainerPort(evt.target.value)}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"col-sm-2 d-flex justify-content-end\">\n        <div className=\"btn-group\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!canCreate}\n            onClick={evt => {\n              evt.preventDefault();\n              props.onCreate(hostPort, parseInt(containerPort, 10));\n              setHostPort(\"\");\n              setContainerPort(\"\");\n              setExpanded(false);\n            }}\n          >\n            <i className=\"fas fa-plus\" />\n          </button>\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={evt => {\n              evt.preventDefault();\n              setExpanded(false);\n            }}\n          >\n            <i className=\"far fa-minus-square\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"form-row\">\n      <div className=\"col-sm-2\">\n        <button\n          className=\"btn btn-outline-info\"\n          onClick={evt => {\n            evt.preventDefault();\n            setExpanded(true);\n          }}\n        >\n          <i className=\"far fa-plus-square\" />\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {existingPorts}\n      {newPort}\n    </>\n  );\n}\n","import React, {useState, useMemo, useContext} from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport cx from \"classnames\";\n\nimport {ISecretsCreate, CoordinatorContext} from \"../../common/coordinator\";\nimport {NotificationContext} from \"../../common/Notifications\";\nimport {PendingDiffContext} from \"../../common/PendingDiff\";\nimport {\n  DesiredUnitPayload,\n  usePayloadState,\n  serviceTypes,\n  getServiceType,\n} from \"./serviceTypes\";\nimport {EnvVarListEditor} from \"./EnvVarListEditor\";\nimport {SecretListEditor} from \"./SecretListEditor\";\nimport {VolumeListEditor} from \"./VolumeListEditor\";\nimport {PortListEditor} from \"./PortListEditor\";\n\ninterface ServiceFormProps {\n  payload: DesiredUnitPayload;\n  knownSecrets: string[];\n}\n\nexport function ServiceForm({payload, knownSecrets}: ServiceFormProps) {\n  const [nextRoute, setNextRoute] = useState<string | null>(null);\n\n  const [currentPath, setPath] = usePayloadState(payload, \"path\");\n  const [currentType, setType] = usePayloadState(payload, \"currentType\");\n  const [currentContainerName, setContainerName] = usePayloadState(\n    payload,\n    \"containerName\"\n  );\n  const [currentContainerImageName, setContainerImageName] = usePayloadState(\n    payload,\n    \"containerImageName\"\n  );\n  const [currentContainerImageTag, setContainerImageTag] = usePayloadState(\n    payload,\n    \"containerImageTag\"\n  );\n  const [currentEnvVars, setEnvVars] = usePayloadState(payload, \"env\");\n  const [currentSecrets, setSecrets] = usePayloadState(payload, \"secrets\");\n  const [currentVolumes, setVolumes] = usePayloadState(payload, \"volumes\");\n  const [currentPorts, setPorts] = usePayloadState(payload, \"ports\");\n  const [currentCalendar, setCalendar] = usePayloadState(payload, \"calendar\");\n\n  const [createdSecrets, setCreatedSecrets] = useState<ISecretsCreate>({});\n\n  function deleteSecret(name: string) {\n    setSecrets(currentSecrets.filter(each => each !== name));\n  }\n\n  function addSecret(name: string) {\n    setSecrets([...currentSecrets, name]);\n  }\n\n  function createSecret(name: string, value: string) {\n    setSecrets([...currentSecrets, name]);\n    setCreatedSecrets({...createdSecrets, [name]: value});\n  }\n\n  function deleteVolume(hostPath: string) {\n    const nextVolumes = {...currentVolumes};\n    delete nextVolumes[hostPath];\n    setVolumes(nextVolumes);\n  }\n\n  function createVolume(hostPath: string, containerPath: string) {\n    setVolumes({\n      ...currentVolumes,\n      [hostPath]: containerPath,\n    });\n  }\n\n  function deletePort(hostPort: string) {\n    const nextPorts = {...currentPorts};\n    delete nextPorts[hostPort];\n    setPorts(nextPorts);\n  }\n\n  function createPort(hostPort: string, containerPort: number) {\n    setPorts({\n      ...currentPorts,\n      [hostPort]: containerPort,\n    });\n  }\n\n  const availableSecrets = useMemo(() => {\n    const used = new Set(currentSecrets);\n    return knownSecrets.filter(each => !used.has(each));\n  }, [knownSecrets, currentSecrets]);\n\n  const {refresh: refreshDiff} = useContext(PendingDiffContext);\n  const coordinator = useContext(CoordinatorContext);\n  const hub = useContext(NotificationContext);\n\n  if (nextRoute) {\n    return <Redirect to={nextRoute} />;\n  }\n\n  async function apply(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n\n      if (Object.keys(createdSecrets).length > 0) {\n        await coordinator.createSecrets(createdSecrets);\n      }\n\n      await payload.withAction({\n        create: () => coordinator.createDesiredUnit(payload.getCreatePayload()),\n        update: (id: number) =>\n          coordinator.updateDesiredUnit(id, payload.getUpdatePayload()),\n      });\n      refreshDiff();\n      setNextRoute(\"/admin/services\");\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  async function deleteService(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n\n      await payload.withID(id => coordinator.deleteDesiredUnit(id));\n\n      refreshDiff();\n      setNextRoute(\"/admin/services\");\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  return (\n    <form className=\"border rounded p-3\">\n      {/* path */}\n      <div className=\"form-row\">\n        <label htmlFor=\"serviceEditor--path\" className=\"col-sm-3\">\n          Path:\n        </label>\n        <div className={cx(\"col-sm-9\", {disabled: payload.isUpdate()})}>\n          <input\n            id=\"serviceEditor--path\"\n            className=\"form-control text-monospace\"\n            type=\"text\"\n            value={currentPath}\n            onChange={evt => setPath(evt.target.value)}\n            readOnly={payload.isUpdate()}\n          />\n        </div>\n      </div>\n\n      {/* type */}\n      <div className=\"form-row\">\n        <label htmlFor=\"serviceEditor--type\" className=\"col-sm-3\">\n          Type:\n        </label>\n        <div className=\"col-sm-2\">\n          <select\n            className=\"form-control\"\n            id=\"serviceEditor--type\"\n            onChange={evt => setType(getServiceType(evt.target.value))}\n          >\n            {serviceTypes.map(tp => (\n              <option selected={tp === currentType} value={tp.name}>\n                {tp.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* invalid type detection */}\n      {currentType.ifInvalid(() => (\n        <div className=\"form-row my-2\">\n          <div className=\"alert alert-danger px-3 col\">\n            <p>\n              Invalid service type:{\" \"}\n              <span className=\"font-weight-bold\">{currentType.name}</span>.\n            </p>\n            <p>Please choose another.</p>\n          </div>\n        </div>\n      ))}\n\n      <hr />\n\n      {currentType.ifAnyContainer(() => (\n        <div className=\"form-row mt-4 mb-2\">\n          <div className=\"col\">\n            <h6 className=\"text-secondary\">Container details</h6>\n          </div>\n        </div>\n      ))}\n\n      {/* container name */}\n      {currentType.ifContainerName(() => (\n        <div className=\"form-row\">\n          <label htmlFor=\"serviceEditor--containerName\" className=\"col-sm-3\">\n            Name:\n          </label>\n          <div className=\"col-sm-9\">\n            <input\n              id=\"serviceEditor--containerName\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerName}\n              onChange={evt => setContainerName(evt.target.value)}\n            />\n          </div>\n        </div>\n      ))}\n\n      {/* container image name and tag */}\n      {currentType.ifContainerConfig(() => (\n        <div className=\"form-row\">\n          <label\n            htmlFor=\"serviceEditor--containerImageName\"\n            className=\"col-sm-3\"\n          >\n            Image:\n          </label>\n          <div className=\"col-sm-5\">\n            <input\n              id=\"serviceEditor--containerImageName\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerImageName}\n              onChange={evt => setContainerImageName(evt.target.value)}\n              placeholder=\"quay.io/smashwilson/az-\"\n            />\n          </div>\n          <div className=\"col-sm-3\">\n            <input\n              id=\"serviceEditor--containerImageTag\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentContainerImageTag}\n              onChange={evt => setContainerImageTag(evt.target.value)}\n              placeholder=\"latest\"\n            />\n          </div>\n        </div>\n      ))}\n\n      {/* environment variables and secrets */}\n      {currentType.ifEnvAndSecrets(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Environment variables</h6>\n            </div>\n          </div>\n          <EnvVarListEditor\n            envVars={currentEnvVars}\n            onChange={(name, value) => {\n              const nextVars = {\n                ...currentEnvVars,\n                [name]: value,\n              };\n              setEnvVars(nextVars);\n            }}\n            onDelete={name => {\n              const nextVars = {...currentEnvVars};\n              delete nextVars[name];\n              setEnvVars(nextVars);\n            }}\n          />\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Secrets</h6>\n            </div>\n          </div>\n          <SecretListEditor\n            availableSecrets={availableSecrets}\n            secrets={currentSecrets}\n            onDelete={deleteSecret}\n            onAdd={addSecret}\n            onCreate={createSecret}\n          />\n        </>\n      ))}\n\n      {/* volumes */}\n      {currentType.ifVolumes(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Volumes</h6>\n            </div>\n          </div>\n          <VolumeListEditor\n            volumeMap={currentVolumes}\n            onCreate={createVolume}\n            onDelete={deleteVolume}\n          />\n        </>\n      ))}\n\n      {/* port mappings */}\n      {currentType.ifPorts(() => (\n        <>\n          <div className=\"form-row mt-4 mb-2\">\n            <div className=\"col\">\n              <h6 className=\"text-secondary\">Port mappings</h6>\n            </div>\n          </div>\n          <PortListEditor\n            portMap={currentPorts}\n            onCreate={createPort}\n            onDelete={deletePort}\n          />\n        </>\n      ))}\n\n      {/* schedule */}\n      {currentType.ifSchedule(() => (\n        <div className=\"form-row\">\n          <label htmlFor=\"serviceEditor--schedule\" className=\"col-sm-3\">\n            Schedule:\n          </label>\n          <div className=\"col-sm-7\">\n            <input\n              id=\"serviceEditor--schedule\"\n              className=\"form-control\"\n              type=\"text\"\n              value={currentCalendar}\n              onChange={evt => setCalendar(evt.target.value)}\n            />\n          </div>\n          <div className=\"col-sm-2\">\n            <a\n              target=\"_new\"\n              href=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html#\"\n            >\n              <i className=\"fas fa-book mr-2\" />\n              reference\n            </a>\n          </div>\n        </div>\n      ))}\n\n      <hr />\n\n      {/* controls */}\n      <div className=\"form-row m-3\">\n        {payload.isUpdate() && (\n          <div className=\"col d-flex align-items-baseline\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger\"\n              onClick={deleteService}\n              disabled={payload.isCreate()}\n            >\n              Delete\n            </button>\n          </div>\n        )}\n        <div className=\"col d-flex align-items-baseline justify-content-end\">\n          <div className=\"btn-group\">\n            <Link to=\"/admin/services\" className=\"btn btn-secondary\">\n              Cancel\n            </Link>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={apply}\n              disabled={!payload.isValid()}\n            >\n              {payload.withAction({\n                create: () => \"Create\",\n                update: () => \"Update\",\n              })}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\n\nimport {IDesiredState} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {ServiceForm} from \"./ServiceForm\";\nimport {DesiredUnitPayload} from \"./serviceTypes\";\n\nconst nullDesiredState: IDesiredState = {units: []};\n\ninterface ServiceEditorProps {\n  match: {\n    params: {\n      id: string;\n    };\n  };\n}\n\nexport function ServiceEditor(props: ServiceEditorProps) {\n  return (\n    <CoordinatorContainer<string[]> getter={c => c.getSecrets()} nullValue={[]}>\n      {(knownSecrets, secretsLoading) => {\n        if (props.match.params.id === \"create\") {\n          return (\n            <ServiceForm\n              payload={new DesiredUnitPayload()}\n              knownSecrets={knownSecrets}\n            />\n          );\n        }\n\n        return (\n          <CoordinatorContainer<IDesiredState>\n            getter={c => c.getDesiredState()}\n            nullValue={nullDesiredState}\n          >\n            {(state, stateIsLoading) => {\n              if (stateIsLoading || secretsLoading) {\n                return <Loading />;\n              }\n\n              const reqID = decodeURIComponent(props.match.params.id);\n              const original = state.units.find(u => u.id.toString() === reqID);\n              if (original) {\n                return (\n                  <ServiceForm\n                    payload={new DesiredUnitPayload(original)}\n                    knownSecrets={knownSecrets}\n                  />\n                );\n              }\n\n              return (\n                <div className=\"card bg-danger text-white\">\n                  <div className=\"card-header\">Unknown service ID</div>\n                  <div className=\"card-body\">\n                    <p className=\"card-text\">No service exists with that ID.</p>\n                  </div>\n                </div>\n              );\n            }}\n          </CoordinatorContainer>\n        );\n      }}\n    </CoordinatorContainer>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport cx from \"classnames\";\n\nimport {IDelta, IDesiredUnit} from \"../../common/coordinator\";\nimport {hasPendingDelta} from \"../../common/PendingDiff\";\n\ninterface Tense {\n  create: string;\n  modify: string;\n  restart: string;\n  remove: string;\n  write: string;\n}\n\nexport const futureTense: Tense = {\n  create: \"will create\",\n  modify: \"will modify\",\n  restart: \"will restart\",\n  remove: \"will remove\",\n  write: \"will write\",\n};\n\nexport const pastTense: Tense = {\n  create: \"created\",\n  modify: \"modified\",\n  restart: \"restarted\",\n  remove: \"removed\",\n  write: \"wrote\",\n};\n\ninterface DeltaViewProps {\n  delta: IDelta;\n  headerText: string;\n  emptyText: string;\n  tense: Tense;\n}\n\nexport function DeltaView(props: DeltaViewProps) {\n  if (!hasPendingDelta(props.delta)) {\n    return (\n      <div className=\"card border-success my-3 mx-0\">\n        <div className=\"card-body\">\n          <p className=\"card-text text-success\">\n            <i className=\"fas fa-check-circle mr-3\" />\n            {props.emptyText}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  function createDesiredRow(\n    unit: IDesiredUnit,\n    action: string,\n    textClass: string,\n    iconClass: string\n  ): React.ReactNode {\n    return (\n      <p\n        key={`key-${action}-${unit.id}`}\n        className={cx(\"card-text\", textClass)}\n      >\n        <i className={cx(\"mr-3\", iconClass)} />\n        {action}{\" \"}\n        <Link\n          to={`/admin/services/${encodeURIComponent(unit.id.toString())}`}\n          className={cx(\"font-weight-bold\", textClass)}\n        >\n          {unit.path}\n        </Link>\n      </p>\n    );\n  }\n\n  const changeRows: React.ReactNodeArray = [];\n  for (const unit of props.delta.units_to_add) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.create} unit`,\n        \"text-success\",\n        \"far fa-plus-square\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_change) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.modify} unit`,\n        \"text-info\",\n        \"fas fa-tools\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_restart) {\n    changeRows.push(\n      createDesiredRow(\n        unit,\n        `${props.tense.restart} unit`,\n        \"text-info\",\n        \"fas fa-recycle\"\n      )\n    );\n  }\n  for (const unit of props.delta.units_to_remove) {\n    changeRows.push(\n      <p key={`remove-${unit.path}`} className=\"card-text text-danger\">\n        <i className=\"mr-3 fas fa-fire\" />\n        {props.tense.remove} unit{\" \"}\n        <span className=\"font-weight-bold\">{unit.path}</span>\n      </p>\n    );\n  }\n  for (const filePath of props.delta.files_to_write) {\n    changeRows.push(\n      <p className=\"card-text text-info\">\n        <i className=\"mr-3 far fa-file-alt\" />\n        {props.tense.write} file{\" \"}\n        <span className=\"font-weight-bold\">{filePath}</span>\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"card bg-light my-3 mx-0\">\n      <h5 className=\"card-header\">{props.headerText}</h5>\n      <div className=\"card-body\">{changeRows}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport {ISyncReport} from \"../../common/coordinator\";\n\nconst timeUnits: (\"h\" | \"m\" | \"s\" | \"ms\")[] = [\"h\", \"m\", \"s\", \"ms\"];\n\nfunction reportDuration(d: moment.Duration): string {\n  for (const timeUnit of timeUnits) {\n    const count = d.get(timeUnit);\n    if (count > 0) {\n      return `${count}${timeUnit}`;\n    }\n  }\n  return \"<1ms\";\n}\n\ninterface FieldsViewProps {\n  fields: {[fieldName: string]: any};\n}\n\nfunction FieldsView(props: FieldsViewProps) {\n  const keys = Object.keys(props.fields);\n  if (keys.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"row mt-1\">\n      <div className=\"col-1 px-2\" />\n      <div className=\"col-11\">\n        <ul className=\"list-group-horizontal p-0\">\n          {keys.map(key => (\n            <li key={key} className=\"list-group-item px-2 py-0\">\n              <small className=\"text-muted mr-1\">{key}:</small>\n              <small className=\"text-monospaced\">\n                {props.fields[key].toString()}\n              </small>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\ninterface SyncReportViewProps {\n  reports: ISyncReport[];\n}\n\nexport function SyncReportView(props: SyncReportViewProps) {\n  const reportRows = props.reports.map((report, index) => {\n    const duration = moment.duration(report.elapsed);\n\n    return (\n      <li className=\"list-group-item row\" key={index}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-1 px-2 border-right d-flex justify-content-end pushbot-syncReport--duration\">\n              {reportDuration(duration)}\n            </div>\n            <div className=\"col-11 text-dark\">{report.message}</div>\n          </div>\n          <FieldsView fields={report.fields} />\n        </div>\n      </li>\n    );\n  });\n\n  return <ul className=\"list-group pushbot-syncReport\">{reportRows}</ul>;\n}\n\ninterface PlaceholderSyncReportView {\n  lastReport?: ISyncReport;\n}\n\nexport function PlaceholderSyncReportView(props: PlaceholderSyncReportView) {\n  const elapsed = props.lastReport\n    ? reportDuration(\n        moment.duration(moment().diff(moment.unix(props.lastReport.timestamp)))\n      )\n    : \"...\";\n\n  return (\n    <li className=\"list-group-item row\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-1 border-right\">{elapsed}</div>\n          <div className=\"col-11\">\n            <i className=\"fas fa-circle-notch fa-spin text-dark\" />\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import React, {useContext} from \"react\";\nimport cx from \"classnames\";\n\nimport {CoordinatorContext, ISync} from \"../../common/coordinator\";\nimport {PendingDiffContext} from \"../../common/PendingDiff\";\nimport {NotificationContext} from \"../../common/Notifications\";\nimport {DeltaView, pastTense, futureTense} from \"./DeltaView\";\nimport {SyncReportView, PlaceholderSyncReportView} from \"./SyncReportView\";\n\ninterface SyncViewProps {\n  lastSync: ISync;\n  refresh: () => void;\n}\n\nexport function SyncView(props: SyncViewProps) {\n  const coordinator = useContext(CoordinatorContext);\n  const pendingDiff = useContext(PendingDiffContext);\n  const hub = useContext(NotificationContext);\n\n  const lastDelta = props.lastSync.delta;\n  const lastReport = props.lastSync.reports[props.lastSync.reports.length - 1];\n  const inProgress = props.lastSync.in_progress;\n\n  async function startSync(evt: React.MouseEvent<HTMLButtonElement>) {\n    try {\n      evt.preventDefault();\n      await coordinator.createSync();\n      props.refresh();\n    } catch (err) {\n      hub.addError(err);\n    }\n  }\n\n  if (inProgress) {\n    setTimeout(() => {\n      props.refresh();\n      pendingDiff.refresh();\n    }, 1000);\n  }\n\n  return (\n    <>\n      <DeltaView\n        delta={pendingDiff.delta}\n        emptyText=\"No changes waiting to be applied.\"\n        headerText=\"changes to apply\"\n        tense={futureTense}\n      />\n      <p className=\"mt-2 mb-4\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={inProgress}\n          onClick={startSync}\n        >\n          <i\n            className={cx(\"fas fa-sync-alt mr-2\", {\n              \"fa-spin\": inProgress,\n            })}\n          />\n          Sync\n        </button>\n      </p>\n      <div className=\"my-3\">\n        <h6>{inProgress ? \"current \" : \"most recent \"} sync</h6>\n        <SyncReportView reports={props.lastSync.reports} />\n        {props.lastSync.in_progress && (\n          <PlaceholderSyncReportView lastReport={lastReport} />\n        )}\n      </div>\n      {lastDelta && (\n        <DeltaView\n          delta={lastDelta}\n          emptyText=\"No changes applied.\"\n          headerText=\"applied changes\"\n          tense={pastTense}\n        />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nimport {ISync} from \"../../common/coordinator\";\nimport {CoordinatorContainer} from \"../../common/CoordinatorContainer\";\nimport {Loading} from \"../../common/Loading\";\nimport {SyncView} from \"./SyncView\";\n\nimport \"./Sync.css\";\n\nconst nullSync: ISync = {\n  in_progress: false,\n  reports: [],\n  errors: [],\n};\n\nexport function Sync() {\n  return (\n    <>\n      <h3>sync</h3>\n      <CoordinatorContainer<ISync>\n        getter={c => c.getSync()}\n        nullValue={nullSync}\n      >\n        {(lastSync, isLoading, refresh) => {\n          if (isLoading && lastSync.reports.length === 0) {\n            return <Loading />;\n          } else {\n            return <SyncView lastSync={lastSync} refresh={refresh} />;\n          }\n        }}\n      </CoordinatorContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport memo from \"memoize-one\";\n\nimport {SideNav} from \"./SideNav\";\nimport {Dashboard} from \"./dashboard/Dashboard\";\nimport {People} from \"./people/People\";\nimport {Profile} from \"./profile/Profile\";\nimport {Quotes} from \"./quotes/Quotes\";\nimport {Events} from \"./events/Events\";\nimport {Recent} from \"./recent/Recent\";\nimport {Rem} from \"./rem/Rem\";\nimport {RemEntry} from \"./rem/RemEntry\";\nimport {Services} from \"./admin/services/Services\";\nimport {ServiceEditor} from \"./admin/services/ServiceEditor\";\nimport {Sync} from \"./admin/sync/Sync\";\nimport {UserContext, IUser} from \"./common/Role\";\nimport {\n  CoordinatorContext,\n  Coordinator,\n  nullCoordinator,\n} from \"./common/coordinator\";\nimport {PendingDiffProvider} from \"./common/PendingDiff\";\nimport {NotificationsProvider, NotificationsView} from \"./common/Notifications\";\n\ninterface AuthenticatedProps {\n  user: IUser;\n}\n\nconst coordinatorForUser = memo(\n  (user: IUser): Coordinator => {\n    if (user.coordinatorToken) {\n      return new Coordinator(user.coordinatorToken);\n    } else {\n      return nullCoordinator;\n    }\n  },\n  (newArgs: IUser[], lastArgs: IUser[]) => newArgs[0].id === lastArgs[0].id\n);\n\nexport function Authenticated(props: AuthenticatedProps) {\n  const coordinator = coordinatorForUser(props.user);\n\n  return (\n    <UserContext.Provider value={props.user}>\n      <CoordinatorContext.Provider value={coordinator}>\n        <PendingDiffProvider coordinator={coordinator}>\n          <NotificationsProvider>\n            <div className=\"row mt-md-5\">\n              <div className=\"col-md-2\">\n                <SideNav />\n              </div>\n              <div className=\"col-md-8\">\n                <NotificationsView />\n                <Route path=\"/\" component={Dashboard} exact />\n                <Route path=\"/people\" component={People} exact />\n                <Route path=\"/people/:name\" component={Profile} />\n                <Route path=\"/quotes\" component={Quotes} />\n                <Route path=\"/rem\" component={Rem} exact />\n                <Route path=\"/rem/:key\" component={RemEntry} />\n                <Route path=\"/events\" component={Events} />\n                <Route path=\"/recent\" component={Recent} />\n                <Route path=\"/admin/services\" component={Services} exact />\n                <Route path=\"/admin/services/:id\" component={ServiceEditor} />\n                <Route path=\"/admin/sync\" component={Sync} />\n              </div>\n            </div>\n          </NotificationsProvider>\n        </PendingDiffProvider>\n      </CoordinatorContext.Provider>\n    </UserContext.Provider>\n  );\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport \"./Banner.css\";\n\nconst LOGOUT_URL = `${process.env.REACT_APP_API_BASE_URL}/logout?backTo=true`;\n\ninterface BannerProps {\n  username: string;\n  title: string;\n  avatar: string;\n}\n\nexport const Banner = (props: BannerProps) => {\n  let accountControl = null;\n\n  if (props.username) {\n    let accountElements = [];\n    if (props.title) {\n      accountElements.push(\n        <span key=\"0\" className=\"navbar-text pushbot-navbar-title\">\n          {props.title}\n\n          <i\n            key=\"1\"\n            className=\"far fa-circle pushbot-navbar-separator\"\n            aria-hidden=\"true\"\n          />\n        </span>\n      );\n    }\n    accountElements.push(\n      <Link\n        to={`/people/${props.username}`}\n        key=\"2\"\n        className=\"navbar-text pushbot-navbar-username font-weight-bolder\"\n      >\n        @{props.username}\n      </Link>\n    );\n\n    accountControl = (\n      <>\n        {accountElements}\n        <img className=\"navbar-item pushbot-navbar-avatar\" src={props.avatar} alt=\"\" />\n        <a href={LOGOUT_URL} className=\"navbar-item pushbot-navbar-logout\">\n          <i className=\"fas fa-sign-out-alt\" aria-hidden=\"true\" />\n          Log out\n        </a>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"container-fluid mx-0 px-0\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mx-0\">\n        <button\n          type=\"button\"\n          className=\"navbar-toggler collapsed\"\n          data-toggle=\"collapse\"\n          data-target=\"#bs-example-navbar-collapse-1\"\n          aria-expanded=\"false\"\n        >\n          <span className=\"navbar-toggler-icon\">Toggle navigation</span>\n        </button>\n        <div className=\"navbar-brand flex-grow-1\">pushbot party</div>\n\n        <div\n          className=\"collapse navbar-collapse flex-grow-0\"\n          id=\"bs-example-navbar-collapse-1\"\n        >\n          {accountControl}\n        </div>\n      </nav>\n    </div>\n  );\n};\n","import React, {Component} from \"react\";\n\nimport \"./Login.css\";\n\ninterface LoginProps {\n  authUrl: string;\n}\n\nexport class Login extends Component<LoginProps> {\n  componentDidMount() {\n    document.children[0].classList.add(\"pushbot-login-bg\");\n  }\n\n  render() {\n    return (\n      <div className=\"jumbotron pushbot-login mt-md-5\">\n        <h1>Are there stairs in your house?</h1>\n        <p>\n          <a href={this.props.authUrl} className=\"pushbot-signin-slack\">\n            <img\n              alt=\"Sign in with Slack\"\n              height=\"40\"\n              width=\"172\"\n              src=\"https://platform.slack-edge.com/img/sign_in_with_slack.png\"\n              srcSet=\"https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x\"\n            />\n          </a>\n          so that I may protect you from the\n          <a href=\"https://www.youtube.com/watch?v=7E0ot9iJm_k\">\n            terrible secret of space\n          </a>\n        </p>\n        <p className=\"text-muted\">\n          <em>\n            <small>\n              (Make sure that you choose <strong>#~s</strong> as your Slack\n              team)\n            </small>\n          </em>\n        </p>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    document.children[0].classList.remove(\"pushbot-login-bg\");\n  }\n}\n","import React, {Component} from \"react\";\nimport {QueryRenderer, Environment} from \"react-relay\";\nimport {graphql} from \"babel-plugin-relay/macro\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\nimport {getEnvironment, AUTH_URL, QueryResult} from \"./common/Transport\";\nimport {isNetworkError} from \"./common/errors\";\nimport {Authenticated} from \"./Authenticated\";\nimport {Banner} from \"./Banner\";\nimport {Login} from \"./Login\";\n\nimport {AppQuery} from \"./__generated__/AppQuery.graphql\";\n\nimport \"./App.css\";\n\nexport class App extends Component {\n  private environment: Environment;\n\n  constructor(props: {}) {\n    super(props);\n    this.environment = getEnvironment();\n  }\n\n  render() {\n    const query = graphql`\n      query AppQuery {\n        users {\n          me {\n            id\n            name\n            avatar {\n              image48\n            }\n            roles {\n              name\n            }\n            coordinatorToken\n          }\n        }\n\n        title: documents(set: \"title\") {\n          mine {\n            text\n            found\n          }\n        }\n      }\n    `;\n\n    return (\n      <QueryRenderer<AppQuery>\n        environment={this.environment}\n        query={query}\n        variables={{}}\n        render={this.renderResult}\n      />\n    );\n  }\n\n  renderResult = (result: QueryResult<AppQuery>) => {\n    let body = null;\n    let username = \"\";\n    let title = \"\";\n    let avatar = \"\";\n\n    if (isNetworkError(result.error)) {\n      if (result.error.responseStatus === 401) {\n        const backTo = encodeURIComponent(document.location!.pathname);\n        body = <Login authUrl={`${AUTH_URL}?backTo=${backTo}`} />;\n      } else {\n        body = <div>{result.error.message}</div>;\n      }\n    } else if (result.props) {\n      const user = result.props.users.me;\n      username = user.name;\n      if (result.props.title) {\n        title = result.props.title.mine.text;\n      }\n      if (user.avatar && user.avatar.image48) {\n        avatar = user.avatar.image48;\n      }\n\n      body = <Authenticated user={user} />;\n    } else {\n      body = (\n        <div className=\"row mt-md-5 pushbot-loading\">\n          <p className=\"mx-auto\">\n            <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />\n            loading\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <Router>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <Banner username={username} title={title} avatar={avatar} />\n          </div>\n          {body}\n        </div>\n      </Router>\n    );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootswatch/dist/spacelab/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport \"jquery\";\nimport \"popper.js\";\nimport \"bootstrap\";\nimport \"@fortawesome/fontawesome-free\";\nimport \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}